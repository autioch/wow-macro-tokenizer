[
  {
    "parsed": false,
    "line": "#Showtooltip Fear",
    "results": []
  },
  {
    "parsed": false,
    "line": "#showooltip Web",
    "results": []
  },
  {
    "parsed": false,
    "line": "#showtoolip",
    "results": []
  },
  {
    "parsed": true,
    "line": "#showtooltip",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip  Demonic Soulstone",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Demonic Soulstone",
        "text": "Demonic Soulstone",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Aegis of the Coliseum",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Aegis of the Coliseum",
        "text": "Aegis of the Coliseum",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Arcane Blast",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Arcane Blast",
        "text": "Arcane Blast",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Berserk",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Berserk",
        "text": "Berserk",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Black War Tiger",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Black War Tiger",
        "text": "Black War Tiger",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Bladestorm",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Bladestorm",
        "text": "Bladestorm",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Blink",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Blink",
        "text": "Blink",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Blue Wind Rider",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Blue Wind Rider",
        "text": "Blue Wind Rider",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Bone Shield",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Bone Shield",
        "text": "Bone Shield",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Bulwark of the Royal Guard",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Bulwark of the Royal Guard",
        "text": "Bulwark of the Royal Guard",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Charge",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Charge",
        "text": "Charge",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Charger",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Charger",
        "text": "Charger",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Conjured Mana Strudel",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Conjured Mana Strudel",
        "text": "Conjured Mana Strudel",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Corroded Skeleton Key",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Corroded Skeleton Key",
        "text": "Corroded Skeleton Key",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Corruption",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Corruption",
        "text": "Corruption",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Counterspell",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Counterspell",
        "text": "Counterspell",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Curse of Weakness",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Curse of Weakness",
        "text": "Curse of Weakness",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Dancing Rune Weapon",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Dancing Rune Weapon",
        "text": "Dancing Rune Weapon",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Death Pact",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Death Pact",
        "text": "Death Pact",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Deterrence",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Deterrence",
        "text": "Deterrence",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Devastate",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Devastate",
        "text": "Devastate",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Devouring Plague",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Devouring Plague",
        "text": "Devouring Plague",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Disarm",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Disarm",
        "text": "Disarm",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Edge of Ruin",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Edge of Ruin",
        "text": "Edge of Ruin",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Enraged Regeneration",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Enraged Regeneration",
        "text": "Enraged Regeneration",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Frostwolf Howler",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Frostwolf Howler",
        "text": "Frostwolf Howler",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Gnaw",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Gnaw",
        "text": "Gnaw",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Grand Firestone",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Grand Firestone",
        "text": "Grand Firestone",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Grand Spellstone",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Grand Spellstone",
        "text": "Grand Spellstone",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Hammer of Justice",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Hammer of Justice",
        "text": "Hammer of Justice",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Hammer of Wrath",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Hammer of Wrath",
        "text": "Hammer of Wrath",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Heart Strike",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Heart Strike",
        "text": "Heart Strike",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Heroic Throw",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Heroic Throw",
        "text": "Heroic Throw",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Hex",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Hex",
        "text": "Hex",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Howling",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Howling",
        "text": "Howling",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Huddle",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Huddle",
        "text": "Huddle",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Ice Barrier",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Ice Barrier",
        "text": "Ice Barrier",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Ice Block",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Ice Block",
        "text": "Ice Block",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Intercept",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Intercept",
        "text": "Intercept",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Judgement of Justice",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Judgement of Justice",
        "text": "Judgement of Justice",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Judgement of Light",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Judgement of Light",
        "text": "Judgement of Light",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Judgement of Wisdom",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Judgement of Wisdom",
        "text": "Judgement of Wisdom",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Leap",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Leap",
        "text": "Leap",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Mana Sapphire",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Mana Sapphire",
        "text": "Mana Sapphire",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Mind Blast",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Mind Blast",
        "text": "Mind Blast",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Mind Flay",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Mind Flay",
        "text": "Mind Flay",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Mortal Strike",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Mortal Strike",
        "text": "Mortal Strike",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Nature's Swiftness",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Nature's Swiftness",
        "text": "Nature's Swiftness",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Nevermelting Ice Crystal",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Nevermelting Ice Crystal",
        "text": "Nevermelting Ice Crystal",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Overpower",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Overpower",
        "text": "Overpower",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Pestilence",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Pestilence",
        "text": "Pestilence",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Polymorph",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Polymorph",
        "text": "Polymorph",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Pummel",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Pummel",
        "text": "Pummel",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Rapid Fire",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Rapid Fire",
        "text": "Rapid Fire",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Rend",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Rend",
        "text": "Rend",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Repentance",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Repentance",
        "text": "Repentance",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Roar of Recovery",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Roar of Recovery",
        "text": "Roar of Recovery",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Royal Crest of Lordaeron",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Royal Crest of Lordaeron",
        "text": "Royal Crest of Lordaeron",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Scatter Shot",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Scatter Shot",
        "text": "Scatter Shot",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Shadow Bolt(Rank 13)",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Shadow Bolt",
        "text": "Shadow Bolt",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellLevel",
        "value": "(Rank 13)",
        "text": "(Rank 13)",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Shield Bash",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Shield Bash",
        "text": "Shield Bash",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Shield Block",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Shield Block",
        "text": "Shield Block",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Shield Slam",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Shield Slam",
        "text": "Shield Slam",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Shield Wall",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Shield Wall",
        "text": "Shield Wall",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Silence",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Silence",
        "text": "Silence",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Spell Reflection",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Spell Reflection",
        "text": "Spell Reflection",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Summon Charger",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Summon Charger",
        "text": "Summon Charger",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Summon Gargoyle",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Summon Gargoyle",
        "text": "Summon Gargoyle",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Summon Warhorse",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Summon Warhorse",
        "text": "Summon Warhorse",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Survival Instincts",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Survival Instincts",
        "text": "Survival Instincts",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Swift Burgundy Wolf",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Swift Burgundy Wolf",
        "text": "Swift Burgundy Wolf",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Swift Flight Form(Shapeshift)",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Swift Flight Form",
        "text": "Swift Flight Form",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellMode",
        "value": "(Shapeshift)",
        "text": "(Shapeshift)",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Swift Moonsaber",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Swift Moonsaber",
        "text": "Swift Moonsaber",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Swift Orange Raptor",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Swift Orange Raptor",
        "text": "Swift Orange Raptor",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Swift Purple Gryphon",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Swift Purple Gryphon",
        "text": "Swift Purple Gryphon",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Swift Purple Hawkstrider",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Swift Purple Hawkstrider",
        "text": "Swift Purple Hawkstrider",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Swift White Steed",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Swift White Steed",
        "text": "Swift White Steed",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Turn Evil",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Turn Evil",
        "text": "Turn Evil",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Unstable Affliction(Rank 4)",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Unstable Affliction",
        "text": "Unstable Affliction",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellLevel",
        "value": "(Rank 4)",
        "text": "(Rank 4)",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip Wind Shear",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Wind Shear",
        "text": "Wind Shear",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [combat] Eviscerate; Stealth",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "combat",
        "text": "combat",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Eviscerate",
        "text": "Eviscerate",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Stealth",
        "text": "Stealth",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [combat] Ferocious Bite; Prowl",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "combat",
        "text": "combat",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Ferocious Bite",
        "text": "Ferocious Bite",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Prowl",
        "text": "Prowl",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable]",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] Armored Blue Wind Rider; Swift Warstrider",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Armored Blue Wind Rider",
        "text": "Armored Blue Wind Rider",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "spellName",
        "value": "Swift Warstrider",
        "text": "Swift Warstrider",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] Ashes of Al'ar; Swift Razzashi Raptor",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Ashes of Al'ar",
        "text": "Ashes of Al'ar",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "spellName",
        "value": "Swift Razzashi Raptor",
        "text": "Swift Razzashi Raptor",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] Blue Wind Rider; Swift Timber Wolf",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Blue Wind Rider",
        "text": "Blue Wind Rider",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Swift Timber Wolf",
        "text": "Swift Timber Wolf",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] Swift Purple Wind Rider; Acherus Deathcharger",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Swift Purple Wind Rider",
        "text": "Swift Purple Wind Rider",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "spellName",
        "value": "Acherus Deathcharger",
        "text": "Acherus Deathcharger",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] Swift Purple gryphon; Black War Tiger;",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Swift Purple gryphon",
        "text": "Swift Purple gryphon",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "Black War Tiger",
        "text": "Black War Tiger",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] Swift Red Gryphon; Black War Tiger",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Swift Red Gryphon",
        "text": "Swift Red Gryphon",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "spellName",
        "value": "Black War Tiger",
        "text": "Black War Tiger",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] Time-Lost Proto-Drake; Red Skeletal Warhorse",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Time-Lost Proto-Drake",
        "text": "Time-Lost Proto-Drake",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "spellName",
        "value": "Red Skeletal Warhorse",
        "text": "Red Skeletal Warhorse",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [flyable] fly; run;",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "fly",
        "text": "fly",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "run",
        "text": "run",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip [nopet] Summon Water Elemental; Freeze",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "nopet",
        "text": "nopet",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Summon Water Elemental",
        "text": "Summon Water Elemental",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "Freeze",
        "text": "Freeze",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      }
    ]
  },
  {
    "parsed": true,
    "line": "#showtooltip seduction",
    "results": [
      {
        "type": "tooltip",
        "value": "#showtooltip",
        "text": "#showtooltip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "seduction",
        "text": "seduction",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": ".gm ingame",
    "results": [
      {
        "type": "server",
        "value": ".gm",
        "text": ".gm",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "ingame",
        "text": "ingame",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": ".server info",
    "results": [
      {
        "type": "server",
        "value": ".server",
        "text": ".server",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "info",
        "text": "info",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      }
    ]
  },
  {
    "parsed": false,
    "line": "/",
    "results": []
  },
  {
    "parsed": true,
    "line": "/2 --- |cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r wszystkie glify, 100g/szt",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
        "text": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "spellName",
        "value": "wszystkie glify",
        "text": "wszystkie glify",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "number",
        "value": "100",
        "text": "100",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 163,
        "lineBreaks": 0,
        "line": 1,
        "col": 164
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 164,
        "lineBreaks": 0,
        "line": 1,
        "col": 165
      },
      {
        "type": "spellName",
        "value": "szt",
        "text": "szt",
        "offset": 165,
        "lineBreaks": 0,
        "line": 1,
        "col": 166
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 ----------------",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 Icc10 guild run 1 heal (szam), 4 bossy hc, reszta az do LK na normalu, bijemy mniej wiecej do 23, ALL NA ROLL, wymagany TS",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Icc",
        "text": "Icc",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "number",
        "value": "10",
        "text": "10",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "guild run",
        "text": "guild run",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "heal",
        "text": "heal",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "szam",
        "text": "szam",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "bossy hc",
        "text": "bossy hc",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "spellName",
        "value": "reszta az do LK na normalu",
        "text": "reszta az do LK na normalu",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "spellName",
        "value": "bijemy mniej wiecej do",
        "text": "bijemy mniej wiecej do",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 96,
        "lineBreaks": 0,
        "line": 1,
        "col": 97
      },
      {
        "type": "number",
        "value": "23",
        "text": "23",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 99,
        "lineBreaks": 0,
        "line": 1,
        "col": 100
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "spellName",
        "value": "ALL NA ROLL",
        "text": "ALL NA ROLL",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "spellName",
        "value": "wymagany TS",
        "text": "wymagany TS",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 VoA25 1 heal (druid), 1 tank (war), all na roll, 2 bossy, czekamy pod fire",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "VoA",
        "text": "VoA",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "number",
        "value": "25",
        "text": "25",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "heal",
        "text": "heal",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "druid",
        "text": "druid",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "tank",
        "text": "tank",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "spellName",
        "value": "war",
        "text": "war",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "spellName",
        "value": "all na roll",
        "text": "all na roll",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "bossy",
        "text": "bossy",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      },
      {
        "type": "spellName",
        "value": "czekamy pod fire",
        "text": "czekamy pod fire",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 VoA25 2 heal, 11 dps, all na roll, pve wedle speca, pvp wedle klasy, 2 bossy",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "VoA",
        "text": "VoA",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "number",
        "value": "25",
        "text": "25",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "heal",
        "text": "heal",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "number",
        "value": "11",
        "text": "11",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "dps",
        "text": "dps",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "all na roll",
        "text": "all na roll",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "pve wedle speca",
        "text": "pve wedle speca",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "spellName",
        "value": "pvp wedle klasy",
        "text": "pvp wedle klasy",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "spellName",
        "value": "bossy",
        "text": "bossy",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 kupie Dark Iron Ore, Fiery Core, Lava Core, Core Leather, Blood of the Mountain, kazda ilosc w rozsadnej cenie",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "kupie Dark Iron Ore",
        "text": "kupie Dark Iron Ore",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "Fiery Core",
        "text": "Fiery Core",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "Lava Core",
        "text": "Lava Core",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "spellName",
        "value": "Core Leather",
        "text": "Core Leather",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      },
      {
        "type": "spellName",
        "value": "Blood of the Mountain",
        "text": "Blood of the Mountain",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "spellName",
        "value": "kazda ilosc w rozsadnej cenie",
        "text": "kazda ilosc w rozsadnej cenie",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 wszystkie glify, 100g/szt",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "wszystkie glify",
        "text": "wszystkie glify",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "100",
        "text": "100",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "szt",
        "text": "szt",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 |cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////////////////f|h[Inscription]|h|r full - wszystkie glify 100g/szt, mam tez |cffffd000|Henchant:64051|h[Inscription: Rituals of the New Moon]|h|r",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////////////////f|h[Inscription]|h|r full - wszystkie glify 100g/szt, mam tez |cffffd000|Henchant:64051|h[Inscription: Rituals of the New Moon]|h|r",
        "text": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////////////////f|h[Inscription]|h|r full - wszystkie glify 100g/szt, mam tez |cffffd000|Henchant:64051|h[Inscription: Rituals of the New Moon]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 |cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
        "text": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 |cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+b/////P/7/B56d/Pgf+//BwMBAAX4////HAA5w8D4/vK5//////////////////2/Dw///D|h[Leatherworking]|h|r 8/8 ICC 8/8 ToC 6/8 Uldu",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+b/////P/7/B56d/Pgf+//BwMBAAX4////HAA5w8D4/vK5//////////////////2/Dw///D|h[Leatherworking]|h|r",
        "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+b/////P/7/B56d/Pgf+//BwMBAAX4////HAA5w8D4/vK5//////////////////2/Dw///D|h[Leatherworking]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 162,
        "lineBreaks": 0,
        "line": 1,
        "col": 163
      },
      {
        "type": "spellName",
        "value": "ICC",
        "text": "ICC",
        "offset": 163,
        "lineBreaks": 0,
        "line": 1,
        "col": 164
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 166,
        "lineBreaks": 0,
        "line": 1,
        "col": 167
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 167,
        "lineBreaks": 0,
        "line": 1,
        "col": 168
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "spellName",
        "value": "ToC",
        "text": "ToC",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "number",
        "value": "6",
        "text": "6",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "spellName",
        "value": "Uldu",
        "text": "Uldu",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      }
    ]
  },
  {
    "parsed": true,
    "line": "/2 |cffffd000|Htrade:51313:450:450:18EED3C9:4//////////7////v/vPpgfAw/2A7sAC7fzz907//f3/H////vT|h[Enchanting]|h|r twoje matsy + 50g",
    "results": [
      {
        "type": "chat",
        "value": "/2",
        "text": "/2",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51313:450:450:18EED3C9:4//////////7////v/vPpgfAw/2A7sAC7fzz907//f3/H////vT|h[Enchanting]|h|r",
        "text": "|cffffd000|Htrade:51313:450:450:18EED3C9:4//////////7////v/vPpgfAw/2A7sAC7fzz907//f3/H////vT|h[Enchanting]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "spellName",
        "value": "twoje matsy",
        "text": "twoje matsy",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 125,
        "lineBreaks": 0,
        "line": 1,
        "col": 126
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "number",
        "value": "50",
        "text": "50",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      }
    ]
  },
  {
    "parsed": true,
    "line": "/3 WTS |cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
    "results": [
      {
        "type": "chat",
        "value": "/3",
        "text": "/3",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "WTS",
        "text": "WTS",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
        "text": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/3 kupie Golden Rod",
    "results": [
      {
        "type": "chat",
        "value": "/3",
        "text": "/3",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "kupie Golden Rod",
        "text": "kupie Golden Rod",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      }
    ]
  },
  {
    "parsed": true,
    "line": "/3 kupie |cff71d5ff|Hspell:22749|h[Enchant Weapon - Spellpower]|h|r (Molten Core), mam matsy",
    "results": [
      {
        "type": "chat",
        "value": "/3",
        "text": "/3",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "kupie",
        "text": "kupie",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "linkSpell",
        "value": "|cff71d5ff|Hspell:22749|h[Enchant Weapon - Spellpower]|h|r",
        "text": "|cff71d5ff|Hspell:22749|h[Enchant Weapon - Spellpower]|h|r",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "spellName",
        "value": "Molten Core",
        "text": "Molten Core",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "spellName",
        "value": "mam matsy",
        "text": "mam matsy",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      }
    ]
  },
  {
    "parsed": true,
    "line": "/3 |cffffd000|Htrade:3909:122:150:1D6B7:6//yrCAIwthrZCAAgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|h[Tailoring]|h|r za matsy",
    "results": [
      {
        "type": "chat",
        "value": "/3",
        "text": "/3",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:3909:122:150:1D6B7:6//yrCAIwthrZCAAgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|h[Tailoring]|h|r",
        "text": "|cffffd000|Htrade:3909:122:150:1D6B7:6//yrCAIwthrZCAAgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|h[Tailoring]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "spellName",
        "value": "za matsy",
        "text": "za matsy",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      }
    ]
  },
  {
    "parsed": true,
    "line": "/3 |cffffd000|Htrade:51311:450:450:18ED0F37:8//3v+NtNzjpvMHBAEcwHIBEh/Jg/vBEAAAAAg+RAAAA6////////f//PjaW1wvR2PH5i39nbIC+/D8Po/v/+///////r3D|h[Jewelcrafting]|h|r FULL, gem +40g",
    "results": [
      {
        "type": "chat",
        "value": "/3",
        "text": "/3",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51311:450:450:18ED0F37:8//3v+NtNzjpvMHBAEcwHIBEh/Jg/vBEAAAAAg+RAAAA6////////f//PjaW1wvR2PH5i39nbIC+/D8Po/v/+///////r3D|h[Jewelcrafting]|h|r",
        "text": "|cffffd000|Htrade:51311:450:450:18ED0F37:8//3v+NtNzjpvMHBAEcwHIBEh/Jg/vBEAAAAAg+RAAAA6////////f//PjaW1wvR2PH5i39nbIC+/D8Po/v/+///////r3D|h[Jewelcrafting]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "spellName",
        "value": "FULL",
        "text": "FULL",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 165,
        "lineBreaks": 0,
        "line": 1,
        "col": 166
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 166,
        "lineBreaks": 0,
        "line": 1,
        "col": 167
      },
      {
        "type": "spellName",
        "value": "gem",
        "text": "gem",
        "offset": 167,
        "lineBreaks": 0,
        "line": 1,
        "col": 168
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "number",
        "value": "40",
        "text": "40",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      }
    ]
  },
  {
    "parsed": true,
    "line": "/4 ToC10n LF 1 rdps (ele shaman)",
    "results": [
      {
        "type": "chat",
        "value": "/4",
        "text": "/4",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "ToC",
        "text": "ToC",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "number",
        "value": "10",
        "text": "10",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "n LF",
        "text": "n LF",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "rdps",
        "text": "rdps",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "ele shaman",
        "text": "ele shaman",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/4 WTS |cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
    "results": [
      {
        "type": "chat",
        "value": "/4",
        "text": "/4",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "WTS",
        "text": "WTS",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
        "text": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/4 |cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r wszystkie przepisy WotLK",
    "results": [
      {
        "type": "chat",
        "value": "/4",
        "text": "/4",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "spellName",
        "value": "wszystkie przepisy WotLK",
        "text": "wszystkie przepisy WotLK",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      }
    ]
  },
  {
    "parsed": true,
    "line": "/4 |cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r wszystkie przepisy WotLK, tylko twoje matsy",
    "results": [
      {
        "type": "chat",
        "value": "/4",
        "text": "/4",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "spellName",
        "value": "wszystkie przepisy WotLK",
        "text": "wszystkie przepisy WotLK",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "spellName",
        "value": "tylko twoje matsy",
        "text": "tylko twoje matsy",
        "offset": 185,
        "lineBreaks": 0,
        "line": 1,
        "col": 186
      }
    ]
  },
  {
    "parsed": true,
    "line": "/7 Gildia PvE \" Socially Awkward\" poszukuje aktywnych ludzi do stalej grupy raidowej. Najwiekszy nacisk kladziemy obecnie na ICC10/25 oraz TOGC 25. Wymagamy (co najmniej) podstawowego ogaru wlasnej klasy oraz GS 5K +. System DKP. Zainteresowani /w me",
    "results": [
      {
        "type": "chat",
        "value": "/7",
        "text": "/7",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Gildia PvE",
        "text": "Gildia PvE",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Socially Awkward",
        "text": "Socially Awkward",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "poszukuje aktywnych ludzi do stalej grupy raidowej",
        "text": "poszukuje aktywnych ludzi do stalej grupy raidowej",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "spellName",
        "value": "Najwiekszy nacisk kladziemy obecnie na ICC",
        "text": "Najwiekszy nacisk kladziemy obecnie na ICC",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "number",
        "value": "10",
        "text": "10",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "number",
        "value": "25",
        "text": "25",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "spellName",
        "value": "oraz TOGC",
        "text": "oraz TOGC",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "number",
        "value": "25",
        "text": "25",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "spellName",
        "value": "Wymagamy",
        "text": "Wymagamy",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "spellName",
        "value": "co najmniej",
        "text": "co najmniej",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "spellName",
        "value": "podstawowego ogaru wlasnej klasy oraz GS",
        "text": "podstawowego ogaru wlasnej klasy oraz GS",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      },
      {
        "type": "number",
        "value": "5",
        "text": "5",
        "offset": 212,
        "lineBreaks": 0,
        "line": 1,
        "col": 213
      },
      {
        "type": "spellName",
        "value": "K",
        "text": "K",
        "offset": 213,
        "lineBreaks": 0,
        "line": 1,
        "col": 214
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 214,
        "lineBreaks": 0,
        "line": 1,
        "col": 215
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 215,
        "lineBreaks": 0,
        "line": 1,
        "col": 216
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 216,
        "lineBreaks": 0,
        "line": 1,
        "col": 217
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 217,
        "lineBreaks": 0,
        "line": 1,
        "col": 218
      },
      {
        "type": "spellName",
        "value": "System DKP",
        "text": "System DKP",
        "offset": 218,
        "lineBreaks": 0,
        "line": 1,
        "col": 219
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 228,
        "lineBreaks": 0,
        "line": 1,
        "col": 229
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 229,
        "lineBreaks": 0,
        "line": 1,
        "col": 230
      },
      {
        "type": "spellName",
        "value": "Zainteresowani",
        "text": "Zainteresowani",
        "offset": 230,
        "lineBreaks": 0,
        "line": 1,
        "col": 231
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 244,
        "lineBreaks": 0,
        "line": 1,
        "col": 245
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 245,
        "lineBreaks": 0,
        "line": 1,
        "col": 246
      },
      {
        "type": "spellName",
        "value": "w me",
        "text": "w me",
        "offset": 246,
        "lineBreaks": 0,
        "line": 1,
        "col": 247
      }
    ]
  },
  {
    "parsed": true,
    "line": "/afk",
    "results": [
      {
        "type": "command",
        "value": "/afk",
        "text": "/afk",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura Bladestorm",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Bladestorm",
        "text": "Bladestorm",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura Deterrence",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Deterrence",
        "text": "Deterrence",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura Divine Shield",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Divine Shield",
        "text": "Divine Shield",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura Hand of Protection",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Hand of Protection",
        "text": "Hand of Protection",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura Ice Block",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Ice Block",
        "text": "Ice Block",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura Lichborne",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Lichborne",
        "text": "Lichborne",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura Mana Shield",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Mana Shield",
        "text": "Mana Shield",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura bladestorm",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "bladestorm",
        "text": "bladestorm",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cancelaura dampen magic",
    "results": [
      {
        "type": "command",
        "value": "/cancelaura",
        "text": "/cancelaura",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "dampen magic",
        "text": "dampen magic",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast !Inner Focus",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Inner Focus",
        "text": "Inner Focus",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast !Presence of Mind",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Presence of Mind",
        "text": "Presence of Mind",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast !Rune Strike",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Rune Strike",
        "text": "Rune Strike",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Aimed Shot",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Aimed Shot",
        "text": "Aimed Shot",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Arcane Blast",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Arcane Blast",
        "text": "Arcane Blast",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Arcane Power",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Arcane Power",
        "text": "Arcane Power",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Arcane Shot",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Arcane Shot",
        "text": "Arcane Shot",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Aspect of the Cheetah",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Aspect of the Cheetah",
        "text": "Aspect of the Cheetah",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Aspect of the Dragonhawk",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Aspect of the Dragonhawk",
        "text": "Aspect of the Dragonhawk",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Avenging Wrath",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Avenging Wrath",
        "text": "Avenging Wrath",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Battle Stance",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Battle Stance",
        "text": "Battle Stance",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Berserk",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Berserk",
        "text": "Berserk",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Berserker Stance",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Berserker Stance",
        "text": "Berserker Stance",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Blink",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Blink",
        "text": "Blink",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Blood Tap",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Blood Tap",
        "text": "Blood Tap",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Bloodrage",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Bloodrage",
        "text": "Bloodrage",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Bone Shield",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Bone Shield",
        "text": "Bone Shield",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Call of the Wild",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Call of the Wild",
        "text": "Call of the Wild",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Charge",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Charge",
        "text": "Charge",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Chimera Shot",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Chimera Shot",
        "text": "Chimera Shot",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Corruption",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Corruption",
        "text": "Corruption",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Counterspell",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Counterspell",
        "text": "Counterspell",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Cower",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Cower",
        "text": "Cower",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Crusader Strike",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Crusader Strike",
        "text": "Crusader Strike",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Cyclone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Cyclone",
        "text": "Cyclone",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Dancing Rune Weapon",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Dancing Rune Weapon",
        "text": "Dancing Rune Weapon",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Death Pact",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Death Pact",
        "text": "Death Pact",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Defensive Stance",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Defensive Stance",
        "text": "Defensive Stance",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Deterrence",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Deterrence",
        "text": "Deterrence",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Devastate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Devastate",
        "text": "Devastate",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Devouring Plague",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Devouring Plague",
        "text": "Devouring Plague",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Disarm",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Disarm",
        "text": "Disarm",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Dispel magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Dispel magic",
        "text": "Dispel magic",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Dispersion",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Dispersion",
        "text": "Dispersion",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Divine Shield",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Divine Shield",
        "text": "Divine Shield",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Divine Storm",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Divine Storm",
        "text": "Divine Storm",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Elemental Mastery",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Elemental Mastery",
        "text": "Elemental Mastery",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Enraged Regeneration",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Enraged Regeneration",
        "text": "Enraged Regeneration",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Entangling Roots",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Entangling Roots",
        "text": "Entangling Roots",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Explosive Shot",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Explosive Shot",
        "text": "Explosive Shot",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Faerie Fire (Feral)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Faerie Fire",
        "text": "Faerie Fire",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellMode",
        "value": "(Feral)",
        "text": "(Feral)",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Fear",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Fear",
        "text": "Fear",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Feed Pet",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Feed Pet",
        "text": "Feed Pet",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Flame Shock",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Flame Shock",
        "text": "Flame Shock",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Frenzied Regeneration",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Frenzied Regeneration",
        "text": "Frenzied Regeneration",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Frost Presence",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Frost Presence",
        "text": "Frost Presence",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Gift of the Naaru(Racial)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Gift of the Naaru",
        "text": "Gift of the Naaru",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellMode",
        "value": "(Racial)",
        "text": "(Racial)",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Gnaw",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Gnaw",
        "text": "Gnaw",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Grounding Totem",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Grounding Totem",
        "text": "Grounding Totem",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Hammer of Justice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Hammer of Justice",
        "text": "Hammer of Justice",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Hammer of Wrath",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Hammer of Wrath",
        "text": "Hammer of Wrath",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Hammer of the Righteous",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Hammer of the Righteous",
        "text": "Hammer of the Righteous",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Healing Wave",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Healing Wave",
        "text": "Healing Wave",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Heart Strike",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Heart Strike",
        "text": "Heart Strike",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Heroic Throw",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Heroic Throw",
        "text": "Heroic Throw",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Hex",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Hex",
        "text": "Hex",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Hibernate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Hibernate",
        "text": "Hibernate",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Huddle",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Huddle",
        "text": "Huddle",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Ice Barrier",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Ice Barrier",
        "text": "Ice Barrier",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Ice Block",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Ice Block",
        "text": "Ice Block",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Icy Veins",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Icy Veins",
        "text": "Icy Veins",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Inner Focus",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Inner Focus",
        "text": "Inner Focus",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Intercept",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Intercept",
        "text": "Intercept",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Judgement of Justice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Judgement of Justice",
        "text": "Judgement of Justice",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Judgement of Light",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Judgement of Light",
        "text": "Judgement of Light",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Judgement of Wisdom",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Judgement of Wisdom",
        "text": "Judgement of Wisdom",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Kill Command",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Kill Command",
        "text": "Kill Command",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Lifeblood",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Lifeblood",
        "text": "Lifeblood",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Mangle (Bear)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Mangle",
        "text": "Mangle",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellMode",
        "value": "(Bear)",
        "text": "(Bear)",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Mangle (Cat)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Mangle",
        "text": "Mangle",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellMode",
        "value": "(Cat)",
        "text": "(Cat)",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Mark of Supremacy",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Mark of Supremacy",
        "text": "Mark of Supremacy",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Mind Blast",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Mind Blast",
        "text": "Mind Blast",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Mirror Image",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Mirror Image",
        "text": "Mirror Image",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Mortal Strike",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Mortal Strike",
        "text": "Mortal Strike",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Mutilate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Mutilate",
        "text": "Mutilate",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Nature's Swiftness",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Nature's Swiftness",
        "text": "Nature's Swiftness",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Nevermelting Ice Crystal",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Nevermelting Ice Crystal",
        "text": "Nevermelting Ice Crystal",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Obliterate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Obliterate",
        "text": "Obliterate",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Overpower",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Overpower",
        "text": "Overpower",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Pestilence",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Pestilence",
        "text": "Pestilence",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Pin",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Pin",
        "text": "Pin",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Polymorph",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Polymorph",
        "text": "Polymorph",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Psychic Horror",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Psychic Horror",
        "text": "Psychic Horror",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Psychic Scream",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Psychic Scream",
        "text": "Psychic Scream",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Pummel",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Pummel",
        "text": "Pummel",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Rapid Fire",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Rapid Fire",
        "text": "Rapid Fire",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Rend",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Rend",
        "text": "Rend",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Repentance",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Repentance",
        "text": "Repentance",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Ritual of Summoning",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Ritual of Summoning",
        "text": "Ritual of Summoning",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Roar of Recovery",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Roar of Recovery",
        "text": "Roar of Recovery",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Scatter Shot",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Scatter Shot",
        "text": "Scatter Shot",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Serpent Sting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Serpent Sting",
        "text": "Serpent Sting",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shadow Bolt(Rank 13)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shadow Bolt",
        "text": "Shadow Bolt",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellLevel",
        "value": "(Rank 13)",
        "text": "(Rank 13)",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shadow Cleave(Demon)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shadow Cleave",
        "text": "Shadow Cleave",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellMode",
        "value": "(Demon)",
        "text": "(Demon)",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shadow Word: Death",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shadow Word",
        "text": "Shadow Word",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Death",
        "text": "Death",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shadow Word: Pain",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shadow Word",
        "text": "Shadow Word",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Pain",
        "text": "Pain",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shadowfiend",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shadowfiend",
        "text": "Shadowfiend",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shield Bash",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shield Bash",
        "text": "Shield Bash",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shield Block",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shield Block",
        "text": "Shield Block",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shield Slam",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shield Slam",
        "text": "Shield Slam",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shield Wall",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shield Wall",
        "text": "Shield Wall",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Shield of the Righteous",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Shield of the Righteous",
        "text": "Shield of the Righteous",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Silence",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Silence",
        "text": "Silence",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Sinister Strike",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Sinister Strike",
        "text": "Sinister Strike",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Spell Reflection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Spell Reflection",
        "text": "Spell Reflection",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Summon Gargoyle",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Summon Gargoyle",
        "text": "Summon Gargoyle",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Survival Instincts",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Survival Instincts",
        "text": "Survival Instincts",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Talisman of Volatile Power",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Talisman of Volatile Power",
        "text": "Talisman of Volatile Power",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Tidal Force",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Tidal Force",
        "text": "Tidal Force",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Tremor Totem",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Tremor Totem",
        "text": "Tremor Totem",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Trueshot Aura",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Trueshot Aura",
        "text": "Trueshot Aura",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Turn Evil",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Turn Evil",
        "text": "Turn Evil",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Unholy Presence",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Unholy Presence",
        "text": "Unholy Presence",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Unstable Affliction(Rank 4)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Unstable Affliction",
        "text": "Unstable Affliction",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellLevel",
        "value": "(Rank 4)",
        "text": "(Rank 4)",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Vampiric Touch",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Vampiric Touch",
        "text": "Vampiric Touch",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Warts-B-Gone Lip Balm",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Warts-B-Gone Lip Balm",
        "text": "Warts-B-Gone Lip Balm",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Web",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Web",
        "text": "Web",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast Wind Shear",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "Wind Shear",
        "text": "Wind Shear",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [@Shockinhorny] Resurrection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "at",
        "value": "@",
        "text": "@",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "Shockinhorny",
        "text": "Shockinhorny",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Resurrection",
        "text": "Resurrection",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [@pet,dead] Revive Pet",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "at",
        "value": "@",
        "text": "@",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "dead",
        "text": "dead",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Revive Pet",
        "text": "Revive Pet",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:1,target=pettarget] Seduction",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "pettarget",
        "text": "pettarget",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Seduction",
        "text": "Seduction",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:1] Conjured Mana Strudel",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Conjured Mana Strudel",
        "text": "Conjured Mana Strudel",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:1] Mana Sapphire",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Mana Sapphire",
        "text": "Mana Sapphire",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:2,target=playertarget] Seduction",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "playertarget",
        "text": "playertarget",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "spellName",
        "value": "Seduction",
        "text": "Seduction",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:2] Conjure Mana Gem",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Conjure Mana Gem",
        "text": "Conjure Mana Gem",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:2] Conjure Refreshment",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Conjure Refreshment",
        "text": "Conjure Refreshment",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:2] Create Firestone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Create Firestone",
        "text": "Create Firestone",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:2] Create Soulstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Create Soulstone",
        "text": "Create Soulstone",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [button:2] Create Spellstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Create Spellstone",
        "text": "Create Spellstone",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [combat, harm] Cold Blood",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "combat",
        "text": "combat",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "harm",
        "text": "harm",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Cold Blood",
        "text": "Cold Blood",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [combat, harm] Eviscerate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "combat",
        "text": "combat",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "harm",
        "text": "harm",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Eviscerate",
        "text": "Eviscerate",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [combat, harm] Ferocious Bite",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "combat",
        "text": "combat",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "harm",
        "text": "harm",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Ferocious Bite",
        "text": "Ferocious Bite",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [combat, noharm] Noggenfogger Elixir",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "combat",
        "text": "combat",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "noharm",
        "text": "noharm",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Noggenfogger Elixir",
        "text": "Noggenfogger Elixir",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [combat, noharm] Noggenfogger Elixirt",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "combat",
        "text": "combat",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "noharm",
        "text": "noharm",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Noggenfogger Elixirt",
        "text": "Noggenfogger Elixirt",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [harm,nodead] Curse of Weakness",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "harm",
        "text": "harm",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "nodead",
        "text": "nodead",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "Curse of Weakness",
        "text": "Curse of Weakness",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Armorsmith",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Armorsmith",
        "text": "Armorsmith",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Death Gate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Death Gate",
        "text": "Death Gate",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Demonic Circle: Summon",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Demonic Circle",
        "text": "Demonic Circle",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Summon",
        "text": "Summon",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Fel Armor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Fel Armor",
        "text": "Fel Armor",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] First Aid",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "First Aid",
        "text": "First Aid",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Jeeves",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Jeeves",
        "text": "Jeeves",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Jewelcrafting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Jewelcrafting",
        "text": "Jewelcrafting",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Summon Felhunter",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Summon Felhunter",
        "text": "Summon Felhunter",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Summon felhunter",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Summon felhunter",
        "text": "Summon felhunter",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Teleport: Dalaran",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Teleport",
        "text": "Teleport",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Dalaran",
        "text": "Dalaran",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Teleport: Moonglade",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Teleport",
        "text": "Teleport",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Moonglade",
        "text": "Moonglade",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:alt] Wormhole Generator: Northrend",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Wormhole Generator",
        "text": "Wormhole Generator",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "Northrend",
        "text": "Northrend",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Basic Campfire",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Basic Campfire",
        "text": "Basic Campfire",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Death Gate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Death Gate",
        "text": "Death Gate",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Demonic Circle: Summon",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Demonic Circle",
        "text": "Demonic Circle",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "spellName",
        "value": "Summon",
        "text": "Summon",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Engineering",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Engineering",
        "text": "Engineering",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Fel Armor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Fel Armor",
        "text": "Fel Armor",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] First Aid",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "First Aid",
        "text": "First Aid",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Hearthstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Hearthstone",
        "text": "Hearthstone",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Jewelcrafting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Jewelcrafting",
        "text": "Jewelcrafting",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Runed Signet of the Kirin Tor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Runed Signet of the Kirin Tor",
        "text": "Runed Signet of the Kirin Tor",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Smelting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Smelting",
        "text": "Smelting",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Summon Imp",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Summon Imp",
        "text": "Summon Imp",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Teleport: Dalaran",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Teleport",
        "text": "Teleport",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Dalaran",
        "text": "Dalaran",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:ctrl] Teleport: Moonglade",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Teleport",
        "text": "Teleport",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Moonglade",
        "text": "Moonglade",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Argent Crusader's Tabard",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Argent Crusader's Tabard",
        "text": "Argent Crusader's Tabard",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Black Drake",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Black Drake",
        "text": "Black Drake",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Cooking",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Cooking",
        "text": "Cooking",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Create Healthstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Create Healthstone",
        "text": "Create Healthstone",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Death Gate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Death Gate",
        "text": "Death Gate",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Demonic Circle: Summon",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Demonic Circle",
        "text": "Demonic Circle",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Summon",
        "text": "Summon",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Enchanting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Enchanting",
        "text": "Enchanting",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Fel Armor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Fel Armor",
        "text": "Fel Armor",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Hearthstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Hearthstone",
        "text": "Hearthstone",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Jewelcrafting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Jewelcrafting",
        "text": "Jewelcrafting",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] MOLL-E",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "MOLL-E",
        "text": "MOLL-E",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Summon Succubus",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Summon Succubus",
        "text": "Summon Succubus",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mod:shift] Wormhole Generator: Northrend",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Wormhole Generator",
        "text": "Wormhole Generator",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Northrend",
        "text": "Northrend",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:alt] Cooking",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Cooking",
        "text": "Cooking",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:alt] Demonic Circle: Summon;",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Demonic Circle",
        "text": "Demonic Circle",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "spellName",
        "value": "Summon",
        "text": "Summon",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:alt] Summon Felhunter",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Summon Felhunter",
        "text": "Summon Felhunter",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:ctrl] Blacksmithing",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Blacksmithing",
        "text": "Blacksmithing",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:ctrl] Inferno",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Inferno",
        "text": "Inferno",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift]",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift] Black War Mammoth",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Black War Mammoth",
        "text": "Black War Mammoth",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift] Black War Tiger",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Black War Tiger",
        "text": "Black War Tiger",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift] Death Gate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Death Gate",
        "text": "Death Gate",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift] Hearthstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Hearthstone",
        "text": "Hearthstone",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift] Jewelcrafting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Jewelcrafting",
        "text": "Jewelcrafting",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift] Summon Succubus",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Summon Succubus",
        "text": "Summon Succubus",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [modifier:shift] Swift Olive Raptor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Swift Olive Raptor",
        "text": "Swift Olive Raptor",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [mounted] Crusader Aura",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "mounted",
        "text": "mounted",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Crusader Aura",
        "text": "Crusader Aura",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nochanneling: Drain Life] Drain Life",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nochanneling",
        "text": "nochanneling",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Drain Life",
        "text": "Drain Life",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "spellName",
        "value": "Drain Life",
        "text": "Drain Life",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nochanneling: Drain Mana] Drain Mana",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nochanneling",
        "text": "nochanneling",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Drain Mana",
        "text": "Drain Mana",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "spellName",
        "value": "Drain Mana",
        "text": "Drain Mana",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nochanneling:Mind Flay] Mind Flay",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nochanneling",
        "text": "nochanneling",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "Mind Flay",
        "text": "Mind Flay",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "spellName",
        "value": "Mind Flay",
        "text": "Mind Flay",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nocombat] !Prowl",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nocombat",
        "text": "nocombat",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Prowl",
        "text": "Prowl",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nocombat] !Stealth",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nocombat",
        "text": "nocombat",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Stealth",
        "text": "Stealth",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable, nomounted] Swift Flight Form(Shapeshift)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "spellName",
        "value": "Swift Flight Form",
        "text": "Swift Flight Form",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellMode",
        "value": "(Shapeshift)",
        "text": "(Shapeshift)",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Blue Wind Rider",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Blue Wind Rider",
        "text": "Blue Wind Rider",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Flying Carpet",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Flying Carpet",
        "text": "Flying Carpet",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Green Proto-Drake",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Green Proto-Drake",
        "text": "Green Proto-Drake",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Summon Charger",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Summon Charger",
        "text": "Summon Charger",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Swift Purple Wind Rider",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Swift Purple Wind Rider",
        "text": "Swift Purple Wind Rider",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Swift Red Wind Rider",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Swift Red Wind Rider",
        "text": "Swift Red Wind Rider",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Time-Lost Proto-Drake",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Time-Lost Proto-Drake",
        "text": "Time-Lost Proto-Drake",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,flyable,nomounted] Violet Proto-Drake",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "Violet Proto-Drake",
        "text": "Violet Proto-Drake",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable, nomounted] Darnassian Nightsaber",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "Darnassian Nightsaber",
        "text": "Darnassian Nightsaber",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable, nomounted] Swift Frostsaber",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "Swift Frostsaber",
        "text": "Swift Frostsaber",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable, nomounted] Swift Red Hawkstrider",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "Swift Red Hawkstrider",
        "text": "Swift Red Hawkstrider",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable,nomounted]  Charger",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Charger",
        "text": "Charger",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable,nomounted]  Summon Charger",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Summon Charger",
        "text": "Summon Charger",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable,nomounted] Charger",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Charger",
        "text": "Charger",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable,nomounted] Frostwolf Howler",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Frostwolf Howler",
        "text": "Frostwolf Howler",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable,nomounted] Summon Charger",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Summon Charger",
        "text": "Summon Charger",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod,noflyable,nomounted] Swift Purple Hawkstrider",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "Swift Purple Hawkstrider",
        "text": "Swift Purple Hawkstrider",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Astral Recall",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Astral Recall",
        "text": "Astral Recall",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Basic Campfire",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Basic Campfire",
        "text": "Basic Campfire",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Death Gate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Death Gate",
        "text": "Death Gate",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Demon Armor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Demon Armor",
        "text": "Demon Armor",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Demonic Circle: Teleport",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Demonic Circle",
        "text": "Demonic Circle",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "spellName",
        "value": "Teleport",
        "text": "Teleport",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Disenchant",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Disenchant",
        "text": "Disenchant",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Engineering",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Engineering",
        "text": "Engineering",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Hearthstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Hearthstone",
        "text": "Hearthstone",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Prospecting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Prospecting",
        "text": "Prospecting",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomod] Summon Voidwalker",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Summon Voidwalker",
        "text": "Summon Voidwalker",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted]",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted] Ashes of Al'ar",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Ashes of Al'ar",
        "text": "Ashes of Al'ar",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted] Blue Wind Rider",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Blue Wind Rider",
        "text": "Blue Wind Rider",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted] Bronze Drake",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Bronze Drake",
        "text": "Bronze Drake",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted] Swift Blue Gryphon",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Swift Blue Gryphon",
        "text": "Swift Blue Gryphon",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted] Swift Purple Gryphon",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Swift Purple Gryphon",
        "text": "Swift Purple Gryphon",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted] Swift Red Wind Rider",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Swift Red Wind Rider",
        "text": "Swift Red Wind Rider",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,flyable, nomounted] Time-Lost Proto-Drake",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Time-Lost Proto-Drake",
        "text": "Time-Lost Proto-Drake",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted]",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Black War Tiger",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Black War Tiger",
        "text": "Black War Tiger",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Red Skeletal Warhorse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Red Skeletal Warhorse",
        "text": "Red Skeletal Warhorse",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Swift Moonsaber",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Swift Moonsaber",
        "text": "Swift Moonsaber",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Swift Olive Raptor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Swift Olive Raptor",
        "text": "Swift Olive Raptor",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Swift Orange Raptor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Swift Orange Raptor",
        "text": "Swift Orange Raptor",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Swift Palomino",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Swift Palomino",
        "text": "Swift Palomino",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Swift Razzashi Raptor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Swift Razzashi Raptor",
        "text": "Swift Razzashi Raptor",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier,noflyable, nomounted] Swift Timber Wolf",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Swift Timber Wolf",
        "text": "Swift Timber Wolf",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier] Demonic Circle: Teleport;",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Demonic Circle",
        "text": "Demonic Circle",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "Teleport",
        "text": "Teleport",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier] Hearthstone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Hearthstone",
        "text": "Hearthstone",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier] Prospecting",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Prospecting",
        "text": "Prospecting",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier] Runed Signet of the Kirin Tor",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Runed Signet of the Kirin Tor",
        "text": "Runed Signet of the Kirin Tor",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [nomodifier] Summon Voidwalker",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "nomodifier",
        "text": "nomodifier",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Summon Voidwalker",
        "text": "Summon Voidwalker",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=Arald] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Arald",
        "text": "Arald",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=Atchene] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Atchene",
        "text": "Atchene",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=Cretok] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Cretok",
        "text": "Cretok",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=Eilan] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Eilan",
        "text": "Eilan",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=Maraelnesar] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Maraelnesar",
        "text": "Maraelnesar",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=Shardless] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Shardless",
        "text": "Shardless",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=Vanyaelnesar] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Vanyaelnesar",
        "text": "Vanyaelnesar",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=player] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter,target=targettarget] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "targettarget",
        "text": "targettarget",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Felhunter] Devour Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Devour Magic",
        "text": "Devour Magic",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Obcy] Nether Shock",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Obcy",
        "text": "Obcy",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Nether Shock",
        "text": "Nether Shock",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:Voidwalker] Sacrifice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "Voidwalker",
        "text": "Voidwalker",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Sacrifice",
        "text": "Sacrifice",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet:succubus] Seduction",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "succubus",
        "text": "succubus",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Seduction",
        "text": "Seduction",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [pet] Mend Pet",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Mend Pet",
        "text": "Mend Pet",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Agimijagi] Cleanse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Agimijagi",
        "text": "Agimijagi",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Cleanse",
        "text": "Cleanse",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Agimijagi] Flash of Light",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Agimijagi",
        "text": "Agimijagi",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Flash of Light",
        "text": "Flash of Light",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Agimijagi] Hand of Freedom",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Agimijagi",
        "text": "Agimijagi",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Hand of Freedom",
        "text": "Hand of Freedom",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Agimijagi] Hand of Protection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Agimijagi",
        "text": "Agimijagi",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Hand of Protection",
        "text": "Hand of Protection",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Agimijagi] Hand of Sacrifice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Agimijagi",
        "text": "Agimijagi",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Hand of Sacrifice",
        "text": "Hand of Sacrifice",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Agimijagi] Sacred Shield",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Agimijagi",
        "text": "Agimijagi",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Sacred Shield",
        "text": "Sacred Shield",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Amancik] Dispel Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Amancik",
        "text": "Amancik",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Dispel Magic",
        "text": "Dispel Magic",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Angrylock] Cure Toxins",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Angrylock",
        "text": "Angrylock",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Cure Toxins",
        "text": "Cure Toxins",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Angrylock] Gift of the Naaru",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Angrylock",
        "text": "Angrylock",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Gift of the Naaru",
        "text": "Gift of the Naaru",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Arald] Dispel magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Arald",
        "text": "Arald",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Dispel magic",
        "text": "Dispel magic",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Aseel] Dispel magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Aseel",
        "text": "Aseel",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Dispel magic",
        "text": "Dispel magic",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Cryptic] Cleanse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Cryptic",
        "text": "Cryptic",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Cleanse",
        "text": "Cleanse",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Cryptic] Flash of Light(Rank 9)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Cryptic",
        "text": "Cryptic",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Flash of Light",
        "text": "Flash of Light",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellLevel",
        "value": "(Rank 9)",
        "text": "(Rank 9)",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Cryptic] Hand of Freedom",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Cryptic",
        "text": "Cryptic",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Hand of Freedom",
        "text": "Hand of Freedom",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Cryptic] Hand of Sacrifice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Cryptic",
        "text": "Cryptic",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Hand of Sacrifice",
        "text": "Hand of Sacrifice",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Cryptic] Hand of protection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Cryptic",
        "text": "Cryptic",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Hand of protection",
        "text": "Hand of protection",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Cryptic] Sacred Shield",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Cryptic",
        "text": "Cryptic",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Sacred Shield",
        "text": "Sacred Shield",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Ebon Gargoyle] Shackle Undead",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Ebon Gargoyle",
        "text": "Ebon Gargoyle",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "Shackle Undead",
        "text": "Shackle Undead",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Eledrin] Dispel Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Eledrin",
        "text": "Eledrin",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Dispel Magic",
        "text": "Dispel Magic",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] Cleanse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Cleanse",
        "text": "Cleanse",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] Flash of Light",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Flash of Light",
        "text": "Flash of Light",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] Hand of Freedom",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Hand of Freedom",
        "text": "Hand of Freedom",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] Hand of Protection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Hand of Protection",
        "text": "Hand of Protection",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] Hand of Sacrifice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Hand of Sacrifice",
        "text": "Hand of Sacrifice",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] Innervate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Innervate",
        "text": "Innervate",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] Sacred Shield",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Sacred Shield",
        "text": "Sacred Shield",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Emiru] remove curse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "remove curse",
        "text": "remove curse",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Goldmoon] Cure Toxins",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Goldmoon",
        "text": "Goldmoon",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "Cure Toxins",
        "text": "Cure Toxins",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Goldmoon] Gift of the Naaru(Racial)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Goldmoon",
        "text": "Goldmoon",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "Gift of the Naaru",
        "text": "Gift of the Naaru",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellMode",
        "value": "(Racial)",
        "text": "(Racial)",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Goldmoon] Hand of protection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Goldmoon",
        "text": "Goldmoon",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "Hand of protection",
        "text": "Hand of protection",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Irrissa] Abolish Disease",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Irrissa",
        "text": "Irrissa",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Abolish Disease",
        "text": "Abolish Disease",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Irrissa] Dispel magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Irrissa",
        "text": "Irrissa",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Dispel magic",
        "text": "Dispel magic",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Mindblowing] Cleanse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Mindblowing",
        "text": "Mindblowing",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Cleanse",
        "text": "Cleanse",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Mindblowing] Flash of Light(Rank 9)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Mindblowing",
        "text": "Mindblowing",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Flash of Light",
        "text": "Flash of Light",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellLevel",
        "value": "(Rank 9)",
        "text": "(Rank 9)",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Mindblowing] Hand of Freedom",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Mindblowing",
        "text": "Mindblowing",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Hand of Freedom",
        "text": "Hand of Freedom",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Mindblowing] Hand of protection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Mindblowing",
        "text": "Mindblowing",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Hand of protection",
        "text": "Hand of protection",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Mindblowing] Sacred Shield",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Mindblowing",
        "text": "Mindblowing",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Sacred Shield",
        "text": "Sacred Shield",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Noshards] Power Word: Shield",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Noshards",
        "text": "Noshards",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "Power Word",
        "text": "Power Word",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "Shield",
        "text": "Shield",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Quenth] Cleanse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Quenth",
        "text": "Quenth",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Cleanse",
        "text": "Cleanse",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Quenth] Dispel Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Quenth",
        "text": "Quenth",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Dispel Magic",
        "text": "Dispel Magic",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Quenth] Flash of Light",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Quenth",
        "text": "Quenth",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Flash of Light",
        "text": "Flash of Light",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Raffael] Dispel Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Raffael",
        "text": "Raffael",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Dispel Magic",
        "text": "Dispel Magic",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Rashael] Dispel Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Rashael",
        "text": "Rashael",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Dispel Magic",
        "text": "Dispel Magic",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Rashael] Master's Call",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Rashael",
        "text": "Rashael",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Master's Call",
        "text": "Master's Call",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Suzuke] Hand of Protection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Suzuke",
        "text": "Suzuke",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Hand of Protection",
        "text": "Hand of Protection",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Vanyaelnesar] Cleanse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Vanyaelnesar",
        "text": "Vanyaelnesar",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Cleanse",
        "text": "Cleanse",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Vanyaelnesar] Flash of Light",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Vanyaelnesar",
        "text": "Vanyaelnesar",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Flash of Light",
        "text": "Flash of Light",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Vanyaelnesar] Hand of Freedom",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Vanyaelnesar",
        "text": "Vanyaelnesar",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Hand of Freedom",
        "text": "Hand of Freedom",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Vanyaelnesar] Hand of Protection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Vanyaelnesar",
        "text": "Vanyaelnesar",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Hand of Protection",
        "text": "Hand of Protection",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Vanyaelnesar] Hand of Sacrifice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Vanyaelnesar",
        "text": "Vanyaelnesar",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Hand of Sacrifice",
        "text": "Hand of Sacrifice",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Voilyn] Leap",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Voilyn",
        "text": "Voilyn",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Leap",
        "text": "Leap",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=Vudu] Dispel Magic",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Vudu",
        "text": "Vudu",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "Dispel Magic",
        "text": "Dispel Magic",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=dronin] Innervate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "dronin",
        "text": "dronin",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Innervate",
        "text": "Innervate",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=dronin] remove curse",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "dronin",
        "text": "dronin",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "remove curse",
        "text": "remove curse",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Chains of Ice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Chains of Ice",
        "text": "Chains of Ice",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Charge",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Charge",
        "text": "Charge",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Counterspell",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Counterspell",
        "text": "Counterspell",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Cyclone",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Cyclone",
        "text": "Cyclone",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Death Coil(Rank 6)",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Death Coil",
        "text": "Death Coil",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellLevel",
        "value": "(Rank 6)",
        "text": "(Rank 6)",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Entangling Roots",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Entangling Roots",
        "text": "Entangling Roots",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Fear",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Fear",
        "text": "Fear",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Hammer of Justice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Hammer of Justice",
        "text": "Hammer of Justice",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Hex",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Hex",
        "text": "Hex",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Hibernate",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Hibernate",
        "text": "Hibernate",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Intercept",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Intercept",
        "text": "Intercept",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Polymorph",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Polymorph",
        "text": "Polymorph",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Repentance",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Repentance",
        "text": "Repentance",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Scatter Shot",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Scatter Shot",
        "text": "Scatter Shot",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Silence",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Silence",
        "text": "Silence",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Silencing Shot",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Silencing Shot",
        "text": "Silencing Shot",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Turn Evil",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Turn Evil",
        "text": "Turn Evil",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=focus] Wind Shear",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "Wind Shear",
        "text": "Wind Shear",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=mouseover] Chains of Ice",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "mouseover",
        "text": "mouseover",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "Chains of Ice",
        "text": "Chains of Ice",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=player] Cure Toxins",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Cure Toxins",
        "text": "Cure Toxins",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=player] Gift of the Naaru",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Gift of the Naaru",
        "text": "Gift of the Naaru",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast [target=szarzuje] Misdirection",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "szarzuje",
        "text": "szarzuje",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "Misdirection",
        "text": "Misdirection",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cast flash heal",
    "results": [
      {
        "type": "command",
        "value": "/cast",
        "text": "/cast",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flash heal",
        "text": "flash heal",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castBladestorm",
    "results": [
      {
        "type": "command",
        "value": "/castBladestorm",
        "text": "/castBladestorm",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castrandom Summon Warhorse, Red Hawkstrider, Purple Hawkstrider, Brewfest Ram, Blue Hawkstrider, Black Hawkstrider, Brewfest Ram, Summon Warhorse",
    "results": [
      {
        "type": "command",
        "value": "/castrandom",
        "text": "/castrandom",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Summon Warhorse",
        "text": "Summon Warhorse",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "Red Hawkstrider",
        "text": "Red Hawkstrider",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "spellName",
        "value": "Purple Hawkstrider",
        "text": "Purple Hawkstrider",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "spellName",
        "value": "Brewfest Ram",
        "text": "Brewfest Ram",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "spellName",
        "value": "Blue Hawkstrider",
        "text": "Blue Hawkstrider",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 96,
        "lineBreaks": 0,
        "line": 1,
        "col": 97
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "spellName",
        "value": "Black Hawkstrider",
        "text": "Black Hawkstrider",
        "offset": 98,
        "lineBreaks": 0,
        "line": 1,
        "col": 99
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "spellName",
        "value": "Brewfest Ram",
        "text": "Brewfest Ram",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "spellName",
        "value": "Summon Warhorse",
        "text": "Summon Warhorse",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castrandom [nomod,noflyable,nomounted]  Black War Bear, Swift Moonsaber, Swift Brewfest Ram, Black War Steed, Stormpike Battle Charger, Turbostrider",
    "results": [
      {
        "type": "command",
        "value": "/castrandom",
        "text": "/castrandom",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Black War Bear",
        "text": "Black War Bear",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "Swift Moonsaber",
        "text": "Swift Moonsaber",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "spellName",
        "value": "Swift Brewfest Ram",
        "text": "Swift Brewfest Ram",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "spellName",
        "value": "Black War Steed",
        "text": "Black War Steed",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 109,
        "lineBreaks": 0,
        "line": 1,
        "col": 110
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 110,
        "lineBreaks": 0,
        "line": 1,
        "col": 111
      },
      {
        "type": "spellName",
        "value": "Stormpike Battle Charger",
        "text": "Stormpike Battle Charger",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 135,
        "lineBreaks": 0,
        "line": 1,
        "col": 136
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "spellName",
        "value": "Turbostrider",
        "text": "Turbostrider",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castrandom [target=target, exists] Mongoose Bite",
    "results": [
      {
        "type": "command",
        "value": "/castrandom",
        "text": "/castrandom",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "exists",
        "text": "exists",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "Mongoose Bite",
        "text": "Mongoose Bite",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castsequence Raise Dead, Death Pact",
    "results": [
      {
        "type": "command",
        "value": "/castsequence",
        "text": "/castsequence",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Raise Dead",
        "text": "Raise Dead",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Death Pact",
        "text": "Death Pact",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castsequence reset=3 Star's Sorrow, Poached Emperor Salmon",
    "results": [
      {
        "type": "command",
        "value": "/castsequence",
        "text": "/castsequence",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "reset",
        "text": "reset",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Star's Sorrow",
        "text": "Star's Sorrow",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "spellName",
        "value": "Poached Emperor Salmon",
        "text": "Poached Emperor Salmon",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castsequence reset=45  Deadly Gladiator's Plate Gauntlets, Heroic Throw",
    "results": [
      {
        "type": "command",
        "value": "/castsequence",
        "text": "/castsequence",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "reset",
        "text": "reset",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "45",
        "text": "45",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Deadly Gladiator's Plate Gauntlets",
        "text": "Deadly Gladiator's Plate Gauntlets",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "spellName",
        "value": "Heroic Throw",
        "text": "Heroic Throw",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castsequence reset=50 Divine Shield, Hearthstone",
    "results": [
      {
        "type": "command",
        "value": "/castsequence",
        "text": "/castsequence",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "reset",
        "text": "reset",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "50",
        "text": "50",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Divine Shield",
        "text": "Divine Shield",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Hearthstone",
        "text": "Hearthstone",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      }
    ]
  },
  {
    "parsed": true,
    "line": "/castsequence reset=target/3 Wing Clip, Raptor Strike, Wing Clip",
    "results": [
      {
        "type": "command",
        "value": "/castsequence",
        "text": "/castsequence",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "reset",
        "text": "reset",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "Wing Clip",
        "text": "Wing Clip",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "Raptor Strike",
        "text": "Raptor Strike",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "spellName",
        "value": "Wing Clip",
        "text": "Wing Clip",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      }
    ]
  },
  {
    "parsed": true,
    "line": "/clearfocus [modifier:ctrl]",
    "results": [
      {
        "type": "command",
        "value": "/clearfocus",
        "text": "/clearfocus",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "modifier",
        "text": "modifier",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/cleartarget",
    "results": [
      {
        "type": "command",
        "value": "/cleartarget",
        "text": "/cleartarget",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/click StaticPopup1Button1",
    "results": [
      {
        "type": "command",
        "value": "/click",
        "text": "/click",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "StaticPopup",
        "text": "StaticPopup",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Button",
        "text": "Button",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console characterAmbient 1",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "characterAmbient",
        "text": "characterAmbient",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console environmentDetail 0.5",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "environmentDetail",
        "text": "environmentDetail",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "numberDecimal",
        "value": "0.5",
        "text": "0.5",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console extshadowquality 0",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "extshadowquality",
        "text": "extshadowquality",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console ffx 0",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "ffx",
        "text": "ffx",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console groundeffectdist 1",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "groundeffectdist",
        "text": "groundeffectdist",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console hwPCF 1",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "hwPCF",
        "text": "hwPCF",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console shadowlod 0",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "shadowlod",
        "text": "shadowlod",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console showfootprintparticles 0",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "showfootprintparticles",
        "text": "showfootprintparticles",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console showfootprints 0",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "showfootprints",
        "text": "showfootprints",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console showshadow 0",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "showshadow",
        "text": "showshadow",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console skycloudlod 1",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "skycloudlod",
        "text": "skycloudlod",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console smallcull 1",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "smallcull",
        "text": "smallcull",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console targetNearestDistance 15.000000",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "targetNearestDistance",
        "text": "targetNearestDistance",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "numberDecimal",
        "value": "15.000000",
        "text": "15.000000",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console targetNearestDistance 41.000000",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "targetNearestDistance",
        "text": "targetNearestDistance",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "numberDecimal",
        "value": "41.000000",
        "text": "41.000000",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/console timingmethod 1",
    "results": [
      {
        "type": "command",
        "value": "/console",
        "text": "/console",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "timingmethod",
        "text": "timingmethod",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      }
    ]
  },
  {
    "parsed": true,
    "line": "/dismount [mod:alt, mounted]",
    "results": [
      {
        "type": "command",
        "value": "/dismount",
        "text": "/dismount",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "mod",
        "text": "mod",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "alt",
        "text": "alt",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "mounted",
        "text": "mounted",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/dismount [mounted]",
    "results": [
      {
        "type": "command",
        "value": "/dismount",
        "text": "/dismount",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "mounted",
        "text": "mounted",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/dismount [noflying, mounted]",
    "results": [
      {
        "type": "command",
        "value": "/dismount",
        "text": "/dismount",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "noflying",
        "text": "noflying",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "mounted",
        "text": "mounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/dismount [noflying, mounted]]",
    "results": [
      {
        "type": "command",
        "value": "/dismount",
        "text": "/dismount",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "noflying",
        "text": "noflying",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "mounted",
        "text": "mounted",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      }
    ]
  },
  {
    "parsed": true,
    "line": "/dismount [target=target,exists]",
    "results": [
      {
        "type": "command",
        "value": "/dismount",
        "text": "/dismount",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "exists",
        "text": "exists",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/drdamage",
    "results": [
      {
        "type": "command",
        "value": "/drdamage",
        "text": "/drdamage",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Aegis of the Coliseum",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Aegis of the Coliseum",
        "text": "Aegis of the Coliseum",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Ardent Guard",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Ardent Guard",
        "text": "Ardent Guard",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Bonebreaker Scepter",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Bonebreaker Scepter",
        "text": "Bonebreaker Scepter",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Bulwark of the Royal Guard",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Bulwark of the Royal Guard",
        "text": "Bulwark of the Royal Guard",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Edge of Ruin",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Edge of Ruin",
        "text": "Edge of Ruin",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Peacekeeper Blade",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Peacekeeper Blade",
        "text": "Peacekeeper Blade",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Royal Crest of Lordaeron",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Royal Crest of Lordaeron",
        "text": "Royal Crest of Lordaeron",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equip Wrathful Gladiator's Gavel",
    "results": [
      {
        "type": "command",
        "value": "/equip",
        "text": "/equip",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "Wrathful Gladiator's Gavel",
        "text": "Wrathful Gladiator's Gavel",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot  16 item:49888:3368",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "item",
        "text": "item",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "49888",
        "text": "49888",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "number",
        "value": "3368",
        "text": "3368",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot  16 item:51392:3365",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "item",
        "text": "item",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "number",
        "value": "51392",
        "text": "51392",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "number",
        "value": "3365",
        "text": "3365",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot 16 Aledar's Battlestar",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Aledar's Battlestar",
        "text": "Aledar's Battlestar",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot 16 Dreadlord's Blade",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Dreadlord's Blade",
        "text": "Dreadlord's Blade",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot 16 Relentless Gladiator's Decapitator",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Relentless Gladiator's Decapitator",
        "text": "Relentless Gladiator's Decapitator",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot 16 item:51480:3367",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "item",
        "text": "item",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "number",
        "value": "51480",
        "text": "51480",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "number",
        "value": "3367",
        "text": "3367",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot 17 Leeka's Shield",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "17",
        "text": "17",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Leeka's Shield",
        "text": "Leeka's Shield",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/equipslot 17 Titansteel Shield Wall",
    "results": [
      {
        "type": "command",
        "value": "/equipslot",
        "text": "/equipslot",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "17",
        "text": "17",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "Titansteel Shield Wall",
        "text": "Titansteel Shield Wall",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      }
    ]
  },
  {
    "parsed": true,
    "line": "/facepalm",
    "results": [
      {
        "type": "command",
        "value": "/facepalm",
        "text": "/facepalm",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/focus",
    "results": [
      {
        "type": "command",
        "value": "/focus",
        "text": "/focus",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/focus [target=focus, noexists][target=focus, dead] playertarget",
    "results": [
      {
        "type": "command",
        "value": "/focus",
        "text": "/focus",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "noexists",
        "text": "noexists",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "spellName",
        "value": "focus",
        "text": "focus",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "spellName",
        "value": "dead",
        "text": "dead",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "spellName",
        "value": "playertarget",
        "text": "playertarget",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      }
    ]
  },
  {
    "parsed": true,
    "line": "/follow Amancik",
    "results": [
      {
        "type": "command",
        "value": "/follow",
        "text": "/follow",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "Amancik",
        "text": "Amancik",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g .gm ingame",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "gm ingame",
        "text": "gm ingame",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g .server info",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "server info",
        "text": "server info",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g Chcesz rajdowac z gildia?",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Chcesz rajdowac z gildia",
        "text": "Chcesz rajdowac z gildia",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "unknown",
        "value": "?",
        "text": "?",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g Link do ankiety mozna znalesc w newsach.",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Link do ankiety mozna znalesc w newsach",
        "text": "Link do ankiety mozna znalesc w newsach",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g Odwracajac uwage od papierow, chcialbym wszystkim zaintersowanym rajdowaniem z gildia przypomniec o wypelnieniu ankiety dostepnej na naszej stronie:",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Odwracajac uwage od papierow",
        "text": "Odwracajac uwage od papierow",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "spellName",
        "value": "chcialbym wszystkim zaintersowanym rajdowaniem z gildia przypomniec o wypelnieniu ankiety dostepnej na naszej stronie",
        "text": "chcialbym wszystkim zaintersowanym rajdowaniem z gildia przypomniec o wypelnieniu ankiety dostepnej na naszej stronie",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g W newsach mozna znalezc link do ankiety dotyczacej rajdow.",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "W newsach mozna znalezc link do ankiety dotyczacej rajdow",
        "text": "W newsach mozna znalezc link do ankiety dotyczacej rajdow",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g Zapraszamy na strone:",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Zapraszamy na strone",
        "text": "Zapraszamy na strone",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/g x.praetorianssunwell.cba.pl",
    "results": [
      {
        "type": "command",
        "value": "/g",
        "text": "/g",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "praetorianssunwell",
        "text": "praetorianssunwell",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "cba",
        "text": "cba",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "pl",
        "text": "pl",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/inv Agimijagi",
    "results": [
      {
        "type": "command",
        "value": "/inv",
        "text": "/inv",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Agimijagi",
        "text": "Agimijagi",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/inv Benon",
    "results": [
      {
        "type": "command",
        "value": "/inv",
        "text": "/inv",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Benon",
        "text": "Benon",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/inv Emiru",
    "results": [
      {
        "type": "command",
        "value": "/inv",
        "text": "/inv",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Emiru",
        "text": "Emiru",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/inv Martynqa",
    "results": [
      {
        "type": "command",
        "value": "/inv",
        "text": "/inv",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Martynqa",
        "text": "Martynqa",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/inv Quenth",
    "results": [
      {
        "type": "command",
        "value": "/inv",
        "text": "/inv",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Quenth",
        "text": "Quenth",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/inv Starydran",
    "results": [
      {
        "type": "command",
        "value": "/inv",
        "text": "/inv",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Starydran",
        "text": "Starydran",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/inv Twojnick",
    "results": [
      {
        "type": "command",
        "value": "/inv",
        "text": "/inv",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Twojnick",
        "text": "Twojnick",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/kiss",
    "results": [
      {
        "type": "command",
        "value": "/kiss",
        "text": "/kiss",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/lol",
    "results": [
      {
        "type": "command",
        "value": "/lol",
        "text": "/lol",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/macro",
    "results": [
      {
        "type": "command",
        "value": "/macro",
        "text": "/macro",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/p czesc,",
    "results": [
      {
        "type": "command",
        "value": "/p",
        "text": "/p",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "czesc",
        "text": "czesc",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      }
    ]
  },
  {
    "parsed": true,
    "line": "/petattack",
    "results": [
      {
        "type": "command",
        "value": "/petattack",
        "text": "/petattack",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/petattack [target=pettarget]",
    "results": [
      {
        "type": "command",
        "value": "/petattack",
        "text": "/petattack",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "pettarget",
        "text": "pettarget",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/petfollow",
    "results": [
      {
        "type": "command",
        "value": "/petfollow",
        "text": "/petfollow",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/pity",
    "results": [
      {
        "type": "command",
        "value": "/pity",
        "text": "/pity",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/powa",
    "results": [
      {
        "type": "command",
        "value": "/powa",
        "text": "/powa",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/promote Alard",
    "results": [
      {
        "type": "command",
        "value": "/promote",
        "text": "/promote",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "Alard",
        "text": "Alard",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      }
    ]
  },
  {
    "parsed": true,
    "line": "/promote Kerlic",
    "results": [
      {
        "type": "command",
        "value": "/promote",
        "text": "/promote",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "Kerlic",
        "text": "Kerlic",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      }
    ]
  },
  {
    "parsed": true,
    "line": "/promote sheid",
    "results": [
      {
        "type": "command",
        "value": "/promote",
        "text": "/promote",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "sheid",
        "text": "sheid",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      }
    ]
  },
  {
    "parsed": true,
    "line": "/r JC twoj gem + 50g; BS od 50 do 400g",
    "results": [
      {
        "type": "command",
        "value": "/r",
        "text": "/r",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "JC twoj gem",
        "text": "JC twoj gem",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "number",
        "value": "50",
        "text": "50",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "BS od",
        "text": "BS od",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "number",
        "value": "50",
        "text": "50",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "spellName",
        "value": "do",
        "text": "do",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "number",
        "value": "400",
        "text": "400",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/r robota Uldu (226) 100g, Toc (245) 200g, Icc (264) 400g, reszta 50g; tylko Twoje matsy - kup, pozycz lub wyfarm",
    "results": [
      {
        "type": "command",
        "value": "/r",
        "text": "/r",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "robota Uldu",
        "text": "robota Uldu",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "number",
        "value": "226",
        "text": "226",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "number",
        "value": "100",
        "text": "100",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "Toc",
        "text": "Toc",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "number",
        "value": "245",
        "text": "245",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "number",
        "value": "200",
        "text": "200",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "spellName",
        "value": "Icc",
        "text": "Icc",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "number",
        "value": "264",
        "text": "264",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "number",
        "value": "400",
        "text": "400",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "spellName",
        "value": "reszta",
        "text": "reszta",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "number",
        "value": "50",
        "text": "50",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "spellName",
        "value": "tylko Twoje matsy",
        "text": "tylko Twoje matsy",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "spellName",
        "value": "kup",
        "text": "kup",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "spellName",
        "value": "pozycz lub wyfarm",
        "text": "pozycz lub wyfarm",
        "offset": 96,
        "lineBreaks": 0,
        "line": 1,
        "col": 97
      }
    ]
  },
  {
    "parsed": true,
    "line": "/r twoje matsy + 50g, matsy kup, pozycz lub wyfarm",
    "results": [
      {
        "type": "command",
        "value": "/r",
        "text": "/r",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "twoje matsy",
        "text": "twoje matsy",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "number",
        "value": "50",
        "text": "50",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "matsy kup",
        "text": "matsy kup",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "spellName",
        "value": "pozycz lub wyfarm",
        "text": "pozycz lub wyfarm",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra    Soulstones:     Antie->Roegnar  Tori->Amancik  Skrzypa->Irong  Agloval->Kaevel",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": "    ",
        "text": "    ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Soulstones",
        "text": "Soulstones",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": "     ",
        "text": "     ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Antie",
        "text": "Antie",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "spellName",
        "value": "Roegnar",
        "text": "Roegnar",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "Tori",
        "text": "Tori",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "Amancik",
        "text": "Amancik",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "spellName",
        "value": "Skrzypa",
        "text": "Skrzypa",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 62,
        "lineBreaks": 0,
        "line": 1,
        "col": 63
      },
      {
        "type": "spellName",
        "value": "Irong",
        "text": "Irong",
        "offset": 63,
        "lineBreaks": 0,
        "line": 1,
        "col": 64
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "spellName",
        "value": "Agloval",
        "text": "Agloval",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "spellName",
        "value": "Kaevel",
        "text": "Kaevel",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra <brak> BoS / Devo",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "unknown",
        "value": "<",
        "text": "<",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "brak",
        "text": "brak",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "BoS",
        "text": "BoS",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "Devo",
        "text": "Devo",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Amancik BoK / Frost",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Amancik BoK",
        "text": "Amancik BoK",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "Frost",
        "text": "Frost",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Amancik BoW   Pirzmak BoM    Kaevel BoK",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Amancik BoW",
        "text": "Amancik BoW",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": "   ",
        "text": "   ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Pirzmak BoM",
        "text": "Pirzmak BoM",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": "    ",
        "text": "    ",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "spellName",
        "value": "Kaevel BoK",
        "text": "Kaevel BoK",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Amancik Bok/BoS",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Amancik Bok",
        "text": "Amancik Bok",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "BoS",
        "text": "BoS",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Argent Defender CD",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Argent Defender CD",
        "text": "Argent Defender CD",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Benon HP shout",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Benon HP shout",
        "text": "Benon HP shout",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Bloodmaks BoS + Devo",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Bloodmaks BoS",
        "text": "Bloodmaks BoS",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "Devo",
        "text": "Devo",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra BoK",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "BoK",
        "text": "BoK",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra BoM",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "BoM",
        "text": "BoM",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra BoS",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "BoS",
        "text": "BoS",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra BoW",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "BoW",
        "text": "BoW",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Dagmara BoW    Janny BoK    Velriath BoS       Warki   Battle Shout",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Dagmara BoW",
        "text": "Dagmara BoW",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": "    ",
        "text": "    ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Janny BoK",
        "text": "Janny BoK",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": "    ",
        "text": "    ",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "Velriath BoS",
        "text": "Velriath BoS",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": "       ",
        "text": "       ",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "Warki",
        "text": "Warki",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "space",
        "value": "   ",
        "text": "   ",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "Battle Shout",
        "text": "Battle Shout",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Helliash BoW / Conc",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Helliash BoW",
        "text": "Helliash BoW",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Conc",
        "text": "Conc",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Janji BoW/BoK + Conc",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Janji BoW",
        "text": "Janji BoW",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "BoK",
        "text": "BoK",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "Conc",
        "text": "Conc",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Morgoph  BoM/BoK + Retri",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Morgoph",
        "text": "Morgoph",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "BoM",
        "text": "BoM",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "BoK",
        "text": "BoK",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Retri",
        "text": "Retri",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Pokoj: \"We pwn like np\" Haslo: \"marchewka\"",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Pokoj",
        "text": "Pokoj",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "We pwn like np",
        "text": "We pwn like np",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Haslo",
        "text": "Haslo",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "marchewka",
        "text": "marchewka",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra TS: 178.33.136.99",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "TS",
        "text": "TS",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "numberDecimal",
        "value": "178.33",
        "text": "178.33",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "numberDecimal",
        "value": "136.99",
        "text": "136.99",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Twojnick AP shoult",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Twojnick AP shoult",
        "text": "Twojnick AP shoult",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Unkylson BoM / Fire",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Unkylson BoM",
        "text": "Unkylson BoM",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "Fire",
        "text": "Fire",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra Yaxon BoW",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Yaxon BoW",
        "text": "Yaxon BoW",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/ra buffy,aury:   Janji BoM/BoW,conc    Amancik BoK,fire/frost",
    "results": [
      {
        "type": "command",
        "value": "/ra",
        "text": "/ra",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "buffy",
        "text": "buffy",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "spellName",
        "value": "aury",
        "text": "aury",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": "   ",
        "text": "   ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Janji BoM",
        "text": "Janji BoM",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "BoW",
        "text": "BoW",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "conc",
        "text": "conc",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "space",
        "value": "    ",
        "text": "    ",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "spellName",
        "value": "Amancik BoK",
        "text": "Amancik BoK",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "spellName",
        "value": "fire",
        "text": "fire",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "frost",
        "text": "frost",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      }
    ]
  },
  {
    "parsed": true,
    "line": "/recount show",
    "results": [
      {
        "type": "command",
        "value": "/recount",
        "text": "/recount",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "show",
        "text": "show",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      }
    ]
  },
  {
    "parsed": true,
    "line": "/recount toggle",
    "results": [
      {
        "type": "command",
        "value": "/recount",
        "text": "/recount",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "toggle",
        "text": "toggle",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rofl",
    "results": [
      {
        "type": "command",
        "value": "/rofl",
        "text": "/rofl",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run  rz=GetRealZoneText();z=GetZoneText();sz=GetSubZoneText();mz=GetMinimapZoneText();|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "rz",
        "text": "rz",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "GetRealZoneText",
        "text": "GetRealZoneText",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "spellName",
        "value": "GetZoneText",
        "text": "GetZoneText",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "spellName",
        "value": "sz",
        "text": "sz",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "spellName",
        "value": "GetSubZoneText",
        "text": "GetSubZoneText",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 62,
        "lineBreaks": 0,
        "line": 1,
        "col": 63
      },
      {
        "type": "spellName",
        "value": "mz",
        "text": "mz",
        "offset": 63,
        "lineBreaks": 0,
        "line": 1,
        "col": 64
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "spellName",
        "value": "GetMinimapZoneText",
        "text": "GetMinimapZoneText",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "linkProffesion",
        "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run CastSpellByName(\"Blacksmithing\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" jestem w \"..GetZoneText(),\"CHANNEL\\nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "CastSpellByName",
        "text": "CastSpellByName",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Blacksmithing",
        "text": "Blacksmithing",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "IsModifiedClick",
        "text": "IsModifiedClick",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 75,
        "lineBreaks": 0,
        "line": 1,
        "col": 76
      },
      {
        "type": "spellName",
        "value": "CloseTradeSkill",
        "text": "CloseTradeSkill",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "spellName",
        "value": "GetTradeSkillListLink",
        "text": "GetTradeSkillListLink",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "jestem w",
        "text": "jestem w",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "spellName",
        "value": "GetZoneText",
        "text": "GetZoneText",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 167,
        "lineBreaks": 0,
        "line": 1,
        "col": 168
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 182,
        "lineBreaks": 0,
        "line": 1,
        "col": 183
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 197,
        "lineBreaks": 0,
        "line": 1,
        "col": 198
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "spellName",
        "value": "handel",
        "text": "handel",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 205,
        "lineBreaks": 0,
        "line": 1,
        "col": 206
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 206,
        "lineBreaks": 0,
        "line": 1,
        "col": 207
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 207,
        "lineBreaks": 0,
        "line": 1,
        "col": 208
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 208,
        "lineBreaks": 0,
        "line": 1,
        "col": 209
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 209,
        "lineBreaks": 0,
        "line": 1,
        "col": 210
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 214,
        "lineBreaks": 0,
        "line": 1,
        "col": 215
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 215,
        "lineBreaks": 0,
        "line": 1,
        "col": 216
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 219,
        "lineBreaks": 0,
        "line": 1,
        "col": 220
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 220,
        "lineBreaks": 0,
        "line": 1,
        "col": 221
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 221,
        "lineBreaks": 0,
        "line": 1,
        "col": 222
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 225,
        "lineBreaks": 0,
        "line": 1,
        "col": 226
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 226,
        "lineBreaks": 0,
        "line": 1,
        "col": 227
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 227,
        "lineBreaks": 0,
        "line": 1,
        "col": 228
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 228,
        "lineBreaks": 0,
        "line": 1,
        "col": 229
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 234,
        "lineBreaks": 0,
        "line": 1,
        "col": 235
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 235,
        "lineBreaks": 0,
        "line": 1,
        "col": 236
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 236,
        "lineBreaks": 0,
        "line": 1,
        "col": 237
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 237,
        "lineBreaks": 0,
        "line": 1,
        "col": 238
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 238,
        "lineBreaks": 0,
        "line": 1,
        "col": 239
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 239,
        "lineBreaks": 0,
        "line": 1,
        "col": 240
      },
      {
        "type": "spellName",
        "value": "GUILD",
        "text": "GUILD",
        "offset": 240,
        "lineBreaks": 0,
        "line": 1,
        "col": 241
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 245,
        "lineBreaks": 0,
        "line": 1,
        "col": 246
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 246,
        "lineBreaks": 0,
        "line": 1,
        "col": 247
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 247,
        "lineBreaks": 0,
        "line": 1,
        "col": 248
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 248,
        "lineBreaks": 0,
        "line": 1,
        "col": 249
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 249,
        "lineBreaks": 0,
        "line": 1,
        "col": 250
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 250,
        "lineBreaks": 0,
        "line": 1,
        "col": 251
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run CastSpellByName(\"Jewelcrafting\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" FULL, gem+40g\" ,\"CHANNEL\\nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "CastSpellByName",
        "text": "CastSpellByName",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Jewelcrafting",
        "text": "Jewelcrafting",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "IsModifiedClick",
        "text": "IsModifiedClick",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 75,
        "lineBreaks": 0,
        "line": 1,
        "col": 76
      },
      {
        "type": "spellName",
        "value": "CloseTradeSkill",
        "text": "CloseTradeSkill",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "spellName",
        "value": "GetTradeSkillListLink",
        "text": "GetTradeSkillListLink",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "FULL",
        "text": "FULL",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "spellName",
        "value": "gem",
        "text": "gem",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "number",
        "value": "40",
        "text": "40",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 187,
        "lineBreaks": 0,
        "line": 1,
        "col": 188
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 188,
        "lineBreaks": 0,
        "line": 1,
        "col": 189
      },
      {
        "type": "spellName",
        "value": "handel",
        "text": "handel",
        "offset": 189,
        "lineBreaks": 0,
        "line": 1,
        "col": 190
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 195,
        "lineBreaks": 0,
        "line": 1,
        "col": 196
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 196,
        "lineBreaks": 0,
        "line": 1,
        "col": 197
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 197,
        "lineBreaks": 0,
        "line": 1,
        "col": 198
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 200,
        "lineBreaks": 0,
        "line": 1,
        "col": 201
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 201,
        "lineBreaks": 0,
        "line": 1,
        "col": 202
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 204,
        "lineBreaks": 0,
        "line": 1,
        "col": 205
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 205,
        "lineBreaks": 0,
        "line": 1,
        "col": 206
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 209,
        "lineBreaks": 0,
        "line": 1,
        "col": 210
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 215,
        "lineBreaks": 0,
        "line": 1,
        "col": 216
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 216,
        "lineBreaks": 0,
        "line": 1,
        "col": 217
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 217,
        "lineBreaks": 0,
        "line": 1,
        "col": 218
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 218,
        "lineBreaks": 0,
        "line": 1,
        "col": 219
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 224,
        "lineBreaks": 0,
        "line": 1,
        "col": 225
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 225,
        "lineBreaks": 0,
        "line": 1,
        "col": 226
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 226,
        "lineBreaks": 0,
        "line": 1,
        "col": 227
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 227,
        "lineBreaks": 0,
        "line": 1,
        "col": 228
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 228,
        "lineBreaks": 0,
        "line": 1,
        "col": 229
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 229,
        "lineBreaks": 0,
        "line": 1,
        "col": 230
      },
      {
        "type": "spellName",
        "value": "GUILD",
        "text": "GUILD",
        "offset": 230,
        "lineBreaks": 0,
        "line": 1,
        "col": 231
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 235,
        "lineBreaks": 0,
        "line": 1,
        "col": 236
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 236,
        "lineBreaks": 0,
        "line": 1,
        "col": 237
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 237,
        "lineBreaks": 0,
        "line": 1,
        "col": 238
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 238,
        "lineBreaks": 0,
        "line": 1,
        "col": 239
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 239,
        "lineBreaks": 0,
        "line": 1,
        "col": 240
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 240,
        "lineBreaks": 0,
        "line": 1,
        "col": 241
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run CastSpellByName(\"Jewelcrafting\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" gem+50g w \"..GetZoneText(),\"CHANNEL\\nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "CastSpellByName",
        "text": "CastSpellByName",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Jewelcrafting",
        "text": "Jewelcrafting",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "IsModifiedClick",
        "text": "IsModifiedClick",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 75,
        "lineBreaks": 0,
        "line": 1,
        "col": 76
      },
      {
        "type": "spellName",
        "value": "CloseTradeSkill",
        "text": "CloseTradeSkill",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "spellName",
        "value": "GetTradeSkillListLink",
        "text": "GetTradeSkillListLink",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "gem",
        "text": "gem",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "unknown",
        "value": "+",
        "text": "+",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "number",
        "value": "50",
        "text": "50",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "spellName",
        "value": "g w",
        "text": "g w",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "spellName",
        "value": "GetZoneText",
        "text": "GetZoneText",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "spellName",
        "value": "handel",
        "text": "handel",
        "offset": 200,
        "lineBreaks": 0,
        "line": 1,
        "col": 201
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 206,
        "lineBreaks": 0,
        "line": 1,
        "col": 207
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 207,
        "lineBreaks": 0,
        "line": 1,
        "col": 208
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 208,
        "lineBreaks": 0,
        "line": 1,
        "col": 209
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 209,
        "lineBreaks": 0,
        "line": 1,
        "col": 210
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 212,
        "lineBreaks": 0,
        "line": 1,
        "col": 213
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 215,
        "lineBreaks": 0,
        "line": 1,
        "col": 216
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 216,
        "lineBreaks": 0,
        "line": 1,
        "col": 217
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 220,
        "lineBreaks": 0,
        "line": 1,
        "col": 221
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 221,
        "lineBreaks": 0,
        "line": 1,
        "col": 222
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 222,
        "lineBreaks": 0,
        "line": 1,
        "col": 223
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 226,
        "lineBreaks": 0,
        "line": 1,
        "col": 227
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 227,
        "lineBreaks": 0,
        "line": 1,
        "col": 228
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 228,
        "lineBreaks": 0,
        "line": 1,
        "col": 229
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 229,
        "lineBreaks": 0,
        "line": 1,
        "col": 230
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 235,
        "lineBreaks": 0,
        "line": 1,
        "col": 236
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 236,
        "lineBreaks": 0,
        "line": 1,
        "col": 237
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 237,
        "lineBreaks": 0,
        "line": 1,
        "col": 238
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 238,
        "lineBreaks": 0,
        "line": 1,
        "col": 239
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 239,
        "lineBreaks": 0,
        "line": 1,
        "col": 240
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 240,
        "lineBreaks": 0,
        "line": 1,
        "col": 241
      },
      {
        "type": "spellName",
        "value": "GUILD",
        "text": "GUILD",
        "offset": 241,
        "lineBreaks": 0,
        "line": 1,
        "col": 242
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 246,
        "lineBreaks": 0,
        "line": 1,
        "col": 247
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 247,
        "lineBreaks": 0,
        "line": 1,
        "col": 248
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 248,
        "lineBreaks": 0,
        "line": 1,
        "col": 249
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 249,
        "lineBreaks": 0,
        "line": 1,
        "col": 250
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 250,
        "lineBreaks": 0,
        "line": 1,
        "col": 251
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 251,
        "lineBreaks": 0,
        "line": 1,
        "col": 252
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run CastSpellByName(\"Weaponsmith\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" 6/6 ICC, 6/6 ToC\\\"CHANNEL\\nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "CastSpellByName",
        "text": "CastSpellByName",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Weaponsmith",
        "text": "Weaponsmith",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "spellName",
        "value": "IsModifiedClick",
        "text": "IsModifiedClick",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "spellName",
        "value": "CloseTradeSkill",
        "text": "CloseTradeSkill",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "spellName",
        "value": "GetTradeSkillListLink",
        "text": "GetTradeSkillListLink",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "spellName",
        "value": "shift",
        "text": "shift",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 125,
        "lineBreaks": 0,
        "line": 1,
        "col": 126
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 135,
        "lineBreaks": 0,
        "line": 1,
        "col": 136
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "number",
        "value": "6",
        "text": "6",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "number",
        "value": "6",
        "text": "6",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "spellName",
        "value": "ICC",
        "text": "ICC",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "number",
        "value": "6",
        "text": "6",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "number",
        "value": "6",
        "text": "6",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "spellName",
        "value": "ToC",
        "text": "ToC",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 167,
        "lineBreaks": 0,
        "line": 1,
        "col": 168
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 186,
        "lineBreaks": 0,
        "line": 1,
        "col": 187
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 187,
        "lineBreaks": 0,
        "line": 1,
        "col": 188
      },
      {
        "type": "spellName",
        "value": "handel",
        "text": "handel",
        "offset": 188,
        "lineBreaks": 0,
        "line": 1,
        "col": 189
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 194,
        "lineBreaks": 0,
        "line": 1,
        "col": 195
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 195,
        "lineBreaks": 0,
        "line": 1,
        "col": 196
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 196,
        "lineBreaks": 0,
        "line": 1,
        "col": 197
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 197,
        "lineBreaks": 0,
        "line": 1,
        "col": 198
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 200,
        "lineBreaks": 0,
        "line": 1,
        "col": 201
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 203,
        "lineBreaks": 0,
        "line": 1,
        "col": 204
      },
      {
        "type": "spellName",
        "value": "if i",
        "text": "if i",
        "offset": 204,
        "lineBreaks": 0,
        "line": 1,
        "col": 205
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 208,
        "lineBreaks": 0,
        "line": 1,
        "col": 209
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 209,
        "lineBreaks": 0,
        "line": 1,
        "col": 210
      },
      {
        "type": "spellName",
        "value": "ctrl",
        "text": "ctrl",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 214,
        "lineBreaks": 0,
        "line": 1,
        "col": 215
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 215,
        "lineBreaks": 0,
        "line": 1,
        "col": 216
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 216,
        "lineBreaks": 0,
        "line": 1,
        "col": 217
      },
      {
        "type": "spellName",
        "value": "then s",
        "text": "then s",
        "offset": 217,
        "lineBreaks": 0,
        "line": 1,
        "col": 218
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 223,
        "lineBreaks": 0,
        "line": 1,
        "col": 224
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 224,
        "lineBreaks": 0,
        "line": 1,
        "col": 225
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 225,
        "lineBreaks": 0,
        "line": 1,
        "col": 226
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 226,
        "lineBreaks": 0,
        "line": 1,
        "col": 227
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 227,
        "lineBreaks": 0,
        "line": 1,
        "col": 228
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 228,
        "lineBreaks": 0,
        "line": 1,
        "col": 229
      },
      {
        "type": "spellName",
        "value": "GUILD",
        "text": "GUILD",
        "offset": 229,
        "lineBreaks": 0,
        "line": 1,
        "col": 230
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 234,
        "lineBreaks": 0,
        "line": 1,
        "col": 235
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 235,
        "lineBreaks": 0,
        "line": 1,
        "col": 236
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 236,
        "lineBreaks": 0,
        "line": 1,
        "col": 237
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 237,
        "lineBreaks": 0,
        "line": 1,
        "col": 238
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 238,
        "lineBreaks": 0,
        "line": 1,
        "col": 239
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 239,
        "lineBreaks": 0,
        "line": 1,
        "col": 240
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run SetRaidTarget(\"target\\ 1);",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run a=SendChatMessage;b=\"test\";c=\"WG \";d=GetWintergraspWaitTime();e=floor;if d~=nil then f=e(d/3600)..\"h \";g=(e(d/60)%60)..\"m \";h=(d%60)..\"s \";a(c..f..g..h,\"CHANNEL\\nil,GetChannelName(b)) end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "a",
        "text": "a",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "b",
        "text": "b",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "test",
        "text": "test",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "WG",
        "text": "WG",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "spellName",
        "value": "e",
        "text": "e",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "spellName",
        "value": "if d",
        "text": "if d",
        "offset": 75,
        "lineBreaks": 0,
        "line": 1,
        "col": 76
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "spellName",
        "value": "nil then f",
        "text": "nil then f",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "spellName",
        "value": "e",
        "text": "e",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 96,
        "lineBreaks": 0,
        "line": 1,
        "col": 97
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 106,
        "lineBreaks": 0,
        "line": 1,
        "col": 107
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 107,
        "lineBreaks": 0,
        "line": 1,
        "col": 108
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 108,
        "lineBreaks": 0,
        "line": 1,
        "col": 109
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 109,
        "lineBreaks": 0,
        "line": 1,
        "col": 110
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 110,
        "lineBreaks": 0,
        "line": 1,
        "col": 111
      },
      {
        "type": "spellName",
        "value": "e",
        "text": "e",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 124,
        "lineBreaks": 0,
        "line": 1,
        "col": 125
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 125,
        "lineBreaks": 0,
        "line": 1,
        "col": 126
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "a",
        "text": "a",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 165,
        "lineBreaks": 0,
        "line": 1,
        "col": 166
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 166,
        "lineBreaks": 0,
        "line": 1,
        "col": 167
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "spellName",
        "value": "b",
        "text": "b",
        "offset": 185,
        "lineBreaks": 0,
        "line": 1,
        "col": 186
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 186,
        "lineBreaks": 0,
        "line": 1,
        "col": 187
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 187,
        "lineBreaks": 0,
        "line": 1,
        "col": 188
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 188,
        "lineBreaks": 0,
        "line": 1,
        "col": 189
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 189,
        "lineBreaks": 0,
        "line": 1,
        "col": 190
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run c=\"WG \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then c=c..h..\"h \";end;if m>0 then c=c..m..\"m \";end;if s>0 then c=c..s..\"s\";end;print(c)end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "WG",
        "text": "WG",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "nil then h",
        "text": "nil then h",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 75,
        "lineBreaks": 0,
        "line": 1,
        "col": 76
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "spellName",
        "value": "if h",
        "text": "if h",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 99,
        "lineBreaks": 0,
        "line": 1,
        "col": 100
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "spellName",
        "value": "then c",
        "text": "then c",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 108,
        "lineBreaks": 0,
        "line": 1,
        "col": 109
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 109,
        "lineBreaks": 0,
        "line": 1,
        "col": 110
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 110,
        "lineBreaks": 0,
        "line": 1,
        "col": 111
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 124,
        "lineBreaks": 0,
        "line": 1,
        "col": 125
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "spellName",
        "value": "then c",
        "text": "then c",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "spellName",
        "value": "if s",
        "text": "if s",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "spellName",
        "value": "then c",
        "text": "then c",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 166,
        "lineBreaks": 0,
        "line": 1,
        "col": 167
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 167,
        "lineBreaks": 0,
        "line": 1,
        "col": 168
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "spellName",
        "value": "print",
        "text": "print",
        "offset": 181,
        "lineBreaks": 0,
        "line": 1,
        "col": 182
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 186,
        "lineBreaks": 0,
        "line": 1,
        "col": 187
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 187,
        "lineBreaks": 0,
        "line": 1,
        "col": 188
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 188,
        "lineBreaks": 0,
        "line": 1,
        "col": 189
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 189,
        "lineBreaks": 0,
        "line": 1,
        "col": 190
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run for i=1,GetMerchantNumItems() do local l=GetMerchantItemLink(i) if l then if l:find(\"Devout Candle\") then BuyMerchantItem(i,100)end end end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "for i",
        "text": "for i",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "GetMerchantNumItems",
        "text": "GetMerchantNumItems",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "do local l",
        "text": "do local l",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "spellName",
        "value": "GetMerchantItemLink",
        "text": "GetMerchantItemLink",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "spellName",
        "value": "if l then if l",
        "text": "if l then if l",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "spellName",
        "value": "find",
        "text": "find",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "spellName",
        "value": "Devout Candle",
        "text": "Devout Candle",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "spellName",
        "value": "then BuyMerchantItem",
        "text": "then BuyMerchantItem",
        "offset": 106,
        "lineBreaks": 0,
        "line": 1,
        "col": 107
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "number",
        "value": "100",
        "text": "100",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "spellName",
        "value": "end end end",
        "text": "end end end",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run for i=1,GetMerchantNumItems() do local l=GetMerchantItemLink(i) if l then if l:find(\"Rumsey Rum Black Label\") then BuyMerchantItem(i,100)end end end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "for i",
        "text": "for i",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "GetMerchantNumItems",
        "text": "GetMerchantNumItems",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "do local l",
        "text": "do local l",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "spellName",
        "value": "GetMerchantItemLink",
        "text": "GetMerchantItemLink",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "spellName",
        "value": "if l then if l",
        "text": "if l then if l",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "spellName",
        "value": "find",
        "text": "find",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "spellName",
        "value": "Rumsey Rum Black Label",
        "text": "Rumsey Rum Black Label",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "spellName",
        "value": "then BuyMerchantItem",
        "text": "then BuyMerchantItem",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 135,
        "lineBreaks": 0,
        "line": 1,
        "col": 136
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "number",
        "value": "100",
        "text": "100",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "spellName",
        "value": "end end end",
        "text": "end end end",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run local x=UnitSex(\"target\");local g={\"n unknown!\\ \" boy!\\ \" girl!\"} n=GetUnitName(\"target\");if IsShiftKeyDown()then SendChatMessage(n ..\" is a\" ..g[x],\"SAY\");else print(n ..\" --\" ..g[x]);end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "local x",
        "text": "local x",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "UnitSex",
        "text": "UnitSex",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "spellName",
        "value": "local g",
        "text": "local g",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "unknown",
        "value": "{",
        "text": "{",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "spellName",
        "value": "n unknown",
        "text": "n unknown",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "spellName",
        "value": "boy",
        "text": "boy",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 62,
        "lineBreaks": 0,
        "line": 1,
        "col": 63
      },
      {
        "type": "spellName",
        "value": "girl",
        "text": "girl",
        "offset": 63,
        "lineBreaks": 0,
        "line": 1,
        "col": 64
      },
      {
        "type": "exclamation",
        "value": "!",
        "text": "!",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "unknown",
        "value": "}",
        "text": "}",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "spellName",
        "value": "n",
        "text": "n",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "spellName",
        "value": "GetUnitName",
        "text": "GetUnitName",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "spellName",
        "value": "if IsShiftKeyDown",
        "text": "if IsShiftKeyDown",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "spellName",
        "value": "then SendChatMessage",
        "text": "then SendChatMessage",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "spellName",
        "value": "n",
        "text": "n",
        "offset": 135,
        "lineBreaks": 0,
        "line": 1,
        "col": 136
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "is a",
        "text": "is a",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "spellName",
        "value": "SAY",
        "text": "SAY",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "spellName",
        "value": "else print",
        "text": "else print",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "spellName",
        "value": "n",
        "text": "n",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "unknown",
        "value": "-",
        "text": "-",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 181,
        "lineBreaks": 0,
        "line": 1,
        "col": 182
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 182,
        "lineBreaks": 0,
        "line": 1,
        "col": 183
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 185,
        "lineBreaks": 0,
        "line": 1,
        "col": 186
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 186,
        "lineBreaks": 0,
        "line": 1,
        "col": 187
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 187,
        "lineBreaks": 0,
        "line": 1,
        "col": 188
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 188,
        "lineBreaks": 0,
        "line": 1,
        "col": 189
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 189,
        "lineBreaks": 0,
        "line": 1,
        "col": 190
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 190,
        "lineBreaks": 0,
        "line": 1,
        "col": 191
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run t=3 h=5 d=17 r=\"ICC25\" g=5.5 x=\"extra info\"",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "number",
        "value": "5",
        "text": "5",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "number",
        "value": "17",
        "text": "17",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "ICC",
        "text": "ICC",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "number",
        "value": "25",
        "text": "25",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "numberDecimal",
        "value": "5.5",
        "text": "5.5",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "spellName",
        "value": "extra info",
        "text": "extra info",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run x=\"WG \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"CHANNEL\\nil,GetChannelName(\"pl\"))end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "WG",
        "text": "WG",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "nil then h",
        "text": "nil then h",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 75,
        "lineBreaks": 0,
        "line": 1,
        "col": 76
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "spellName",
        "value": "if h",
        "text": "if h",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 99,
        "lineBreaks": 0,
        "line": 1,
        "col": 100
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 108,
        "lineBreaks": 0,
        "line": 1,
        "col": 109
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 109,
        "lineBreaks": 0,
        "line": 1,
        "col": 110
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 110,
        "lineBreaks": 0,
        "line": 1,
        "col": 111
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 124,
        "lineBreaks": 0,
        "line": 1,
        "col": 125
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "spellName",
        "value": "if s",
        "text": "if s",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 166,
        "lineBreaks": 0,
        "line": 1,
        "col": 167
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 167,
        "lineBreaks": 0,
        "line": 1,
        "col": 168
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 181,
        "lineBreaks": 0,
        "line": 1,
        "col": 182
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 196,
        "lineBreaks": 0,
        "line": 1,
        "col": 197
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 197,
        "lineBreaks": 0,
        "line": 1,
        "col": 198
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 200,
        "lineBreaks": 0,
        "line": 1,
        "col": 201
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 207,
        "lineBreaks": 0,
        "line": 1,
        "col": 208
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 208,
        "lineBreaks": 0,
        "line": 1,
        "col": 209
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 212,
        "lineBreaks": 0,
        "line": 1,
        "col": 213
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 226,
        "lineBreaks": 0,
        "line": 1,
        "col": 227
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 227,
        "lineBreaks": 0,
        "line": 1,
        "col": 228
      },
      {
        "type": "spellName",
        "value": "pl",
        "text": "pl",
        "offset": 228,
        "lineBreaks": 0,
        "line": 1,
        "col": 229
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 230,
        "lineBreaks": 0,
        "line": 1,
        "col": 231
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 231,
        "lineBreaks": 0,
        "line": 1,
        "col": 232
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 232,
        "lineBreaks": 0,
        "line": 1,
        "col": 233
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 233,
        "lineBreaks": 0,
        "line": 1,
        "col": 234
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run x=\"WG \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"GUILD\");end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "WG",
        "text": "WG",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "nil then h",
        "text": "nil then h",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 73,
        "lineBreaks": 0,
        "line": 1,
        "col": 74
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 74,
        "lineBreaks": 0,
        "line": 1,
        "col": 75
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 75,
        "lineBreaks": 0,
        "line": 1,
        "col": 76
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "spellName",
        "value": "if h",
        "text": "if h",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 99,
        "lineBreaks": 0,
        "line": 1,
        "col": 100
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 108,
        "lineBreaks": 0,
        "line": 1,
        "col": 109
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 109,
        "lineBreaks": 0,
        "line": 1,
        "col": 110
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 110,
        "lineBreaks": 0,
        "line": 1,
        "col": 111
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 124,
        "lineBreaks": 0,
        "line": 1,
        "col": 125
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 128,
        "lineBreaks": 0,
        "line": 1,
        "col": 129
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 138,
        "lineBreaks": 0,
        "line": 1,
        "col": 139
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 139,
        "lineBreaks": 0,
        "line": 1,
        "col": 140
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "spellName",
        "value": "if s",
        "text": "if s",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 159,
        "lineBreaks": 0,
        "line": 1,
        "col": 160
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 166,
        "lineBreaks": 0,
        "line": 1,
        "col": 167
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 167,
        "lineBreaks": 0,
        "line": 1,
        "col": 168
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 168,
        "lineBreaks": 0,
        "line": 1,
        "col": 169
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 181,
        "lineBreaks": 0,
        "line": 1,
        "col": 182
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 196,
        "lineBreaks": 0,
        "line": 1,
        "col": 197
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 197,
        "lineBreaks": 0,
        "line": 1,
        "col": 198
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "spellName",
        "value": "GUILD",
        "text": "GUILD",
        "offset": 200,
        "lineBreaks": 0,
        "line": 1,
        "col": 201
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 205,
        "lineBreaks": 0,
        "line": 1,
        "col": 206
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 206,
        "lineBreaks": 0,
        "line": 1,
        "col": 207
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 207,
        "lineBreaks": 0,
        "line": 1,
        "col": 208
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 208,
        "lineBreaks": 0,
        "line": 1,
        "col": 209
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run x=\"WG in \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;print(x);else print('WG in progress');end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "WG in",
        "text": "WG in",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "nil then h",
        "text": "nil then h",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "spellName",
        "value": "if h",
        "text": "if h",
        "offset": 98,
        "lineBreaks": 0,
        "line": 1,
        "col": 99
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "spellName",
        "value": "if s",
        "text": "if s",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 162,
        "lineBreaks": 0,
        "line": 1,
        "col": 163
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 163,
        "lineBreaks": 0,
        "line": 1,
        "col": 164
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "spellName",
        "value": "print",
        "text": "print",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 189,
        "lineBreaks": 0,
        "line": 1,
        "col": 190
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 190,
        "lineBreaks": 0,
        "line": 1,
        "col": 191
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 191,
        "lineBreaks": 0,
        "line": 1,
        "col": 192
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 192,
        "lineBreaks": 0,
        "line": 1,
        "col": 193
      },
      {
        "type": "spellName",
        "value": "else print",
        "text": "else print",
        "offset": 193,
        "lineBreaks": 0,
        "line": 1,
        "col": 194
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 203,
        "lineBreaks": 0,
        "line": 1,
        "col": 204
      },
      {
        "type": "unknown",
        "value": "'",
        "text": "'",
        "offset": 204,
        "lineBreaks": 0,
        "line": 1,
        "col": 205
      },
      {
        "type": "spellName",
        "value": "WG in progress",
        "text": "WG in progress",
        "offset": 205,
        "lineBreaks": 0,
        "line": 1,
        "col": 206
      },
      {
        "type": "unknown",
        "value": "'",
        "text": "'",
        "offset": 219,
        "lineBreaks": 0,
        "line": 1,
        "col": 220
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 220,
        "lineBreaks": 0,
        "line": 1,
        "col": 221
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 221,
        "lineBreaks": 0,
        "line": 1,
        "col": 222
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 222,
        "lineBreaks": 0,
        "line": 1,
        "col": 223
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run x=\"WG za \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"CHANNEL\\nil,GetChannelName(\"pl\"))end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "WG za",
        "text": "WG za",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "nil then h",
        "text": "nil then h",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "spellName",
        "value": "if h",
        "text": "if h",
        "offset": 98,
        "lineBreaks": 0,
        "line": 1,
        "col": 99
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "spellName",
        "value": "if s",
        "text": "if s",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 162,
        "lineBreaks": 0,
        "line": 1,
        "col": 163
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 163,
        "lineBreaks": 0,
        "line": 1,
        "col": 164
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 200,
        "lineBreaks": 0,
        "line": 1,
        "col": 201
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 201,
        "lineBreaks": 0,
        "line": 1,
        "col": 202
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 202,
        "lineBreaks": 0,
        "line": 1,
        "col": 203
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 203,
        "lineBreaks": 0,
        "line": 1,
        "col": 204
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 214,
        "lineBreaks": 0,
        "line": 1,
        "col": 215
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 215,
        "lineBreaks": 0,
        "line": 1,
        "col": 216
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 229,
        "lineBreaks": 0,
        "line": 1,
        "col": 230
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 230,
        "lineBreaks": 0,
        "line": 1,
        "col": 231
      },
      {
        "type": "spellName",
        "value": "pl",
        "text": "pl",
        "offset": 231,
        "lineBreaks": 0,
        "line": 1,
        "col": 232
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 233,
        "lineBreaks": 0,
        "line": 1,
        "col": 234
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 234,
        "lineBreaks": 0,
        "line": 1,
        "col": 235
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 235,
        "lineBreaks": 0,
        "line": 1,
        "col": 236
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 236,
        "lineBreaks": 0,
        "line": 1,
        "col": 237
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run x=\"WG za \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"GUILD\");end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "WG za",
        "text": "WG za",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "nil then h",
        "text": "nil then h",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "spellName",
        "value": "if h",
        "text": "if h",
        "offset": 98,
        "lineBreaks": 0,
        "line": 1,
        "col": 99
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "spellName",
        "value": "if s",
        "text": "if s",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 162,
        "lineBreaks": 0,
        "line": 1,
        "col": 163
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 163,
        "lineBreaks": 0,
        "line": 1,
        "col": 164
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 199,
        "lineBreaks": 0,
        "line": 1,
        "col": 200
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 200,
        "lineBreaks": 0,
        "line": 1,
        "col": 201
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 201,
        "lineBreaks": 0,
        "line": 1,
        "col": 202
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 202,
        "lineBreaks": 0,
        "line": 1,
        "col": 203
      },
      {
        "type": "spellName",
        "value": "GUILD",
        "text": "GUILD",
        "offset": 203,
        "lineBreaks": 0,
        "line": 1,
        "col": 204
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 208,
        "lineBreaks": 0,
        "line": 1,
        "col": 209
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 209,
        "lineBreaks": 0,
        "line": 1,
        "col": 210
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run x=\"WG za \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;print(x);else print('Trwa WG');end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "WG za",
        "text": "WG za",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "GetWintergraspWaitTime",
        "text": "GetWintergraspWaitTime",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "floor",
        "text": "floor",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "unknown",
        "value": "~",
        "text": "~",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "nil then h",
        "text": "nil then h",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "number",
        "value": "3600",
        "text": "3600",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "slash",
        "value": "/",
        "text": "/",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "unknown",
        "value": "%",
        "text": "%",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "number",
        "value": "60",
        "text": "60",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "spellName",
        "value": "if h",
        "text": "if h",
        "offset": 98,
        "lineBreaks": 0,
        "line": 1,
        "col": 99
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 115,
        "lineBreaks": 0,
        "line": 1,
        "col": 116
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 116,
        "lineBreaks": 0,
        "line": 1,
        "col": 117
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 117,
        "lineBreaks": 0,
        "line": 1,
        "col": 118
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 118,
        "lineBreaks": 0,
        "line": 1,
        "col": 119
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 140,
        "lineBreaks": 0,
        "line": 1,
        "col": 141
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 141,
        "lineBreaks": 0,
        "line": 1,
        "col": 142
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 143,
        "lineBreaks": 0,
        "line": 1,
        "col": 144
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 144,
        "lineBreaks": 0,
        "line": 1,
        "col": 145
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 145,
        "lineBreaks": 0,
        "line": 1,
        "col": 146
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 149,
        "lineBreaks": 0,
        "line": 1,
        "col": 150
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 150,
        "lineBreaks": 0,
        "line": 1,
        "col": 151
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "spellName",
        "value": "if s",
        "text": "if s",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 162,
        "lineBreaks": 0,
        "line": 1,
        "col": 163
      },
      {
        "type": "spellName",
        "value": "then x",
        "text": "then x",
        "offset": 163,
        "lineBreaks": 0,
        "line": 1,
        "col": 164
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 171,
        "lineBreaks": 0,
        "line": 1,
        "col": 172
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 172,
        "lineBreaks": 0,
        "line": 1,
        "col": 173
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "spellName",
        "value": "print",
        "text": "print",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 189,
        "lineBreaks": 0,
        "line": 1,
        "col": 190
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 190,
        "lineBreaks": 0,
        "line": 1,
        "col": 191
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 191,
        "lineBreaks": 0,
        "line": 1,
        "col": 192
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 192,
        "lineBreaks": 0,
        "line": 1,
        "col": 193
      },
      {
        "type": "spellName",
        "value": "else print",
        "text": "else print",
        "offset": 193,
        "lineBreaks": 0,
        "line": 1,
        "col": 194
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 203,
        "lineBreaks": 0,
        "line": 1,
        "col": 204
      },
      {
        "type": "unknown",
        "value": "'",
        "text": "'",
        "offset": 204,
        "lineBreaks": 0,
        "line": 1,
        "col": 205
      },
      {
        "type": "spellName",
        "value": "Trwa WG",
        "text": "Trwa WG",
        "offset": 205,
        "lineBreaks": 0,
        "line": 1,
        "col": 206
      },
      {
        "type": "unknown",
        "value": "'",
        "text": "'",
        "offset": 212,
        "lineBreaks": 0,
        "line": 1,
        "col": 213
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 213,
        "lineBreaks": 0,
        "line": 1,
        "col": 214
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 214,
        "lineBreaks": 0,
        "line": 1,
        "col": 215
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 215,
        "lineBreaks": 0,
        "line": 1,
        "col": 216
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run y=GetAchievementCriteriaInfo for z=1,85 do a,b,c,d,e,f,g,h,i,j = y(1021,z); k,l,m,n,o,p,q,r,s,t = y(j) if m==false then print(\"\\\\124cffff0000\\\\Failed:\\\\124r\\k) else print(\"\\\\124cff00ff00\\\\OK:\\\\124r\\k) end; end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "y",
        "text": "y",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "GetAchievementCriteriaInfo for z",
        "text": "GetAchievementCriteriaInfo for z",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "number",
        "value": "85",
        "text": "85",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "do a",
        "text": "do a",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 49,
        "lineBreaks": 0,
        "line": 1,
        "col": 50
      },
      {
        "type": "spellName",
        "value": "b",
        "text": "b",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "spellName",
        "value": "e",
        "text": "e",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 62,
        "lineBreaks": 0,
        "line": 1,
        "col": 63
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 63,
        "lineBreaks": 0,
        "line": 1,
        "col": 64
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "spellName",
        "value": "j",
        "text": "j",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "spellName",
        "value": "y",
        "text": "y",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "number",
        "value": "1021",
        "text": "1021",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "spellName",
        "value": "k",
        "text": "k",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "spellName",
        "value": "l",
        "text": "l",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "spellName",
        "value": "n",
        "text": "n",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "spellName",
        "value": "o",
        "text": "o",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "spellName",
        "value": "p",
        "text": "p",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "spellName",
        "value": "q",
        "text": "q",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 96,
        "lineBreaks": 0,
        "line": 1,
        "col": 97
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 98,
        "lineBreaks": 0,
        "line": 1,
        "col": 99
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 99,
        "lineBreaks": 0,
        "line": 1,
        "col": 100
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "spellName",
        "value": "y",
        "text": "y",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "spellName",
        "value": "j",
        "text": "j",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 106,
        "lineBreaks": 0,
        "line": 1,
        "col": 107
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 107,
        "lineBreaks": 0,
        "line": 1,
        "col": 108
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 108,
        "lineBreaks": 0,
        "line": 1,
        "col": 109
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "spellName",
        "value": "false then print",
        "text": "false then print",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "spellName",
        "value": "cffff",
        "text": "cffff",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "number",
        "value": "0000",
        "text": "0000",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "spellName",
        "value": "Failed",
        "text": "Failed",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 160,
        "lineBreaks": 0,
        "line": 1,
        "col": 161
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 161,
        "lineBreaks": 0,
        "line": 1,
        "col": 162
      },
      {
        "type": "spellName",
        "value": "k",
        "text": "k",
        "offset": 162,
        "lineBreaks": 0,
        "line": 1,
        "col": 163
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 163,
        "lineBreaks": 0,
        "line": 1,
        "col": 164
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 164,
        "lineBreaks": 0,
        "line": 1,
        "col": 165
      },
      {
        "type": "spellName",
        "value": "else print",
        "text": "else print",
        "offset": 165,
        "lineBreaks": 0,
        "line": 1,
        "col": 166
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 177,
        "lineBreaks": 0,
        "line": 1,
        "col": 178
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 178,
        "lineBreaks": 0,
        "line": 1,
        "col": 179
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "spellName",
        "value": "cff",
        "text": "cff",
        "offset": 182,
        "lineBreaks": 0,
        "line": 1,
        "col": 183
      },
      {
        "type": "number",
        "value": "00",
        "text": "00",
        "offset": 185,
        "lineBreaks": 0,
        "line": 1,
        "col": 186
      },
      {
        "type": "spellName",
        "value": "ff",
        "text": "ff",
        "offset": 187,
        "lineBreaks": 0,
        "line": 1,
        "col": 188
      },
      {
        "type": "number",
        "value": "00",
        "text": "00",
        "offset": 189,
        "lineBreaks": 0,
        "line": 1,
        "col": 190
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 191,
        "lineBreaks": 0,
        "line": 1,
        "col": 192
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 192,
        "lineBreaks": 0,
        "line": 1,
        "col": 193
      },
      {
        "type": "spellName",
        "value": "OK",
        "text": "OK",
        "offset": 193,
        "lineBreaks": 0,
        "line": 1,
        "col": 194
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 195,
        "lineBreaks": 0,
        "line": 1,
        "col": 196
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 196,
        "lineBreaks": 0,
        "line": 1,
        "col": 197
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 197,
        "lineBreaks": 0,
        "line": 1,
        "col": 198
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 201,
        "lineBreaks": 0,
        "line": 1,
        "col": 202
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 202,
        "lineBreaks": 0,
        "line": 1,
        "col": 203
      },
      {
        "type": "spellName",
        "value": "k",
        "text": "k",
        "offset": 203,
        "lineBreaks": 0,
        "line": 1,
        "col": 204
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 204,
        "lineBreaks": 0,
        "line": 1,
        "col": 205
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 205,
        "lineBreaks": 0,
        "line": 1,
        "col": 206
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 206,
        "lineBreaks": 0,
        "line": 1,
        "col": 207
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 209,
        "lineBreaks": 0,
        "line": 1,
        "col": 210
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run y=GetAchievementCriteriaInfo for z=1,85 do a,b,c,d,e,f,g,h,i,j = y(1021,z); k,l,m,n,o,p,q,r,s,t = y(j) if m==false then print(\"\\\\124cffff0000\\\\You have NOT YET equipped:\\\\124r\\k) else print(\"\\\\124cff00ff00\\\\You have equipped:\\\\124r\\k) end; end",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "y",
        "text": "y",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "GetAchievementCriteriaInfo for z",
        "text": "GetAchievementCriteriaInfo for z",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "number",
        "value": "85",
        "text": "85",
        "offset": 42,
        "lineBreaks": 0,
        "line": 1,
        "col": 43
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      },
      {
        "type": "spellName",
        "value": "do a",
        "text": "do a",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 49,
        "lineBreaks": 0,
        "line": 1,
        "col": 50
      },
      {
        "type": "spellName",
        "value": "b",
        "text": "b",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "spellName",
        "value": "c",
        "text": "c",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 53,
        "lineBreaks": 0,
        "line": 1,
        "col": 54
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 54,
        "lineBreaks": 0,
        "line": 1,
        "col": 55
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "spellName",
        "value": "e",
        "text": "e",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      },
      {
        "type": "spellName",
        "value": "f",
        "text": "f",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 62,
        "lineBreaks": 0,
        "line": 1,
        "col": 63
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 63,
        "lineBreaks": 0,
        "line": 1,
        "col": 64
      },
      {
        "type": "spellName",
        "value": "i",
        "text": "i",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "spellName",
        "value": "j",
        "text": "j",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 67,
        "lineBreaks": 0,
        "line": 1,
        "col": 68
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 68,
        "lineBreaks": 0,
        "line": 1,
        "col": 69
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 69,
        "lineBreaks": 0,
        "line": 1,
        "col": 70
      },
      {
        "type": "spellName",
        "value": "y",
        "text": "y",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "number",
        "value": "1021",
        "text": "1021",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 76,
        "lineBreaks": 0,
        "line": 1,
        "col": 77
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 77,
        "lineBreaks": 0,
        "line": 1,
        "col": 78
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 78,
        "lineBreaks": 0,
        "line": 1,
        "col": 79
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 79,
        "lineBreaks": 0,
        "line": 1,
        "col": 80
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "spellName",
        "value": "k",
        "text": "k",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "spellName",
        "value": "l",
        "text": "l",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 84,
        "lineBreaks": 0,
        "line": 1,
        "col": 85
      },
      {
        "type": "spellName",
        "value": "m",
        "text": "m",
        "offset": 85,
        "lineBreaks": 0,
        "line": 1,
        "col": 86
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 86,
        "lineBreaks": 0,
        "line": 1,
        "col": 87
      },
      {
        "type": "spellName",
        "value": "n",
        "text": "n",
        "offset": 87,
        "lineBreaks": 0,
        "line": 1,
        "col": 88
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 88,
        "lineBreaks": 0,
        "line": 1,
        "col": 89
      },
      {
        "type": "spellName",
        "value": "o",
        "text": "o",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "spellName",
        "value": "p",
        "text": "p",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "spellName",
        "value": "q",
        "text": "q",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 96,
        "lineBreaks": 0,
        "line": 1,
        "col": 97
      },
      {
        "type": "spellName",
        "value": "s",
        "text": "s",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 98,
        "lineBreaks": 0,
        "line": 1,
        "col": 99
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 99,
        "lineBreaks": 0,
        "line": 1,
        "col": 100
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "spellName",
        "value": "y",
        "text": "y",
        "offset": 103,
        "lineBreaks": 0,
        "line": 1,
        "col": 104
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 104,
        "lineBreaks": 0,
        "line": 1,
        "col": 105
      },
      {
        "type": "spellName",
        "value": "j",
        "text": "j",
        "offset": 105,
        "lineBreaks": 0,
        "line": 1,
        "col": 106
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 106,
        "lineBreaks": 0,
        "line": 1,
        "col": 107
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 107,
        "lineBreaks": 0,
        "line": 1,
        "col": 108
      },
      {
        "type": "spellName",
        "value": "if m",
        "text": "if m",
        "offset": 108,
        "lineBreaks": 0,
        "line": 1,
        "col": 109
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "spellName",
        "value": "false then print",
        "text": "false then print",
        "offset": 114,
        "lineBreaks": 0,
        "line": 1,
        "col": 115
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 132,
        "lineBreaks": 0,
        "line": 1,
        "col": 133
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 133,
        "lineBreaks": 0,
        "line": 1,
        "col": 134
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "spellName",
        "value": "cffff",
        "text": "cffff",
        "offset": 137,
        "lineBreaks": 0,
        "line": 1,
        "col": 138
      },
      {
        "type": "number",
        "value": "0000",
        "text": "0000",
        "offset": 142,
        "lineBreaks": 0,
        "line": 1,
        "col": 143
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 146,
        "lineBreaks": 0,
        "line": 1,
        "col": 147
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 147,
        "lineBreaks": 0,
        "line": 1,
        "col": 148
      },
      {
        "type": "spellName",
        "value": "You have NOT YET equipped",
        "text": "You have NOT YET equipped",
        "offset": 148,
        "lineBreaks": 0,
        "line": 1,
        "col": 149
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 173,
        "lineBreaks": 0,
        "line": 1,
        "col": 174
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 174,
        "lineBreaks": 0,
        "line": 1,
        "col": 175
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 175,
        "lineBreaks": 0,
        "line": 1,
        "col": 176
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 176,
        "lineBreaks": 0,
        "line": 1,
        "col": 177
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 179,
        "lineBreaks": 0,
        "line": 1,
        "col": 180
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 180,
        "lineBreaks": 0,
        "line": 1,
        "col": 181
      },
      {
        "type": "spellName",
        "value": "k",
        "text": "k",
        "offset": 181,
        "lineBreaks": 0,
        "line": 1,
        "col": 182
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 182,
        "lineBreaks": 0,
        "line": 1,
        "col": 183
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 183,
        "lineBreaks": 0,
        "line": 1,
        "col": 184
      },
      {
        "type": "spellName",
        "value": "else print",
        "text": "else print",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 194,
        "lineBreaks": 0,
        "line": 1,
        "col": 195
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 195,
        "lineBreaks": 0,
        "line": 1,
        "col": 196
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 196,
        "lineBreaks": 0,
        "line": 1,
        "col": 197
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 197,
        "lineBreaks": 0,
        "line": 1,
        "col": 198
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 198,
        "lineBreaks": 0,
        "line": 1,
        "col": 199
      },
      {
        "type": "spellName",
        "value": "cff",
        "text": "cff",
        "offset": 201,
        "lineBreaks": 0,
        "line": 1,
        "col": 202
      },
      {
        "type": "number",
        "value": "00",
        "text": "00",
        "offset": 204,
        "lineBreaks": 0,
        "line": 1,
        "col": 205
      },
      {
        "type": "spellName",
        "value": "ff",
        "text": "ff",
        "offset": 206,
        "lineBreaks": 0,
        "line": 1,
        "col": 207
      },
      {
        "type": "number",
        "value": "00",
        "text": "00",
        "offset": 208,
        "lineBreaks": 0,
        "line": 1,
        "col": 209
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 210,
        "lineBreaks": 0,
        "line": 1,
        "col": 211
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 211,
        "lineBreaks": 0,
        "line": 1,
        "col": 212
      },
      {
        "type": "spellName",
        "value": "You have equipped",
        "text": "You have equipped",
        "offset": 212,
        "lineBreaks": 0,
        "line": 1,
        "col": 213
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 229,
        "lineBreaks": 0,
        "line": 1,
        "col": 230
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 230,
        "lineBreaks": 0,
        "line": 1,
        "col": 231
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 231,
        "lineBreaks": 0,
        "line": 1,
        "col": 232
      },
      {
        "type": "number",
        "value": "124",
        "text": "124",
        "offset": 232,
        "lineBreaks": 0,
        "line": 1,
        "col": 233
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 235,
        "lineBreaks": 0,
        "line": 1,
        "col": 236
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 236,
        "lineBreaks": 0,
        "line": 1,
        "col": 237
      },
      {
        "type": "spellName",
        "value": "k",
        "text": "k",
        "offset": 237,
        "lineBreaks": 0,
        "line": 1,
        "col": 238
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 238,
        "lineBreaks": 0,
        "line": 1,
        "col": 239
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 239,
        "lineBreaks": 0,
        "line": 1,
        "col": 240
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 240,
        "lineBreaks": 0,
        "line": 1,
        "col": 241
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 243,
        "lineBreaks": 0,
        "line": 1,
        "col": 244
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 244,
        "lineBreaks": 0,
        "line": 1,
        "col": 245
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 245,
        "lineBreaks": 0,
        "line": 1,
        "col": 246
      }
    ]
  },
  {
    "parsed": true,
    "line": "/run z=r..\" \" if t>0 then z=z..t..\"tank \"end if h>0 then z=z..h..\"heal \"end if d>0 then z=z..d..\"dps \"end if g>0 then z=z..g..\"gs \"end  SendChatMessage(z..x,\"CHANNEL\\nil,GetChannelName(\"test\"))",
    "results": [
      {
        "type": "command",
        "value": "/run",
        "text": "/run",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "spellName",
        "value": "r",
        "text": "r",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "if t",
        "text": "if t",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "then z",
        "text": "then z",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "spellName",
        "value": "t",
        "text": "t",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "spellName",
        "value": "tank",
        "text": "tank",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 40,
        "lineBreaks": 0,
        "line": 1,
        "col": 41
      },
      {
        "type": "spellName",
        "value": "end if h",
        "text": "end if h",
        "offset": 41,
        "lineBreaks": 0,
        "line": 1,
        "col": 42
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 49,
        "lineBreaks": 0,
        "line": 1,
        "col": 50
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      },
      {
        "type": "spellName",
        "value": "then z",
        "text": "then z",
        "offset": 52,
        "lineBreaks": 0,
        "line": 1,
        "col": 53
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 61,
        "lineBreaks": 0,
        "line": 1,
        "col": 62
      },
      {
        "type": "spellName",
        "value": "h",
        "text": "h",
        "offset": 62,
        "lineBreaks": 0,
        "line": 1,
        "col": 63
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 63,
        "lineBreaks": 0,
        "line": 1,
        "col": 64
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 64,
        "lineBreaks": 0,
        "line": 1,
        "col": 65
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 65,
        "lineBreaks": 0,
        "line": 1,
        "col": 66
      },
      {
        "type": "spellName",
        "value": "heal",
        "text": "heal",
        "offset": 66,
        "lineBreaks": 0,
        "line": 1,
        "col": 67
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 70,
        "lineBreaks": 0,
        "line": 1,
        "col": 71
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 71,
        "lineBreaks": 0,
        "line": 1,
        "col": 72
      },
      {
        "type": "spellName",
        "value": "end if d",
        "text": "end if d",
        "offset": 72,
        "lineBreaks": 0,
        "line": 1,
        "col": 73
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 80,
        "lineBreaks": 0,
        "line": 1,
        "col": 81
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 81,
        "lineBreaks": 0,
        "line": 1,
        "col": 82
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 82,
        "lineBreaks": 0,
        "line": 1,
        "col": 83
      },
      {
        "type": "spellName",
        "value": "then z",
        "text": "then z",
        "offset": 83,
        "lineBreaks": 0,
        "line": 1,
        "col": 84
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 89,
        "lineBreaks": 0,
        "line": 1,
        "col": 90
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 90,
        "lineBreaks": 0,
        "line": 1,
        "col": 91
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 91,
        "lineBreaks": 0,
        "line": 1,
        "col": 92
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 92,
        "lineBreaks": 0,
        "line": 1,
        "col": 93
      },
      {
        "type": "spellName",
        "value": "d",
        "text": "d",
        "offset": 93,
        "lineBreaks": 0,
        "line": 1,
        "col": 94
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 94,
        "lineBreaks": 0,
        "line": 1,
        "col": 95
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 95,
        "lineBreaks": 0,
        "line": 1,
        "col": 96
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 96,
        "lineBreaks": 0,
        "line": 1,
        "col": 97
      },
      {
        "type": "spellName",
        "value": "dps",
        "text": "dps",
        "offset": 97,
        "lineBreaks": 0,
        "line": 1,
        "col": 98
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 100,
        "lineBreaks": 0,
        "line": 1,
        "col": 101
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 101,
        "lineBreaks": 0,
        "line": 1,
        "col": 102
      },
      {
        "type": "spellName",
        "value": "end if g",
        "text": "end if g",
        "offset": 102,
        "lineBreaks": 0,
        "line": 1,
        "col": 103
      },
      {
        "type": "unknown",
        "value": ">",
        "text": ">",
        "offset": 110,
        "lineBreaks": 0,
        "line": 1,
        "col": 111
      },
      {
        "type": "number",
        "value": "0",
        "text": "0",
        "offset": 111,
        "lineBreaks": 0,
        "line": 1,
        "col": 112
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 112,
        "lineBreaks": 0,
        "line": 1,
        "col": 113
      },
      {
        "type": "spellName",
        "value": "then z",
        "text": "then z",
        "offset": 113,
        "lineBreaks": 0,
        "line": 1,
        "col": 114
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 119,
        "lineBreaks": 0,
        "line": 1,
        "col": 120
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 120,
        "lineBreaks": 0,
        "line": 1,
        "col": 121
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 121,
        "lineBreaks": 0,
        "line": 1,
        "col": 122
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 122,
        "lineBreaks": 0,
        "line": 1,
        "col": 123
      },
      {
        "type": "spellName",
        "value": "g",
        "text": "g",
        "offset": 123,
        "lineBreaks": 0,
        "line": 1,
        "col": 124
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 124,
        "lineBreaks": 0,
        "line": 1,
        "col": 125
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 125,
        "lineBreaks": 0,
        "line": 1,
        "col": 126
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 126,
        "lineBreaks": 0,
        "line": 1,
        "col": 127
      },
      {
        "type": "spellName",
        "value": "gs",
        "text": "gs",
        "offset": 127,
        "lineBreaks": 0,
        "line": 1,
        "col": 128
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 129,
        "lineBreaks": 0,
        "line": 1,
        "col": 130
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 130,
        "lineBreaks": 0,
        "line": 1,
        "col": 131
      },
      {
        "type": "spellName",
        "value": "end",
        "text": "end",
        "offset": 131,
        "lineBreaks": 0,
        "line": 1,
        "col": 132
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 134,
        "lineBreaks": 0,
        "line": 1,
        "col": 135
      },
      {
        "type": "spellName",
        "value": "SendChatMessage",
        "text": "SendChatMessage",
        "offset": 136,
        "lineBreaks": 0,
        "line": 1,
        "col": 137
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 151,
        "lineBreaks": 0,
        "line": 1,
        "col": 152
      },
      {
        "type": "spellName",
        "value": "z",
        "text": "z",
        "offset": 152,
        "lineBreaks": 0,
        "line": 1,
        "col": 153
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 153,
        "lineBreaks": 0,
        "line": 1,
        "col": 154
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 154,
        "lineBreaks": 0,
        "line": 1,
        "col": 155
      },
      {
        "type": "spellName",
        "value": "x",
        "text": "x",
        "offset": 155,
        "lineBreaks": 0,
        "line": 1,
        "col": 156
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 156,
        "lineBreaks": 0,
        "line": 1,
        "col": 157
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 157,
        "lineBreaks": 0,
        "line": 1,
        "col": 158
      },
      {
        "type": "spellName",
        "value": "CHANNEL",
        "text": "CHANNEL",
        "offset": 158,
        "lineBreaks": 0,
        "line": 1,
        "col": 159
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 165,
        "lineBreaks": 0,
        "line": 1,
        "col": 166
      },
      {
        "type": "spellName",
        "value": "nil",
        "text": "nil",
        "offset": 166,
        "lineBreaks": 0,
        "line": 1,
        "col": 167
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 169,
        "lineBreaks": 0,
        "line": 1,
        "col": 170
      },
      {
        "type": "spellName",
        "value": "GetChannelName",
        "text": "GetChannelName",
        "offset": 170,
        "lineBreaks": 0,
        "line": 1,
        "col": 171
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 184,
        "lineBreaks": 0,
        "line": 1,
        "col": 185
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 185,
        "lineBreaks": 0,
        "line": 1,
        "col": 186
      },
      {
        "type": "spellName",
        "value": "test",
        "text": "test",
        "offset": 186,
        "lineBreaks": 0,
        "line": 1,
        "col": 187
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 190,
        "lineBreaks": 0,
        "line": 1,
        "col": 191
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 191,
        "lineBreaks": 0,
        "line": 1,
        "col": 192
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 192,
        "lineBreaks": 0,
        "line": 1,
        "col": 193
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw 1 faza polega na zbiciu hp bez odpalania CDs",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "faza polega na zbiciu hp bez odpalania CDs",
        "text": "faza polega na zbiciu hp bez odpalania CDs",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw 2 faza Onyxia lata, rdps caly czas ja bija, mdps bije addy",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "faza Onyxia lata",
        "text": "faza Onyxia lata",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "spellName",
        "value": "rdps caly czas ja bija",
        "text": "rdps caly czas ja bija",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 47,
        "lineBreaks": 0,
        "line": 1,
        "col": 48
      },
      {
        "type": "spellName",
        "value": "mdps bije addy",
        "text": "mdps bije addy",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw 3 faza Onyxia laduje,i co jakis czas fearuje, szamani musza postawic tremor totem",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "faza Onyxia laduje",
        "text": "faza Onyxia laduje",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "spellName",
        "value": "i co jakis czas fearuje",
        "text": "i co jakis czas fearuje",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 49,
        "lineBreaks": 0,
        "line": 1,
        "col": 50
      },
      {
        "type": "spellName",
        "value": "szamani musza postawic tremor totem",
        "text": "szamani musza postawic tremor totem",
        "offset": 50,
        "lineBreaks": 0,
        "line": 1,
        "col": 51
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw Argent Defender CD",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Argent Defender CD",
        "text": "Argent Defender CD",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw Pokoj: \"We pwn like np\" Haslo: \"marchewka\"",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "Pokoj",
        "text": "Pokoj",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 9,
        "lineBreaks": 0,
        "line": 1,
        "col": 10
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "We pwn like np",
        "text": "We pwn like np",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Haslo",
        "text": "Haslo",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "marchewka",
        "text": "marchewka",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw TS: 178.33.136.99",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "TS",
        "text": "TS",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "numberDecimal",
        "value": "178.33",
        "text": "178.33",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "unknown",
        "value": ".",
        "text": ".",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "numberDecimal",
        "value": "136.99",
        "text": "136.99",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw ZAWSZE stoimy obok smoka, pod skrzydlami",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "ZAWSZE stoimy obok smoka",
        "text": "ZAWSZE stoimy obok smoka",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "spellName",
        "value": "pod skrzydlami",
        "text": "pod skrzydlami",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw jak bedzie breath, trzeba uciekac na boki i patrzec, gdzie bedzie zionac ogniem",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "jak bedzie breath",
        "text": "jak bedzie breath",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "trzeba uciekac na boki i patrzec",
        "text": "trzeba uciekac na boki i patrzec",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 55,
        "lineBreaks": 0,
        "line": 1,
        "col": 56
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 56,
        "lineBreaks": 0,
        "line": 1,
        "col": 57
      },
      {
        "type": "spellName",
        "value": "gdzie bedzie zionac ogniem",
        "text": "gdzie bedzie zionac ogniem",
        "offset": 57,
        "lineBreaks": 0,
        "line": 1,
        "col": 58
      }
    ]
  },
  {
    "parsed": true,
    "line": "/rw tutaj odpalamy BL i wszystkie CDs, nadal bijemy z boku, jak to ze smokami",
    "results": [
      {
        "type": "command",
        "value": "/rw",
        "text": "/rw",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      },
      {
        "type": "spellName",
        "value": "tutaj odpalamy BL i wszystkie CDs",
        "text": "tutaj odpalamy BL i wszystkie CDs",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "spellName",
        "value": "nadal bijemy z boku",
        "text": "nadal bijemy z boku",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 58,
        "lineBreaks": 0,
        "line": 1,
        "col": 59
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 59,
        "lineBreaks": 0,
        "line": 1,
        "col": 60
      },
      {
        "type": "spellName",
        "value": "jak to ze smokami",
        "text": "jak to ze smokami",
        "offset": 60,
        "lineBreaks": 0,
        "line": 1,
        "col": 61
      }
    ]
  },
  {
    "parsed": true,
    "line": "/s Another One Bites By Dusst",
    "results": [
      {
        "type": "command",
        "value": "/s",
        "text": "/s",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Another One Bites By Dusst",
        "text": "Another One Bites By Dusst",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      }
    ]
  },
  {
    "parsed": true,
    "line": "/s Click the portal to get lazy butts over here",
    "results": [
      {
        "type": "command",
        "value": "/s",
        "text": "/s",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Click the portal to get lazy butts over here",
        "text": "Click the portal to get lazy butts over here",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script CombatLogClearEntries();",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "CombatLogClearEntries",
        "text": "CombatLogClearEntries",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script LeaveParty()",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "LeaveParty",
        "text": "LeaveParty",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script LeaveParty();",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "LeaveParty",
        "text": "LeaveParty",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetCVar(\"cameraDistanceMax\\45)",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetCVar",
        "text": "SetCVar",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "cameraDistanceMax",
        "text": "cameraDistanceMax",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "number",
        "value": "45",
        "text": "45",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetCVar(\"cameraDistanceMax\\90)",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetCVar",
        "text": "SetCVar",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "cameraDistanceMax",
        "text": "cameraDistanceMax",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "number",
        "value": "90",
        "text": "90",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Arald\\4);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Arald",
        "text": "Arald",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Arsh\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Arsh",
        "text": "Arsh",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Aseel\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Aseel",
        "text": "Aseel",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Asheel\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Asheel",
        "text": "Asheel",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Bowjob\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Bowjob",
        "text": "Bowjob",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Cleavage\\1);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Cleavage",
        "text": "Cleavage",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Crab\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Crab",
        "text": "Crab",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Fiervina\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Fiervina",
        "text": "Fiervina",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Graverawler\\5);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Graverawler",
        "text": "Graverawler",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "number",
        "value": "5",
        "text": "5",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Graverawler\\7);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Graverawler",
        "text": "Graverawler",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "number",
        "value": "7",
        "text": "7",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Khuunem\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Khuunem",
        "text": "Khuunem",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Shadowfiend\\7); )",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Shadowfiend",
        "text": "Shadowfiend",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "number",
        "value": "7",
        "text": "7",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 38,
        "lineBreaks": 0,
        "line": 1,
        "col": 39
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 39,
        "lineBreaks": 0,
        "line": 1,
        "col": 40
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Stonerumbler\\7)",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Stonerumbler",
        "text": "Stonerumbler",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "number",
        "value": "7",
        "text": "7",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Thornstar\\4);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Thornstar",
        "text": "Thornstar",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Thryllin\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Thryllin",
        "text": "Thryllin",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"Voylin\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Voylin",
        "text": "Voylin",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"asdfasd\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "asdfasd",
        "text": "asdfasd",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 33,
        "lineBreaks": 0,
        "line": 1,
        "col": 34
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party1\\2);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party1\\4);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party1\\5);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "5",
        "text": "5",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party1\\8);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party2\\2);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party2\\3);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party2\\4);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party2\\6);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "6",
        "text": "6",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party3\\2);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party3\\3);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party3\\7);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "3",
        "text": "3",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "7",
        "text": "7",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party4\\1);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"party4\\5);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "party",
        "text": "party",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "5",
        "text": "5",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"player\\1);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"player\\4);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"target\\1);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script SetRaidTarget(\"target\\4);",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "SetRaidTarget",
        "text": "SetRaidTarget",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "unknown",
        "value": "\"",
        "text": "\"",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "unknown",
        "value": "\\",
        "text": "\\",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "number",
        "value": "4",
        "text": "4",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/script UIErrorsFrame:Clear()",
    "results": [
      {
        "type": "command",
        "value": "/script",
        "text": "/script",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "UIErrorsFrame",
        "text": "UIErrorsFrame",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "Clear",
        "text": "Clear",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "bracketRoundOpen",
        "value": "(",
        "text": "(",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "bracketRoundClose",
        "value": ")",
        "text": ")",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/startattack",
    "results": [
      {
        "type": "command",
        "value": "/startattack",
        "text": "/startattack",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/stopcasting",
    "results": [
      {
        "type": "command",
        "value": "/stopcasting",
        "text": "/stopcasting",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/stopmacro",
    "results": [
      {
        "type": "command",
        "value": "/stopmacro",
        "text": "/stopmacro",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/stopmacro [nopet:succubus]",
    "results": [
      {
        "type": "command",
        "value": "/stopmacro",
        "text": "/stopmacro",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "nopet",
        "text": "nopet",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "spellName",
        "value": "succubus",
        "text": "succubus",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Asius",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Asius",
        "text": "Asius",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Busted",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Busted",
        "text": "Busted",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Ebon Gargoyle",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Ebon Gargoyle",
        "text": "Ebon Gargoyle",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Holiinaf",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Holiinaf",
        "text": "Holiinaf",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Knucklerot",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Knucklerot",
        "text": "Knucklerot",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Lake Frog",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Lake Frog",
        "text": "Lake Frog",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Nexus Drake Hatchling",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Nexus Drake Hatchling",
        "text": "Nexus Drake Hatchling",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Refille",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Refille",
        "text": "Refille",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Shadowy Mercenary",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Shadowy Mercenary",
        "text": "Shadowy Mercenary",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar Tremor Totem",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Tremor Totem",
        "text": "Tremor Totem",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar devilsmile",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "devilsmile",
        "text": "devilsmile",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar thangorodrim",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "thangorodrim",
        "text": "thangorodrim",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar tremor totem",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "tremor totem",
        "text": "tremor totem",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar trousi",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "trousi",
        "text": "trousi",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tar umis",
    "results": [
      {
        "type": "command",
        "value": "/tar",
        "text": "/tar",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "umis",
        "text": "umis",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/target player",
    "results": [
      {
        "type": "command",
        "value": "/target",
        "text": "/target",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      }
    ]
  },
  {
    "parsed": true,
    "line": "/targetenemy [noharm][dead]",
    "results": [
      {
        "type": "command",
        "value": "/targetenemy",
        "text": "/targetenemy",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "spellName",
        "value": "noharm",
        "text": "noharm",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "spellName",
        "value": "dead",
        "text": "dead",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/targetlasttarget",
    "results": [
      {
        "type": "command",
        "value": "/targetlasttarget",
        "text": "/targetlasttarget",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/targetlasttarget [pet:Felhunter]",
    "results": [
      {
        "type": "command",
        "value": "/targetlasttarget",
        "text": "/targetlasttarget",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "spellName",
        "value": "pet",
        "text": "pet",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 22,
        "lineBreaks": 0,
        "line": 1,
        "col": 23
      },
      {
        "type": "spellName",
        "value": "Felhunter",
        "text": "Felhunter",
        "offset": 23,
        "lineBreaks": 0,
        "line": 1,
        "col": 24
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 32,
        "lineBreaks": 0,
        "line": 1,
        "col": 33
      }
    ]
  },
  {
    "parsed": true,
    "line": "/tidy",
    "results": [
      {
        "type": "command",
        "value": "/tidy",
        "text": "/tidy",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use 10",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "number",
        "value": "10",
        "text": "10",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use 13",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "number",
        "value": "13",
        "text": "13",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use 14",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "number",
        "value": "14",
        "text": "14",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use 15",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "number",
        "value": "15",
        "text": "15",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use 6",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "number",
        "value": "6",
        "text": "6",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use 8",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "number",
        "value": "8",
        "text": "8",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Corroded Skeleton Key",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Corroded Skeleton Key",
        "text": "Corroded Skeleton Key",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Deadly Poison IX",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Deadly Poison IX",
        "text": "Deadly Poison IX",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Fel Healthstone",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Fel Healthstone",
        "text": "Fel Healthstone",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Fel HealthstoneFel Healthstone",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Fel HealthstoneFel Healthstone",
        "text": "Fel HealthstoneFel Healthstone",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Frostsavage Gloves",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Frostsavage Gloves",
        "text": "Frostsavage Gloves",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Furious Gladiator's Chain Gauntlets",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Furious Gladiator's Chain Gauntlets",
        "text": "Furious Gladiator's Chain Gauntlets",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Honey-Spiced Lichen",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Honey-Spiced Lichen",
        "text": "Honey-Spiced Lichen",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Poached Emperor Salmon",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Poached Emperor Salmon",
        "text": "Poached Emperor Salmon",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Relentless Gladiator's Dreadplate Gauntlets",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Relentless Gladiator's Dreadplate Gauntlets",
        "text": "Relentless Gladiator's Dreadplate Gauntlets",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Runic Healing Potion",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Runic Healing Potion",
        "text": "Runic Healing Potion",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Scourgelord Gauntlets",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Scourgelord Gauntlets",
        "text": "Scourgelord Gauntlets",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Smoked Talbuk Venison",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Smoked Talbuk Venison",
        "text": "Smoked Talbuk Venison",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use Warts-B-Gone Lip Balm",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "Warts-B-Gone Lip Balm",
        "text": "Warts-B-Gone Lip Balm",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [button:1]  Demonic Soulstone",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": "  ",
        "text": "  ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Demonic Soulstone",
        "text": "Demonic Soulstone",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [button:1] 16",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [button:1] 16; [button:2] 17",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "number",
        "value": "16",
        "text": "16",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 18,
        "lineBreaks": 0,
        "line": 1,
        "col": 19
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "number",
        "value": "2",
        "text": "2",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 30,
        "lineBreaks": 0,
        "line": 1,
        "col": 31
      },
      {
        "type": "number",
        "value": "17",
        "text": "17",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [button:1] Grand Firestone",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Grand Firestone",
        "text": "Grand Firestone",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [button:1] Grand Spellstone",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "button",
        "text": "button",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "colon",
        "value": ":",
        "text": ":",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "number",
        "value": "1",
        "text": "1",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "spellName",
        "value": "Grand Spellstone",
        "text": "Grand Spellstone",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] Black Drake;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Black Drake",
        "text": "Black Drake",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 37,
        "lineBreaks": 0,
        "line": 1,
        "col": 38
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] Bronze Drake",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Bronze Drake",
        "text": "Bronze Drake",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] Magnificent Flying Carpet;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Magnificent Flying Carpet",
        "text": "Magnificent Flying Carpet",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 51,
        "lineBreaks": 0,
        "line": 1,
        "col": 52
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] Swift Blue Gryphon;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Swift Blue Gryphon",
        "text": "Swift Blue Gryphon",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] Swift Purple Gryphon;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Swift Purple Gryphon",
        "text": "Swift Purple Gryphon",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 46,
        "lineBreaks": 0,
        "line": 1,
        "col": 47
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] Swift Purple Wind Rider;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Swift Purple Wind Rider",
        "text": "Swift Purple Wind Rider",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 49,
        "lineBreaks": 0,
        "line": 1,
        "col": 50
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] Swift Red Gryphon;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "Swift Red Gryphon",
        "text": "Swift Red Gryphon",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [flyable, nomounted] fly;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "flyable",
        "text": "flyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 14,
        "lineBreaks": 0,
        "line": 1,
        "col": 15
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 24,
        "lineBreaks": 0,
        "line": 1,
        "col": 25
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 25,
        "lineBreaks": 0,
        "line": 1,
        "col": 26
      },
      {
        "type": "spellName",
        "value": "fly",
        "text": "fly",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 29,
        "lineBreaks": 0,
        "line": 1,
        "col": 30
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [noflyable, nomounted] Acherus Deathcharger;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Acherus Deathcharger",
        "text": "Acherus Deathcharger",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 48,
        "lineBreaks": 0,
        "line": 1,
        "col": 49
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [noflyable, nomounted] Black War Tiger;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Black War Tiger",
        "text": "Black War Tiger",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [noflyable, nomounted] Frostwolf Howler;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Frostwolf Howler",
        "text": "Frostwolf Howler",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 44,
        "lineBreaks": 0,
        "line": 1,
        "col": 45
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [noflyable, nomounted] Swift Burgundy Wolf",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Swift Burgundy Wolf",
        "text": "Swift Burgundy Wolf",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [noflyable, nomounted] Swift Moonsaber;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Swift Moonsaber",
        "text": "Swift Moonsaber",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 43,
        "lineBreaks": 0,
        "line": 1,
        "col": 44
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [noflyable, nomounted] Swift White Steed;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "Swift White Steed",
        "text": "Swift White Steed",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 45,
        "lineBreaks": 0,
        "line": 1,
        "col": 46
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [noflyable, nomounted] run;",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "noflyable",
        "text": "noflyable",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "comma",
        "value": ",",
        "text": ",",
        "offset": 15,
        "lineBreaks": 0,
        "line": 1,
        "col": 16
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 16,
        "lineBreaks": 0,
        "line": 1,
        "col": 17
      },
      {
        "type": "spellName",
        "value": "nomounted",
        "text": "nomounted",
        "offset": 17,
        "lineBreaks": 0,
        "line": 1,
        "col": 18
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 26,
        "lineBreaks": 0,
        "line": 1,
        "col": 27
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 27,
        "lineBreaks": 0,
        "line": 1,
        "col": 28
      },
      {
        "type": "spellName",
        "value": "run",
        "text": "run",
        "offset": 28,
        "lineBreaks": 0,
        "line": 1,
        "col": 29
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 31,
        "lineBreaks": 0,
        "line": 1,
        "col": 32
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [nomod] Fel Healthstone",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "nomod",
        "text": "nomod",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "Fel Healthstone",
        "text": "Fel Healthstone",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [nopet]Summon Water Elemental; Freeze",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "nopet",
        "text": "nopet",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      },
      {
        "type": "spellName",
        "value": "Summon Water Elemental",
        "text": "Summon Water Elemental",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "semicolon",
        "value": ";",
        "text": ";",
        "offset": 34,
        "lineBreaks": 0,
        "line": 1,
        "col": 35
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 35,
        "lineBreaks": 0,
        "line": 1,
        "col": 36
      },
      {
        "type": "spellName",
        "value": "Freeze",
        "text": "Freeze",
        "offset": 36,
        "lineBreaks": 0,
        "line": 1,
        "col": 37
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [target=player] 13",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "number",
        "value": "13",
        "text": "13",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/use [target=player] 14",
    "results": [
      {
        "type": "command",
        "value": "/use",
        "text": "/use",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "bracketSquareOpen",
        "value": "[",
        "text": "[",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "target",
        "text": "target",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      },
      {
        "type": "equal",
        "value": "=",
        "text": "=",
        "offset": 12,
        "lineBreaks": 0,
        "line": 1,
        "col": 13
      },
      {
        "type": "spellName",
        "value": "player",
        "text": "player",
        "offset": 13,
        "lineBreaks": 0,
        "line": 1,
        "col": 14
      },
      {
        "type": "bracketSquareClose",
        "value": "]",
        "text": "]",
        "offset": 19,
        "lineBreaks": 0,
        "line": 1,
        "col": 20
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 20,
        "lineBreaks": 0,
        "line": 1,
        "col": 21
      },
      {
        "type": "number",
        "value": "14",
        "text": "14",
        "offset": 21,
        "lineBreaks": 0,
        "line": 1,
        "col": 22
      }
    ]
  },
  {
    "parsed": true,
    "line": "/w Dronin Argent Defender CD",
    "results": [
      {
        "type": "command",
        "value": "/w",
        "text": "/w",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 2,
        "lineBreaks": 0,
        "line": 1,
        "col": 3
      },
      {
        "type": "spellName",
        "value": "Dronin Argent Defender CD",
        "text": "Dronin Argent Defender CD",
        "offset": 3,
        "lineBreaks": 0,
        "line": 1,
        "col": 4
      }
    ]
  },
  {
    "parsed": true,
    "line": "/who 10-79 warsong arathi eye strand",
    "results": [
      {
        "type": "command",
        "value": "/who",
        "text": "/who",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "numberRange",
        "value": "10-79",
        "text": "10-79",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "warsong arathi eye strand",
        "text": "warsong arathi eye strand",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      }
    ]
  },
  {
    "parsed": true,
    "line": "/who 70-79 arathi warsong strand eye",
    "results": [
      {
        "type": "command",
        "value": "/who",
        "text": "/who",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "numberRange",
        "value": "70-79",
        "text": "70-79",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 10,
        "lineBreaks": 0,
        "line": 1,
        "col": 11
      },
      {
        "type": "spellName",
        "value": "arathi warsong strand eye",
        "text": "arathi warsong strand eye",
        "offset": 11,
        "lineBreaks": 0,
        "line": 1,
        "col": 12
      }
    ]
  },
  {
    "parsed": true,
    "line": "/who 80 alterac conquest",
    "results": [
      {
        "type": "command",
        "value": "/who",
        "text": "/who",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "number",
        "value": "80",
        "text": "80",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 7,
        "lineBreaks": 0,
        "line": 1,
        "col": 8
      },
      {
        "type": "spellName",
        "value": "alterac conquest",
        "text": "alterac conquest",
        "offset": 8,
        "lineBreaks": 0,
        "line": 1,
        "col": 9
      }
    ]
  },
  {
    "parsed": true,
    "line": "/who arena ruins",
    "results": [
      {
        "type": "command",
        "value": "/who",
        "text": "/who",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "arena ruins",
        "text": "arena ruins",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/who g-pwn",
    "results": [
      {
        "type": "command",
        "value": "/who",
        "text": "/who",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 4,
        "lineBreaks": 0,
        "line": 1,
        "col": 5
      },
      {
        "type": "spellName",
        "value": "g-pwn",
        "text": "g-pwn",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      }
    ]
  },
  {
    "parsed": true,
    "line": "/yell INCINARATE FLESH NA MNIE",
    "results": [
      {
        "type": "command",
        "value": "/yell",
        "text": "/yell",
        "offset": 0,
        "lineBreaks": 0,
        "line": 1,
        "col": 1
      },
      {
        "type": "space",
        "value": " ",
        "text": " ",
        "offset": 5,
        "lineBreaks": 0,
        "line": 1,
        "col": 6
      },
      {
        "type": "spellName",
        "value": "INCINARATE FLESH NA MNIE",
        "text": "INCINARATE FLESH NA MNIE",
        "offset": 6,
        "lineBreaks": 0,
        "line": 1,
        "col": 7
      }
    ]
  },
  {
    "parsed": false,
    "line": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r\"",
    "results": []
  }
]