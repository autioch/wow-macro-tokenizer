[
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "15",
            "text": "15",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 15",
        "ambiguous": false
      }
    ],
    "occurences": 36,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "0000000000000082",
      "130",
      "88"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "Back",
      "Gcloak"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "6",
            "text": "6",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 6",
        "ambiguous": false
      }
    ],
    "occurences": 36,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "000000000000001F",
      "31"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "Belt",
      "Gbelt"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 8",
        "ambiguous": false
      }
    ],
    "occurences": 37,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "000000000000001E",
      "30",
      "41"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "Feet",
      "GFeet",
      "Gfeet"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 1",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt"
    ],
    "id": [
      "0000000000000022"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "Head"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "13",
            "text": "13",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 13",
        "ambiguous": false
      }
    ],
    "occurences": 25,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "0000000000000020",
      "16777221",
      "18",
      "32"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "T1",
      "gT1",
      "trink1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      }
    ],
    "occurences": 25,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "0000000000000021",
      "16777240",
      "19",
      "33"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "T2",
      "gT2",
      "trink2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",5);",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt"
    ],
    "id": [
      "000000000000006A"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "PvP"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Stelleris Libertine",
            "text": "Stelleris Libertine",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Stelleris Libertine",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt"
    ],
    "id": [
      "0000000000000062"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Mindblowing",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt"
    ],
    "id": [
      "0000000000000072"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "for i",
            "text": "for i",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "GetMerchantNumItems",
            "text": "GetMerchantNumItems",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "do local l",
            "text": "do local l",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "spellName",
            "value": "GetMerchantItemLink",
            "text": "GetMerchantItemLink",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "spellName",
            "value": "if l then if l",
            "text": "if l then if l",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "spellName",
            "value": "find",
            "text": "find",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "Formula: Enchant Chest",
            "text": "Formula: Enchant Chest",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "spellName",
            "value": "Major Health",
            "text": "Major Health",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "spellName",
            "value": "then BuyMerchantItem",
            "text": "then BuyMerchantItem",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "spellName",
            "value": "end end end",
            "text": "end end end",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run for i=1,GetMerchantNumItems() do local l=GetMerchantItemLink(i) if l then if l:find(\"Formula: Enchant Chest - Major Health\") then BuyMerchantItem(i,1)end end end",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt"
    ],
    "id": [
      "0000000000000091"
    ],
    "prefix": [],
    "label": [
      "BUY"
    ],
    "icon": [
      "Spell_DeathKnight_Strangulate"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "CombatLogClearEntries",
            "text": "CombatLogClearEntries",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script CombatLogClearEntries();",
        "ambiguous": false
      }
    ],
    "occurences": 42,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "000000000000003C",
      "22",
      "60"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "CCL",
      "aClear"
    ],
    "icon": [
      "Ability_Druid_Flourish",
      "Spell_Nature_ProtectionformNature"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Warts-B-Gone Lip Balm",
            "text": "Warts-B-Gone Lip Balm",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Warts-B-Gone Lip Balm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "emote",
            "value": "/kiss",
            "text": "/kiss",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/kiss",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "0000000000000092",
      "138"
    ],
    "prefix": [],
    "label": [
      "Kiss",
      "frog"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK",
      "Spell_Shaman_Hex"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/macro",
            "text": "/macro",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/macro",
        "ambiguous": false
      }
    ],
    "occurences": 43,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1615291#1/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "0000000000000003",
      "0000000000000054",
      "43",
      "84"
    ],
    "prefix": [],
    "label": [
      "Macro",
      "aMacro",
      "macro"
    ],
    "icon": [
      "132319",
      "Spell_unused2"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cooking Fire",
            "text": "Cooking Fire",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Cooking Fire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Cooking",
            "text": "Cooking",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Cooking",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "First Aid",
            "text": "First Aid",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] First Aid",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Archaeology",
            "text": "Archaeology",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Archaeology",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt"
    ],
    "id": [
      "000000000000004C"
    ],
    "prefix": [],
    "label": [
      "Profs"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /recount\n  ^\nUnexpected command token: \"/recount\"\n",
        "line": "/recount toggle",
        "ambiguous": false
      }
    ],
    "occurences": 39,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1615291#1/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1615291#1/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "0000000000000002",
      "0000000000000065",
      "101"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Rec",
      "recount"
    ],
    "icon": [
      "132093",
      "Ability_Creature_Cursed_01"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Cleanse Toxins",
            "text": "Cleanse Toxins",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Cleanse Toxins",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000014"
    ],
    "prefix": [
      "*"
    ],
    "label": [
      "CT"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Flash of Light",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000016"
    ],
    "prefix": [
      "*"
    ],
    "label": [
      "FoL"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Blessing of Freedom",
            "text": "Blessing of Freedom",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Blessing of Freedom",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000013"
    ],
    "prefix": [
      "*"
    ],
    "label": [
      "HoF"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Blessing of Protection",
            "text": "Blessing of Protection",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Blessing of Protection",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000012"
    ],
    "prefix": [
      "*"
    ],
    "label": [
      "HoP"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Avenging Wrath",
            "text": "Avenging Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Avenging Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "13",
            "text": "13",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 13",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      }
    ],
    "occurences": 13,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000015",
      "16777262"
    ],
    "prefix": [
      "^"
    ],
    "label": [
      "AW",
      "Nuke"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK",
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castsequence",
            "text": "/castsequence",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "reset",
            "text": "reset",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "20",
            "text": "20",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Divine Shield",
            "text": "Divine Shield",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castsequence reset=20 Divine Shield, Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "010000000000000D"
    ],
    "prefix": [
      "^"
    ],
    "label": [
      "DS",
      "bubel"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Redemption",
            "text": "Redemption",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Redemption",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Ultimate Gnomish Army Knife",
            "text": "Ultimate Gnomish Army Knife",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Ultimate Gnomish Army Knife",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Ultimate Gnomish Army Knife",
            "text": "Ultimate Gnomish Army Knife",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Ultimate Gnomish Army Knife",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Ultimate Gnomish Army Knife",
            "text": "Ultimate Gnomish Army Knife",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Ultimate Gnomish Army Knife",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000018"
    ],
    "prefix": [
      "^"
    ],
    "label": [
      "Ress"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Engineering",
            "text": "Engineering",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Engineering",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Reaves Battery",
            "text": "Reaves Battery",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Reaves Battery",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Jeeves",
            "text": "Jeeves",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Jeeves",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "MOLL-E",
            "text": "MOLL-E",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] MOLL-E",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "010000000000000F"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Engi"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mining Skills",
            "text": "Mining Skills",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Mining Skills",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Thermal Anvil",
            "text": "Thermal Anvil",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Thermal Anvil",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Thermal Anvil",
            "text": "Thermal Anvil",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Thermal Anvil",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Thermal Anvil",
            "text": "Thermal Anvil",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Thermal Anvil",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000010"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Mine"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Dalaran Hearthstone",
            "text": "Dalaran Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Dalaran Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Garrison Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Wormhole Generator: Northrend",
            "text": "Wormhole Generator: Northrend",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Wormhole Generator: Northrend",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "010000000000000E"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Red Flying Cloud",
            "text": "Red Flying Cloud",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Red Flying Cloud",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Red Flying Cloud",
            "text": "Red Flying Cloud",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Red Flying Cloud",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Red Flying Cloud",
            "text": "Red Flying Cloud",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Red Flying Cloud",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000004"
    ],
    "prefix": [],
    "label": [
      "Ride"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mobile Banking",
            "text": "Mobile Banking",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Mobile Banking",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Pack Hobgoblin",
            "text": "Pack Hobgoblin",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Pack Hobgoblin",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Pack Hobgoblin",
            "text": "Pack Hobgoblin",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Pack Hobgoblin",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Pack Hobgoblin",
            "text": "Pack Hobgoblin",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Pack Hobgoblin",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "010000000000000E"
    ],
    "prefix": [],
    "label": [
      "Bank"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Counterspell",
            "text": "Counterspell",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Counterspell",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "0100000000000008"
    ],
    "prefix": [],
    "label": [
      "CSF"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Counterspell",
            "text": "Counterspell",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Counterspell",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "0100000000000007"
    ],
    "prefix": [],
    "label": [
      "CST"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Enchanting",
            "text": "Enchanting",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Enchanting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Disenchant",
            "text": "Disenchant",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Disenchant",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "010000000000000B"
    ],
    "prefix": [],
    "label": [
      "Ench"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Conjured Mana Pudding",
            "text": "Conjured Mana Pudding",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Conjured Mana Pudding",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Conjure Refreshment",
            "text": "Conjure Refreshment",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Conjure Refreshment",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Conjure Refreshment Table",
            "text": "Conjure Refreshment Table",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Conjure Refreshment Table",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Conjure Refreshment Table",
            "text": "Conjure Refreshment Table",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Conjure Refreshment Table",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "010000000000000D"
    ],
    "prefix": [],
    "label": [
      "Food"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "mod: shift",
            "text": "mod: shift",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod: shift] Garrison Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Garrison Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Garrison Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "010000000000000C"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Jewelcrafting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Prospecting",
            "text": "Prospecting",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Prospecting",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "010000000000000A"
    ],
    "prefix": [],
    "label": [
      "JC"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Freeze",
            "text": "Freeze",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast !Freeze",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "0100000000000004"
    ],
    "prefix": [],
    "label": [
      "P_Freeze"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Water Jet",
            "text": "Water Jet",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Water Jet",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "0100000000000006"
    ],
    "prefix": [],
    "label": [
      "P_WaterJet"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Polymorph",
            "text": "Polymorph",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Polymorph",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "0100000000000009"
    ],
    "prefix": [],
    "label": [
      "PolyT"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cooking Fire",
            "text": "Cooking Fire",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Cooking Fire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Cooking",
            "text": "Cooking",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Cooking",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "First Aid",
            "text": "First Aid",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] First Aid",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Archaeology",
            "text": "Archaeology",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Archaeology",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.01.21/Account/1615291#1/macros-cache.txt",
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1615291#1/macros-cache.txt"
    ],
    "id": [
      "0000000000000001"
    ],
    "prefix": [],
    "label": [
      "Profs"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      }
    ],
    "occurences": 40,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "0000000000000022",
      "34",
      "42"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "GHands",
      "Ghand",
      "Hand"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Shadowy Mercenary",
            "text": "Shadowy Mercenary",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Shadowy Mercenary",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "000000000000006A",
      "106"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "Hor",
      "Tar"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",5);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Graverawler",
            "text": "Graverawler",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "number",
            "value": "7",
            "text": "7",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Graverawler\",7);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Stonerumbler",
            "text": "Stonerumbler",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "number",
            "value": "7",
            "text": "7",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Stonerumbler\",7)",
        "ambiguous": false
      }
    ],
    "occurences": 15,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "0000000000000062",
      "98"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "Icon"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Lorekeeper",
            "text": "Lorekeeper",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Lorekeeper",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/macros-cache.txt"
    ],
    "id": [
      "0000000000000072"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Bulwark of the Fallen General",
            "text": "Bulwark of the Fallen General",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Bulwark of the Fallen General",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Encapsulated Essence of Immerseus",
            "text": "Encapsulated Essence of Immerseus",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Encapsulated Essence of Immerseus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Bulwark of the Fallen General",
            "text": "Bulwark of the Fallen General",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Bulwark of the Fallen General",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000009"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "1hs"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Prideful Gladiator's Greatsword",
            "text": "Prideful Gladiator's Greatsword",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Prideful Gladiator's Greatsword",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Prideful Gladiator's Greatsword",
            "text": "Prideful Gladiator's Greatsword",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Prideful Gladiator's Greatsword",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "010000000000000A"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "2h"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Cleanse",
            "text": "Cleanse",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Cleanse",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "0100000000000014",
      "16777266"
    ],
    "prefix": [],
    "label": [
      "C",
      "Cleanse"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK",
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Engineering",
            "text": "Engineering",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Engineering",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "MOLL-E",
            "text": "MOLL-E",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] MOLL-E",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Jeeves",
            "text": "Jeeves",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Jeeves",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 28:\n\n  /cast [mod:ctrl] Blingtron 4000\n                             ^\nUnexpected number token: \"4000\"\n",
        "line": "/cast [mod:ctrl] Blingtron 4000",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "010000000000000F"
    ],
    "prefix": [],
    "label": [
      "Engi"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Hand of Freedom",
            "text": "Hand of Freedom",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Hand of Freedom",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000013"
    ],
    "prefix": [],
    "label": [
      "HoF"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Hand of Protection",
            "text": "Hand of Protection",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Hand of Protection",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000012"
    ],
    "prefix": [],
    "label": [
      "HoP"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Hand of Sacrifice",
            "text": "Hand of Sacrifice",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Hand of Sacrifice",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000003"
    ],
    "prefix": [],
    "label": [
      "HoS"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Wormhole Generator: Northrend",
            "text": "Wormhole Generator: Northrend",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Wormhole Generator: Northrend",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Wormhole Generator: Pandaria",
            "text": "Wormhole Generator: Pandaria",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Wormhole Generator: Pandaria",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Garrison Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "010000000000000E"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Frostwolf Howler",
            "text": "Frostwolf Howler",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Frostwolf Howler",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Frostwolf Howler",
            "text": "Frostwolf Howler",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Frostwolf Howler",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000004"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Avenging Wrath",
            "text": "Avenging Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Avenging Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000015"
    ],
    "prefix": [],
    "label": [
      "Nuke"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Redemption",
            "text": "Redemption",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Redemption",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Mass Resurrection",
            "text": "Mass Resurrection",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Mass Resurrection",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Mass Resurrection",
            "text": "Mass Resurrection",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Mass Resurrection",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Mass Resurrection",
            "text": "Mass Resurrection",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Mass Resurrection",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000011"
    ],
    "prefix": [],
    "label": [
      "ress"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Smelting",
            "text": "Smelting",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Smelting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Thermal Anvil",
            "text": "Thermal Anvil",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Thermal Anvil",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Thermal Anvil",
            "text": "Thermal Anvil",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Thermal Anvil",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Thermal Anvil",
            "text": "Thermal Anvil",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Thermal Anvil",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "0100000000000010"
    ],
    "prefix": [],
    "label": [
      "Smelting"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/y",
            "text": "/y",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Move on apes",
            "text": "Move on apes",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "You wanna live forever",
            "text": "You wanna live forever",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "unknown",
            "value": "?",
            "text": "?",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/y Move on apes! You wanna live forever?!",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "010000000000000B"
    ],
    "prefix": [],
    "label": [
      "StarshipTroopers"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/tar",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2016.03.28/1606220#0/Tarren Mill/Amancik/macros-cache.txt"
    ],
    "id": [
      "010000000000000C"
    ],
    "prefix": [],
    "label": [
      "t"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Avenging Wrath",
            "text": "Avenging Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Avenging Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 1",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "13",
            "text": "13",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 13",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000015"
    ],
    "prefix": [
      "^"
    ],
    "label": [
      "AW"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Engineering",
            "text": "Engineering",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Engineering",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Rechargeable Reaves Battery",
            "text": "Rechargeable Reaves Battery",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Rechargeable Reaves Battery",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Jeeves",
            "text": "Jeeves",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Jeeves",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "MOLL-E",
            "text": "MOLL-E",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] MOLL-E",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "010000000000000F"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Engi"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgment",
            "text": "Judgment",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgment",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Amantka/macros-cache.txt"
    ],
    "id": [
      "0100000000000019"
    ],
    "prefix": [],
    "label": [
      "J"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Dalaran Hearthstone",
            "text": "Dalaran Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Dalaran Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Garrison Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Dreamwalk",
            "text": "Dreamwalk",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Dreamwalk",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Brokenclaw/macros-cache.txt"
    ],
    "id": [
      "0100000000000001"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Dalaran Hearthstone",
            "text": "Dalaran Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Dalaran Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Garrison Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Teleport: Hall of the Guardian",
            "text": "Teleport: Hall of the Guardian",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Teleport: Hall of the Guardian",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1606220#4/Tarren Mill/Heflena/macros-cache.txt"
    ],
    "id": [
      "010000000000000C"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Dalaran Hearthstone",
            "text": "Dalaran Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Dalaran Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Garrison Hearthstone",
            "text": "Garrison Hearthstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Garrison Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Admiral's Compass",
            "text": "Admiral's Compass",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Admiral's Compass",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow legion/2017.08.08/Account/1615291#1/macros-cache.txt"
    ],
    "id": [
      "0000000000000004"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_MISC_QUESTIONMARK"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castsequence",
            "text": "/castsequence",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "reset",
            "text": "reset",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Divine Shield",
            "text": "Divine Shield",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castsequence reset=50 Divine Shield, Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 30,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "122",
      "16777217"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "DS",
      "bubel"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Crusader Strike",
            "text": "Crusader Strike",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Crusader Strike",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777249"
    ],
    "prefix": [],
    "label": [
      "CS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Divine Storm",
            "text": "Divine Storm",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Divine Storm",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777248"
    ],
    "prefix": [],
    "label": [
      "DS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Engineering",
            "text": "Engineering",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Engineering",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "MOLL-E",
            "text": "MOLL-E",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] MOLL-E",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Jeeves",
            "text": "Jeeves",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Jeeves",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Engineering",
            "text": "Engineering",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Engineering",
        "ambiguous": false
      }
    ],
    "occurences": 26,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "123",
      "16777239"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Engi"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Hammer of Justice",
            "text": "Hammer of Justice",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Hammer of Justice",
        "ambiguous": false
      }
    ],
    "occurences": 20,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "124",
      "16777250",
      "16777340"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "FHammer",
      "HoJF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  #\n  ^\nUnexpected unknown token: \"#\"\n",
        "line": "#showtoolip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Repentance",
            "text": "Repentance",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Repentance",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777252"
    ],
    "prefix": [],
    "label": [
      "FRepa"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Turn Evil",
            "text": "Turn Evil",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Turn Evil",
        "ambiguous": false
      }
    ],
    "occurences": 20,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "126",
      "16777251",
      "16777342"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "FTurnEvil",
      "TEF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hammer of Wrath",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777247"
    ],
    "prefix": [],
    "label": [
      "HoW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Argent Crusader's Tabard",
            "text": "Argent Crusader's Tabard",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Argent Crusader's Tabard",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Wormhole Generator: Northrend",
            "text": "Wormhole Generator: Northrend",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Wormhole Generator: Northrend",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 28,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Arald",
            "text": "Arald",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Arald\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Cleavage",
            "text": "Cleavage",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Cleavage\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Asheel",
            "text": "Asheel",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Asheel\",8);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Graverawler",
            "text": "Graverawler",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Graverawler\",5);",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777246"
    ],
    "prefix": [],
    "label": [
      "ICON"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Justice",
            "text": "Judgement of Justice",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Justice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Justice",
            "text": "Judgement of Justice",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Justice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "13",
            "text": "13",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 13",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "JoJ"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Light",
            "text": "Judgement of Light",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Light",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Light",
            "text": "Judgement of Light",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Light",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "13",
            "text": "13",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 13",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "JoL"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Wisdom",
            "text": "Judgement of Wisdom",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Wisdom",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Wisdom",
            "text": "Judgement of Wisdom",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Wisdom",
        "ambiguous": false
      }
    ],
    "occurences": 18,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "143",
      "16777227"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "JoW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Charger",
            "text": "Charger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Time-Lost Proto-Drake",
            "text": "Time-Lost Proto-Drake",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Time-Lost Proto-Drake",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Charger",
            "text": "Charger",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted]  Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Crusader Aura",
            "text": "Crusader Aura",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mounted] Crusader Aura",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/promote",
            "text": "/promote",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "Alard",
            "text": "Alard",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/promote Alard",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777245"
    ],
    "prefix": [],
    "label": [
      "promote"
    ],
    "icon": [
      "Ability_Druid_Bash"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Hammer of Justice",
            "text": "Hammer of Justice",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Hammer of Justice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hammer of Justice",
            "text": "Hammer of Justice",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hammer of Justice",
        "ambiguous": false
      }
    ],
    "occurences": 20,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "127",
      "16777244",
      "16777343"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "HoJT",
      "THammer"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Repentance",
            "text": "Repentance",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Repentance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Repentance",
            "text": "Repentance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Repentance",
        "ambiguous": false
      }
    ],
    "occurences": 17,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt"
    ],
    "id": [
      "128",
      "16777253",
      "16777344"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "RepT",
      "TRepa"
    ],
    "icon": [
      "INV_Misc_QuestionMark",
      "Spell_Holy_PrayerOfHealing"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Turn Evil",
            "text": "Turn Evil",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Turn Evil",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Ebon Gargoyle",
            "text": "Ebon Gargoyle",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Ebon Gargoyle",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Turn Evil",
            "text": "Turn Evil",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Turn Evil",
        "ambiguous": false
      }
    ],
    "occurences": 24,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "129",
      "16777240",
      "16777345"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "TET",
      "TTurnEvil"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "a",
            "text": "a",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "b",
            "text": "b",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "spellName",
            "value": "test",
            "text": "test",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "WG",
            "text": "WG",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "spellName",
            "value": "e",
            "text": "e",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "spellName",
            "value": "if d",
            "text": "if d",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "spellName",
            "value": "nil then f",
            "text": "nil then f",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "spellName",
            "value": "e",
            "text": "e",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 106,
            "lineBreaks": 0,
            "line": 1,
            "col": 107
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 107,
            "lineBreaks": 0,
            "line": 1,
            "col": 108
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 108,
            "lineBreaks": 0,
            "line": 1,
            "col": 109
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 109,
            "lineBreaks": 0,
            "line": 1,
            "col": 110
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 110,
            "lineBreaks": 0,
            "line": 1,
            "col": 111
          },
          {
            "type": "spellName",
            "value": "e",
            "text": "e",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 124,
            "lineBreaks": 0,
            "line": 1,
            "col": 125
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 125,
            "lineBreaks": 0,
            "line": 1,
            "col": 126
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "a",
            "text": "a",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 165,
            "lineBreaks": 0,
            "line": 1,
            "col": 166
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 185,
            "lineBreaks": 0,
            "line": 1,
            "col": 186
          },
          {
            "type": "spellName",
            "value": "b",
            "text": "b",
            "offset": 186,
            "lineBreaks": 0,
            "line": 1,
            "col": 187
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 187,
            "lineBreaks": 0,
            "line": 1,
            "col": 188
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 188,
            "lineBreaks": 0,
            "line": 1,
            "col": 189
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 190,
            "lineBreaks": 0,
            "line": 1,
            "col": 191
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run a=SendChatMessage;b=\"test\";c=\"WG \";d=GetWintergraspWaitTime();e=floor;if d~=nil then f=e(d/3600)..\"h \";g=(e(d/60)%60)..\"m \";h=(d%60)..\"s \";a(c..f..g..h,\"CHANNEL\",nil,GetChannelName(b)) end",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777256"
    ],
    "prefix": [],
    "label": [
      "bak"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Goldmoon",
            "text": "Goldmoon",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "Hand of protection",
            "text": "Hand of protection",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Goldmoon] Hand of protection",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777257"
    ],
    "prefix": [],
    "label": [
      "HopH"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 14,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777247"
    ],
    "prefix": [],
    "label": [
      "HoW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Justice",
            "text": "Judgement of Justice",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Justice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Justice",
            "text": "Judgement of Justice",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Justice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 24,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777219",
      "16777360"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "JoJ"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Light",
            "text": "Judgement of Light",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Light",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Light",
            "text": "Judgement of Light",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Light",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 24,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777218",
      "16777358"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "JoL"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Charger",
            "text": "Charger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Green Proto-Drake",
            "text": "Green Proto-Drake",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Green Proto-Drake",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castrandom",
            "text": "/castrandom",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Black War Bear",
            "text": "Black War Bear",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "Swift Moonsaber",
            "text": "Swift Moonsaber",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "Swift Brewfest Ram",
            "text": "Swift Brewfest Ram",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "spellName",
            "value": "Black War Steed",
            "text": "Black War Steed",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 109,
            "lineBreaks": 0,
            "line": 1,
            "col": 110
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 110,
            "lineBreaks": 0,
            "line": 1,
            "col": 111
          },
          {
            "type": "spellName",
            "value": "Stormpike Battle Charger",
            "text": "Stormpike Battle Charger",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 135,
            "lineBreaks": 0,
            "line": 1,
            "col": 136
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "spellName",
            "value": "Turbostrider",
            "text": "Turbostrider",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castrandom [nomod,noflyable,nomounted]  Black War Bear, Swift Moonsaber, Swift Brewfest Ram, Black War Steed, Stormpike Battle Charger, Turbostrider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Crusader Aura",
            "text": "Crusader Aura",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mounted] Crusader Aura",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Darnassus Tab\n  ^\nUnexpected spellName token: \"Darnassus Tab\"\n",
        "line": "Darnassus Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Exodar Tab\n  ^\nUnexpected spellName token: \"Exodar Tab\"\n",
        "line": "Exodar Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Gnomeregan Tab\n  ^\nUnexpected spellName token: \"Gnomeregan Tab\"\n",
        "line": "Gnomeregan Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Ironforge Tab\n  ^\nUnexpected spellName token: \"Ironforge Tab\"\n",
        "line": "Ironforge Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Silver Covenant Tab\n  ^\nUnexpected spellName token: \"Silver Covenant Tab\"\n",
        "line": "Silver Covenant Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Silverwing Battle Tab\n  ^\nUnexpected spellName token: \"Silverwing Battle Tab\"\n",
        "line": "Silverwing Battle Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Stormpike Battle Tab\n  ^\nUnexpected spellName token: \"Stormpike Battle Tab\"\n",
        "line": "Stormpike Battle Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Stormwind Tab\n  ^\nUnexpected spellName token: \"Stormwind Tab\"\n",
        "line": "Stormwind Tab",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Brute Force\n  ^\nUnexpected spellName token: \"Brute Force\"\n",
        "line": "Brute Force",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Conquest\n  ^\nUnexpected spellName token: \"Conquest\"\n",
        "line": "Conquest (Alliance)",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Summer Flames\n  ^\nUnexpected spellName token: \"Summer Flames\"\n",
        "line": "Summer Flames",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  the Illidari\n  ^\nUnexpected spellName token: \"the Illidari\"\n",
        "line": "the Illidari",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  the Scarlet Crusade\n  ^\nUnexpected spellName token: \"the Scarlet Crusade\"\n",
        "line": "the Scarlet Crusade",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777253"
    ],
    "prefix": [],
    "label": [
      "tabs"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "WG",
            "text": "WG",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "nil then h",
            "text": "nil then h",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 85,
            "lineBreaks": 0,
            "line": 1,
            "col": 86
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "spellName",
            "value": "if h",
            "text": "if h",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 99,
            "lineBreaks": 0,
            "line": 1,
            "col": 100
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 108,
            "lineBreaks": 0,
            "line": 1,
            "col": 109
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 109,
            "lineBreaks": 0,
            "line": 1,
            "col": 110
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 110,
            "lineBreaks": 0,
            "line": 1,
            "col": 111
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 124,
            "lineBreaks": 0,
            "line": 1,
            "col": 125
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "spellName",
            "value": "if s",
            "text": "if s",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 181,
            "lineBreaks": 0,
            "line": 1,
            "col": 182
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 196,
            "lineBreaks": 0,
            "line": 1,
            "col": 197
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 197,
            "lineBreaks": 0,
            "line": 1,
            "col": 198
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 198,
            "lineBreaks": 0,
            "line": 1,
            "col": 199
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "spellName",
            "value": "GUILD",
            "text": "GUILD",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 205,
            "lineBreaks": 0,
            "line": 1,
            "col": 206
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 206,
            "lineBreaks": 0,
            "line": 1,
            "col": 207
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 207,
            "lineBreaks": 0,
            "line": 1,
            "col": 208
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 208,
            "lineBreaks": 0,
            "line": 1,
            "col": 209
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run x=\"WG \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"GUILD\");end",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777254"
    ],
    "prefix": [],
    "label": [
      "test"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "server info",
            "text": "server info",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g .server info",
        "ambiguous": false
      }
    ],
    "occurences": 27,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "61"
    ],
    "prefix": [
      "@"
    ],
    "label": [
      "Info",
      "aInfo"
    ],
    "icon": [
      "Ability_Druid_Dash",
      "Spell_Frost_ChillingArmor"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Basic Campfire",
            "text": "Basic Campfire",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Basic Campfire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Cooking",
            "text": "Cooking",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Cooking",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "First Aid",
            "text": "First Aid",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] First Aid",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Basic Campfire",
            "text": "Basic Campfire",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Basic Campfire",
        "ambiguous": false
      }
    ],
    "occurences": 38,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "76"
    ],
    "prefix": [],
    "label": [
      "Off",
      "Profs",
      "aProfs"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castsequence",
            "text": "/castsequence",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "reset",
            "text": "reset",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Star's Sorrow",
            "text": "Star's Sorrow",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "spellName",
            "value": "Poached Emperor Salmon",
            "text": "Poached Emperor Salmon",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castsequence reset=3 Star's Sorrow, Poached Emperor Salmon",
        "ambiguous": false
      }
    ],
    "occurences": 27,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "145",
      "97"
    ],
    "prefix": [],
    "label": [
      "Food",
      "gFood"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 9:\n\n  /target player\n          ^\nUnexpected modifier token: \"player\"\n",
        "line": "/target player",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "number",
            "value": "13",
            "text": "13",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [target=player] 13",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /targetlasttarget\n  ^\nUnexpected command token: \"/targetlasttarget\"\n",
        "line": "/targetlasttarget",
        "ambiguous": false
      }
    ],
    "occurences": 19,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "32"
    ],
    "prefix": [],
    "label": [
      "gT1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 9:\n\n  /target player\n          ^\nUnexpected modifier token: \"player\"\n",
        "line": "/target player",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [target=player] 14",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /targetlasttarget\n  ^\nUnexpected command token: \"/targetlasttarget\"\n",
        "line": "/targetlasttarget",
        "ambiguous": false
      }
    ],
    "occurences": 19,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "33"
    ],
    "prefix": [],
    "label": [
      "gT2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",5);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "asdfasd",
            "text": "asdfasd",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"asdfasd\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [],
    "label": [
      "IconP"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "y",
            "text": "y",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "GetAchievementCriteriaInfo for z",
            "text": "GetAchievementCriteriaInfo for z",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "number",
            "value": "85",
            "text": "85",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "do a",
            "text": "do a",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 49,
            "lineBreaks": 0,
            "line": 1,
            "col": 50
          },
          {
            "type": "spellName",
            "value": "b",
            "text": "b",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "spellName",
            "value": "e",
            "text": "e",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 62,
            "lineBreaks": 0,
            "line": 1,
            "col": 63
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 63,
            "lineBreaks": 0,
            "line": 1,
            "col": 64
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "j",
            "text": "j",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "spellName",
            "value": "y",
            "text": "y",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "number",
            "value": "1021",
            "text": "1021",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "spellName",
            "value": "k",
            "text": "k",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "spellName",
            "value": "l",
            "text": "l",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 85,
            "lineBreaks": 0,
            "line": 1,
            "col": 86
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "spellName",
            "value": "n",
            "text": "n",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "spellName",
            "value": "o",
            "text": "o",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "spellName",
            "value": "p",
            "text": "p",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "spellName",
            "value": "q",
            "text": "q",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 98,
            "lineBreaks": 0,
            "line": 1,
            "col": 99
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 99,
            "lineBreaks": 0,
            "line": 1,
            "col": 100
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "spellName",
            "value": "y",
            "text": "y",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "spellName",
            "value": "j",
            "text": "j",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 106,
            "lineBreaks": 0,
            "line": 1,
            "col": 107
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 107,
            "lineBreaks": 0,
            "line": 1,
            "col": 108
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 108,
            "lineBreaks": 0,
            "line": 1,
            "col": 109
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "spellName",
            "value": "false then print",
            "text": "false then print",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "spellName",
            "value": "cffff",
            "text": "cffff",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "number",
            "value": "0000",
            "text": "0000",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "spellName",
            "value": "Failed",
            "text": "Failed",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "spellName",
            "value": "k",
            "text": "k",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "else print",
            "text": "else print",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "cff",
            "text": "cff",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "number",
            "value": "00",
            "text": "00",
            "offset": 182,
            "lineBreaks": 0,
            "line": 1,
            "col": 183
          },
          {
            "type": "spellName",
            "value": "ff",
            "text": "ff",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "number",
            "value": "00",
            "text": "00",
            "offset": 186,
            "lineBreaks": 0,
            "line": 1,
            "col": 187
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 188,
            "lineBreaks": 0,
            "line": 1,
            "col": 189
          },
          {
            "type": "spellName",
            "value": "OK",
            "text": "OK",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 191,
            "lineBreaks": 0,
            "line": 1,
            "col": 192
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 192,
            "lineBreaks": 0,
            "line": 1,
            "col": 193
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 193,
            "lineBreaks": 0,
            "line": 1,
            "col": 194
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 196,
            "lineBreaks": 0,
            "line": 1,
            "col": 197
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 197,
            "lineBreaks": 0,
            "line": 1,
            "col": 198
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 198,
            "lineBreaks": 0,
            "line": 1,
            "col": 199
          },
          {
            "type": "spellName",
            "value": "k",
            "text": "k",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 201,
            "lineBreaks": 0,
            "line": 1,
            "col": 202
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 202,
            "lineBreaks": 0,
            "line": 1,
            "col": 203
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 205,
            "lineBreaks": 0,
            "line": 1,
            "col": 206
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 206,
            "lineBreaks": 0,
            "line": 1,
            "col": 207
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 207,
            "lineBreaks": 0,
            "line": 1,
            "col": 208
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run y=GetAchievementCriteriaInfo for z=1,85 do a,b,c,d,e,f,g,h,i,j = y(1021,z); k,l,m,n,o,p,q,r,s,t = y(j) if m==false then print(\"\\124cffff0000\\Failed:\\124r\",k) else print(\"\\124cff00ff00\\OK:\\124r\",k) end; end",
        "ambiguous": false
      }
    ],
    "occurences": 16,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "105"
    ],
    "prefix": [],
    "label": [
      "tabard"
    ],
    "icon": [
      "Spell_Holy_HolyGuidance"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/who",
            "text": "/who",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "80",
            "text": "80",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "alterac conquest",
            "text": "alterac conquest",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/who 80 alterac conquest",
        "ambiguous": false
      }
    ],
    "occurences": 23,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "91"
    ],
    "prefix": [
      "@"
    ],
    "label": [
      "80",
      "w80",
      "whoPVP"
    ],
    "icon": [
      "Ability_Warlock_FireandBrimstone",
      "Spell_ChargePositive",
      "Spell_Fire_FelFireward"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/who",
            "text": "/who",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "numberRange",
            "value": "10-79",
            "text": "10-79",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "warsong arathi eye strand",
            "text": "warsong arathi eye strand",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/who 10-79 warsong arathi eye strand",
        "ambiguous": false
      }
    ],
    "occurences": 17,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "102"
    ],
    "prefix": [],
    "label": [
      "wTwi"
    ],
    "icon": [
      "Spell_ChargeNegative"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Ferocious Bite",
            "text": "Ferocious Bite",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Prowl",
            "text": "Prowl",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [combat] Ferocious Bite; Prowl",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nocombat",
            "text": "nocombat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Prowl",
            "text": "Prowl",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nocombat] !Prowl",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "harm",
            "text": "harm",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Ferocious Bite",
            "text": "Ferocious Bite",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [combat, harm] Ferocious Bite",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "noharm",
            "text": "noharm",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Noggenfogger Elixir",
            "text": "Noggenfogger Elixir",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [combat, noharm] Noggenfogger Elixir",
        "ambiguous": false
      }
    ],
    "occurences": 15,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777219",
      "16777240",
      "16777241"
    ],
    "prefix": [],
    "label": [
      "Bite",
      "FB"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Cyclone",
            "text": "Cyclone",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Cyclone",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777232"
    ],
    "prefix": [],
    "label": [
      "cfCyclone"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Hibernate",
            "text": "Hibernate",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Hibernate",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777234"
    ],
    "prefix": [],
    "label": [
      "cfHibernate"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Entangling Roots",
            "text": "Entangling Roots",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Entangling Roots",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "cfRoots"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Cyclone",
            "text": "Cyclone",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Cyclone",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777220"
    ],
    "prefix": [],
    "label": [
      "ctCyclone"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hibernate",
            "text": "Hibernate",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hibernate",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777235"
    ],
    "prefix": [],
    "label": [
      "ctHibernate"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Entangling Roots",
            "text": "Entangling Roots",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Entangling Roots",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "ctRoots"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Faerie Fire",
            "text": "Faerie Fire",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellMode",
            "value": "(Feral)",
            "text": "(Feral)",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Faerie Fire (Feral)",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777226"
    ],
    "prefix": [],
    "label": [
      "FFF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Argent Crusader's Tabard",
            "text": "Argent Crusader's Tabard",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Argent Crusader's Tabard",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Teleport: Moonglade",
            "text": "Teleport: Moonglade",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Teleport: Moonglade",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Teleport: Moonglade",
            "text": "Teleport: Moonglade",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Teleport: Moonglade",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Mangle",
            "text": "Mangle",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellMode",
            "value": "(Bear)",
            "text": "(Bear)",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Mangle (Bear)",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777227",
      "16777243"
    ],
    "prefix": [],
    "label": [
      "ManB",
      "mangleB"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Mangle",
            "text": "Mangle",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellMode",
            "value": "(Cat)",
            "text": "(Cat)",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Mangle (Cat)",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777224",
      "16777242"
    ],
    "prefix": [],
    "label": [
      "ManC",
      "mangleC"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Flight Form",
            "text": "Swift Flight Form",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellMode",
            "value": "(Shapeshift)",
            "text": "(Shapeshift)",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Flight Form(Shapeshift)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "Swift Flight Form",
            "text": "Swift Flight Form",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellMode",
            "value": "(Shapeshift)",
            "text": "(Shapeshift)",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable, nomounted] Swift Flight Form(Shapeshift)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "Swift Frostsaber",
            "text": "Swift Frostsaber",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable, nomounted] Swift Frostsaber",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Black Drake",
            "text": "Black Drake",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Black Drake",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Survival Instincts",
            "text": "Survival Instincts",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Survival Instincts",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Survival Instincts",
            "text": "Survival Instincts",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Survival Instincts",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Lifeblood",
            "text": "Lifeblood",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Lifeblood",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Frenzied Regeneration",
            "text": "Frenzied Regeneration",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Frenzied Regeneration",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /targetlasttarget\n  ^\nUnexpected command token: \"/targetlasttarget\"\n",
        "line": "/targetlasttarget",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt"
    ],
    "id": [
      "16777240"
    ],
    "prefix": [],
    "label": [
      "Survi"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 ----------------",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
            "text": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 |cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "wszystkie glify",
            "text": "wszystkie glify",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "100",
            "text": "100",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "szt",
            "text": "szt",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 wszystkie glify, 100g/szt",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Gaenna/macros-cache.txt"
    ],
    "id": [
      "16777239"
    ],
    "prefix": [],
    "label": [
      "WTS"
    ],
    "icon": [
      "Spell_Holy_ProclaimChampion"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Hex",
            "text": "Hex",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Hex",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Hex",
            "text": "Hex",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Hex",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "FHex",
      "HexF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Flame Shock",
            "text": "Flame Shock",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Flame Shock",
        "ambiguous": false
      }
    ],
    "occurences": 13,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777217",
      "16777218"
    ],
    "prefix": [],
    "label": [
      "FS",
      "Flame Shock"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Wind Shear",
            "text": "Wind Shear",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Wind Shear",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Wind Shear",
            "text": "Wind Shear",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Wind Shear",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "FWS",
      "WSF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Goldmoon",
            "text": "Goldmoon",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "Gift of the Naaru",
            "text": "Gift of the Naaru",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellMode",
            "value": "(Racial)",
            "text": "(Racial)",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Goldmoon] Gift of the Naaru(Racial)",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777231"
    ],
    "prefix": [],
    "label": [
      "GiftP",
      "GotNF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Astral Recall",
            "text": "Astral Recall",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Astral Recall",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Argent Crusader's Tabard",
            "text": "Argent Crusader's Tabard",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Argent Crusader's Tabard",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Black War Tiger",
            "text": "Black War Tiger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Black War Tiger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Bronze Drake",
            "text": "Bronze Drake",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Bronze Drake",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Black War Tiger",
            "text": "Black War Tiger",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Black War Tiger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Black War Tiger",
            "text": "Black War Tiger",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Black War Tiger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Nature's Swiftness",
            "text": "Nature's Swiftness",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Nature's Swiftness",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Gift of the Naaru",
            "text": "Gift of the Naaru",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellMode",
            "value": "(Racial)",
            "text": "(Racial)",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Gift of the Naaru(Racial)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Nature's Swiftness",
            "text": "Nature's Swiftness",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Nature's Swiftness",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Tidal Force",
            "text": "Tidal Force",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Tidal Force",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Healing Wave",
            "text": "Healing Wave",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Healing Wave",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "NS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Nevermelting Ice Crystal",
            "text": "Nevermelting Ice Crystal",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Nevermelting Ice Crystal",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Nevermelting Ice Crystal",
            "text": "Nevermelting Ice Crystal",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Nevermelting Ice Crystal",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Talisman of Volatile Power",
            "text": "Talisman of Volatile Power",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Talisman of Volatile Power",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Elemental Mastery",
            "text": "Elemental Mastery",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Elemental Mastery",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777230"
    ],
    "prefix": [],
    "label": [
      "Nuke"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Hex",
            "text": "Hex",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Hex",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hex",
            "text": "Hex",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hex",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777227"
    ],
    "prefix": [],
    "label": [
      "HexT",
      "THex"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  haha\n  ^\nUnexpected spellName token: \"haha\"\n",
        "line": "haha, mozna sie bylo tego spodziewac po burakach z nii",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777232"
    ],
    "prefix": [],
    "label": [
      "troll"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Wind Shear",
            "text": "Wind Shear",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Wind Shear",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Wind Shear",
            "text": "Wind Shear",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Wind Shear",
        "ambiguous": false
      }
    ],
    "occurences": 13,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777219",
      "16777224"
    ],
    "prefix": [],
    "label": [
      "TWS",
      "WS",
      "WST"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Thornstar",
            "text": "Thornstar",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Thornstar\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Voylin",
            "text": "Voylin",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Voylin\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777230"
    ],
    "prefix": [],
    "label": [
      "ICON"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Flight Form",
            "text": "Swift Flight Form",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellMode",
            "value": "(Shapeshift)",
            "text": "(Shapeshift)",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Flight Form(Shapeshift)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "Swift Flight Form",
            "text": "Swift Flight Form",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellMode",
            "value": "(Shapeshift)",
            "text": "(Shapeshift)",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable, nomounted] Swift Flight Form(Shapeshift)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "Darnassian Nightsaber",
            "text": "Darnassian Nightsaber",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable, nomounted] Darnassian Nightsaber",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Black Drake",
            "text": "Black Drake",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Black Drake",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Berserk",
            "text": "Berserk",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Berserk",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Berserk",
            "text": "Berserk",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Berserk",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Mark of Supremacy",
            "text": "Mark of Supremacy",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Mark of Supremacy",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777237"
    ],
    "prefix": [],
    "label": [
      "NUKE"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Survival Instincts",
            "text": "Survival Instincts",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Survival Instincts",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Frenzied Regeneration",
            "text": "Frenzied Regeneration",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Frenzied Regeneration",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777238"
    ],
    "prefix": [],
    "label": [
      "Survi"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Vudu",
            "text": "Vudu",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "spellName",
            "value": "Dispel Magic",
            "text": "Dispel Magic",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Vudu] Dispel Magic",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Vudu/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Vudu/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "Dispell"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shadowfiend",
            "text": "Shadowfiend",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shadowfiend",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Vudu/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Vudu/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "fiend"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Vudu/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Vudu/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Devouring Plague",
            "text": "Devouring Plague",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Devouring Plague",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Inner Focus",
            "text": "Inner Focus",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast !Inner Focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Devouring Plague",
            "text": "Devouring Plague",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Devouring Plague",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Vudu/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Vudu/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777223",
      "16777227"
    ],
    "prefix": [],
    "label": [
      "IFshadow",
      "Plaga"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Purple Gryphon",
            "text": "Swift Purple Gryphon",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Purple Gryphon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Swift Purple Gryphon",
            "text": "Swift Purple Gryphon",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Swift Purple Gryphon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Swift Palomino",
            "text": "Swift Palomino",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Swift Palomino",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/Feronis/Vudu/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Vudu/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "local x",
            "text": "local x",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "UnitSex",
            "text": "UnitSex",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "spellName",
            "value": "local g",
            "text": "local g",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "unknown",
            "value": "{",
            "text": "{",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "spellName",
            "value": "n unknown",
            "text": "n unknown",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "spellName",
            "value": "boy",
            "text": "boy",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 62,
            "lineBreaks": 0,
            "line": 1,
            "col": 63
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 63,
            "lineBreaks": 0,
            "line": 1,
            "col": 64
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "spellName",
            "value": "girl",
            "text": "girl",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "unknown",
            "value": "}",
            "text": "}",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "spellName",
            "value": "n",
            "text": "n",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "spellName",
            "value": "GetUnitName",
            "text": "GetUnitName",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          },
          {
            "type": "spellName",
            "value": "if IsShiftKeyDown",
            "text": "if IsShiftKeyDown",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "spellName",
            "value": "then SendChatMessage",
            "text": "then SendChatMessage",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "spellName",
            "value": "n",
            "text": "n",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "spellName",
            "value": "is a",
            "text": "is a",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "spellName",
            "value": "SAY",
            "text": "SAY",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "else print",
            "text": "else print",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "spellName",
            "value": "n",
            "text": "n",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 181,
            "lineBreaks": 0,
            "line": 1,
            "col": 182
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 182,
            "lineBreaks": 0,
            "line": 1,
            "col": 183
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 183,
            "lineBreaks": 0,
            "line": 1,
            "col": 184
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 185,
            "lineBreaks": 0,
            "line": 1,
            "col": 186
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 186,
            "lineBreaks": 0,
            "line": 1,
            "col": 187
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 187,
            "lineBreaks": 0,
            "line": 1,
            "col": 188
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 188,
            "lineBreaks": 0,
            "line": 1,
            "col": 189
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 190,
            "lineBreaks": 0,
            "line": 1,
            "col": 191
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 191,
            "lineBreaks": 0,
            "line": 1,
            "col": 192
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 192,
            "lineBreaks": 0,
            "line": 1,
            "col": 193
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run local x=UnitSex(\"target\");local g={\"n unknown!\", \" boy!\", \" girl!\"} n=GetUnitName(\"target\");if IsShiftKeyDown()then SendChatMessage(n ..\" is a\" ..g[x],\"SAY\");else print(n ..\" --\" ..g[x]);end",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "104"
    ],
    "prefix": [],
    "label": [
      "Event"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",8);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",5);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Khuunem",
            "text": "Khuunem",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Khuunem\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [],
    "label": [
      "IconP"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run SetRaidTarget(\"target\", 1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt"
    ],
    "id": [
      "96"
    ],
    "prefix": [],
    "label": [
      "IconT"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "y",
            "text": "y",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "GetAchievementCriteriaInfo for z",
            "text": "GetAchievementCriteriaInfo for z",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "number",
            "value": "85",
            "text": "85",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "do a",
            "text": "do a",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 49,
            "lineBreaks": 0,
            "line": 1,
            "col": 50
          },
          {
            "type": "spellName",
            "value": "b",
            "text": "b",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "spellName",
            "value": "e",
            "text": "e",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 62,
            "lineBreaks": 0,
            "line": 1,
            "col": 63
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 63,
            "lineBreaks": 0,
            "line": 1,
            "col": 64
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "j",
            "text": "j",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "spellName",
            "value": "y",
            "text": "y",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "number",
            "value": "1021",
            "text": "1021",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "spellName",
            "value": "k",
            "text": "k",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "spellName",
            "value": "l",
            "text": "l",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 85,
            "lineBreaks": 0,
            "line": 1,
            "col": 86
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "spellName",
            "value": "n",
            "text": "n",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "spellName",
            "value": "o",
            "text": "o",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "spellName",
            "value": "p",
            "text": "p",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "spellName",
            "value": "q",
            "text": "q",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 98,
            "lineBreaks": 0,
            "line": 1,
            "col": 99
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 99,
            "lineBreaks": 0,
            "line": 1,
            "col": 100
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "spellName",
            "value": "y",
            "text": "y",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "spellName",
            "value": "j",
            "text": "j",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 106,
            "lineBreaks": 0,
            "line": 1,
            "col": 107
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 107,
            "lineBreaks": 0,
            "line": 1,
            "col": 108
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 108,
            "lineBreaks": 0,
            "line": 1,
            "col": 109
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "spellName",
            "value": "false then print",
            "text": "false then print",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "spellName",
            "value": "cffff",
            "text": "cffff",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "number",
            "value": "0000",
            "text": "0000",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "spellName",
            "value": "You have NOT YET equipped",
            "text": "You have NOT YET equipped",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "spellName",
            "value": "k",
            "text": "k",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 181,
            "lineBreaks": 0,
            "line": 1,
            "col": 182
          },
          {
            "type": "spellName",
            "value": "else print",
            "text": "else print",
            "offset": 182,
            "lineBreaks": 0,
            "line": 1,
            "col": 183
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 192,
            "lineBreaks": 0,
            "line": 1,
            "col": 193
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 193,
            "lineBreaks": 0,
            "line": 1,
            "col": 194
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 194,
            "lineBreaks": 0,
            "line": 1,
            "col": 195
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 195,
            "lineBreaks": 0,
            "line": 1,
            "col": 196
          },
          {
            "type": "spellName",
            "value": "cff",
            "text": "cff",
            "offset": 198,
            "lineBreaks": 0,
            "line": 1,
            "col": 199
          },
          {
            "type": "number",
            "value": "00",
            "text": "00",
            "offset": 201,
            "lineBreaks": 0,
            "line": 1,
            "col": 202
          },
          {
            "type": "spellName",
            "value": "ff",
            "text": "ff",
            "offset": 203,
            "lineBreaks": 0,
            "line": 1,
            "col": 204
          },
          {
            "type": "number",
            "value": "00",
            "text": "00",
            "offset": 205,
            "lineBreaks": 0,
            "line": 1,
            "col": 206
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 207,
            "lineBreaks": 0,
            "line": 1,
            "col": 208
          },
          {
            "type": "spellName",
            "value": "You have equipped",
            "text": "You have equipped",
            "offset": 208,
            "lineBreaks": 0,
            "line": 1,
            "col": 209
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 225,
            "lineBreaks": 0,
            "line": 1,
            "col": 226
          },
          {
            "type": "unknown",
            "value": "\\",
            "text": "\\",
            "offset": 226,
            "lineBreaks": 0,
            "line": 1,
            "col": 227
          },
          {
            "type": "number",
            "value": "124",
            "text": "124",
            "offset": 227,
            "lineBreaks": 0,
            "line": 1,
            "col": 228
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 230,
            "lineBreaks": 0,
            "line": 1,
            "col": 231
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 231,
            "lineBreaks": 0,
            "line": 1,
            "col": 232
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 232,
            "lineBreaks": 0,
            "line": 1,
            "col": 233
          },
          {
            "type": "spellName",
            "value": "k",
            "text": "k",
            "offset": 233,
            "lineBreaks": 0,
            "line": 1,
            "col": 234
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 234,
            "lineBreaks": 0,
            "line": 1,
            "col": 235
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 235,
            "lineBreaks": 0,
            "line": 1,
            "col": 236
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 236,
            "lineBreaks": 0,
            "line": 1,
            "col": 237
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 239,
            "lineBreaks": 0,
            "line": 1,
            "col": 240
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 240,
            "lineBreaks": 0,
            "line": 1,
            "col": 241
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 241,
            "lineBreaks": 0,
            "line": 1,
            "col": 242
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run y=GetAchievementCriteriaInfo for z=1,85 do a,b,c,d,e,f,g,h,i,j = y(1021,z); k,l,m,n,o,p,q,r,s,t = y(j) if m==false then print(\"\\124cffff0000\\You have NOT YET equipped:\\124r\",k) else print(\"\\124cff00ff00\\You have equipped:\\124r\",k) end; end",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "105"
    ],
    "prefix": [],
    "label": [
      "tabard"
    ],
    "icon": [
      "Spell_Holy_HolyGuidance"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "WG za",
            "text": "WG za",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "nil then h",
            "text": "nil then h",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "spellName",
            "value": "if h",
            "text": "if h",
            "offset": 98,
            "lineBreaks": 0,
            "line": 1,
            "col": 99
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "spellName",
            "value": "if s",
            "text": "if s",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 183,
            "lineBreaks": 0,
            "line": 1,
            "col": 184
          },
          {
            "type": "spellName",
            "value": "print",
            "text": "print",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 190,
            "lineBreaks": 0,
            "line": 1,
            "col": 191
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 191,
            "lineBreaks": 0,
            "line": 1,
            "col": 192
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 192,
            "lineBreaks": 0,
            "line": 1,
            "col": 193
          },
          {
            "type": "spellName",
            "value": "else print",
            "text": "else print",
            "offset": 193,
            "lineBreaks": 0,
            "line": 1,
            "col": 194
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 203,
            "lineBreaks": 0,
            "line": 1,
            "col": 204
          },
          {
            "type": "unknown",
            "value": "'",
            "text": "'",
            "offset": 204,
            "lineBreaks": 0,
            "line": 1,
            "col": 205
          },
          {
            "type": "spellName",
            "value": "Trwa WG",
            "text": "Trwa WG",
            "offset": 205,
            "lineBreaks": 0,
            "line": 1,
            "col": 206
          },
          {
            "type": "unknown",
            "value": "'",
            "text": "'",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 213,
            "lineBreaks": 0,
            "line": 1,
            "col": 214
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 214,
            "lineBreaks": 0,
            "line": 1,
            "col": 215
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 215,
            "lineBreaks": 0,
            "line": 1,
            "col": 216
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run x=\"WG za \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;print(x);else print('Trwa WG');end",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "106",
      "118"
    ],
    "prefix": [
      "@",
      "_"
    ],
    "label": [
      "WG"
    ],
    "icon": [
      "Ability_Parry",
      "Spell_Holy_BlessingOfProtection",
      "Spell_Shadow_SoulLeech_1"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "WG",
            "text": "WG",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "nil then h",
            "text": "nil then h",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 85,
            "lineBreaks": 0,
            "line": 1,
            "col": 86
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "spellName",
            "value": "if h",
            "text": "if h",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 99,
            "lineBreaks": 0,
            "line": 1,
            "col": 100
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 108,
            "lineBreaks": 0,
            "line": 1,
            "col": 109
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 109,
            "lineBreaks": 0,
            "line": 1,
            "col": 110
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 110,
            "lineBreaks": 0,
            "line": 1,
            "col": 111
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 124,
            "lineBreaks": 0,
            "line": 1,
            "col": 125
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "spellName",
            "value": "if s",
            "text": "if s",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 181,
            "lineBreaks": 0,
            "line": 1,
            "col": 182
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 196,
            "lineBreaks": 0,
            "line": 1,
            "col": 197
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 197,
            "lineBreaks": 0,
            "line": 1,
            "col": 198
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 198,
            "lineBreaks": 0,
            "line": 1,
            "col": 199
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 207,
            "lineBreaks": 0,
            "line": 1,
            "col": 208
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 208,
            "lineBreaks": 0,
            "line": 1,
            "col": 209
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 209,
            "lineBreaks": 0,
            "line": 1,
            "col": 210
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 213,
            "lineBreaks": 0,
            "line": 1,
            "col": 214
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 227,
            "lineBreaks": 0,
            "line": 1,
            "col": 228
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 228,
            "lineBreaks": 0,
            "line": 1,
            "col": 229
          },
          {
            "type": "spellName",
            "value": "pl",
            "text": "pl",
            "offset": 229,
            "lineBreaks": 0,
            "line": 1,
            "col": 230
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 231,
            "lineBreaks": 0,
            "line": 1,
            "col": 232
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 232,
            "lineBreaks": 0,
            "line": 1,
            "col": 233
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 233,
            "lineBreaks": 0,
            "line": 1,
            "col": 234
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 234,
            "lineBreaks": 0,
            "line": 1,
            "col": 235
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run x=\"WG \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"CHANNEL\",nil,GetChannelName(\"pl\"))end",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "107"
    ],
    "prefix": [],
    "label": [
      "WGpl"
    ],
    "icon": [
      "Spell_Holy_PersuitofJustice"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "WG za",
            "text": "WG za",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "nil then h",
            "text": "nil then h",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "spellName",
            "value": "if h",
            "text": "if h",
            "offset": 98,
            "lineBreaks": 0,
            "line": 1,
            "col": 99
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "spellName",
            "value": "if s",
            "text": "if s",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 183,
            "lineBreaks": 0,
            "line": 1,
            "col": 184
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 201,
            "lineBreaks": 0,
            "line": 1,
            "col": 202
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 202,
            "lineBreaks": 0,
            "line": 1,
            "col": 203
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 203,
            "lineBreaks": 0,
            "line": 1,
            "col": 204
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 210,
            "lineBreaks": 0,
            "line": 1,
            "col": 211
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 211,
            "lineBreaks": 0,
            "line": 1,
            "col": 212
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 215,
            "lineBreaks": 0,
            "line": 1,
            "col": 216
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 216,
            "lineBreaks": 0,
            "line": 1,
            "col": 217
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 230,
            "lineBreaks": 0,
            "line": 1,
            "col": 231
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 231,
            "lineBreaks": 0,
            "line": 1,
            "col": 232
          },
          {
            "type": "spellName",
            "value": "pl",
            "text": "pl",
            "offset": 232,
            "lineBreaks": 0,
            "line": 1,
            "col": 233
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 234,
            "lineBreaks": 0,
            "line": 1,
            "col": 235
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 235,
            "lineBreaks": 0,
            "line": 1,
            "col": 236
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 236,
            "lineBreaks": 0,
            "line": 1,
            "col": 237
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 237,
            "lineBreaks": 0,
            "line": 1,
            "col": 238
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run x=\"WG za \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"CHANNEL\",nil,GetChannelName(\"pl\"))end",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "106",
      "108"
    ],
    "prefix": [],
    "label": [
      "WG",
      "WGpl"
    ],
    "icon": [
      "Ability_Creature_Cursed_04",
      "Spell_Frost_Stun"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/who",
            "text": "/who",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "g-pwn",
            "text": "g-pwn",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/who g-pwn",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "103"
    ],
    "prefix": [],
    "label": [
      "wPWN"
    ],
    "icon": [
      "Spell_DeathKnight_AntiMagicZone"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Summon Warhorse",
            "text": "Summon Warhorse",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Summon Warhorse",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castrandom",
            "text": "/castrandom",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Summon Warhorse",
            "text": "Summon Warhorse",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "spellName",
            "value": "Red Hawkstrider",
            "text": "Red Hawkstrider",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "spellName",
            "value": "Purple Hawkstrider",
            "text": "Purple Hawkstrider",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "Brewfest Ram",
            "text": "Brewfest Ram",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "spellName",
            "value": "Blue Hawkstrider",
            "text": "Blue Hawkstrider",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "spellName",
            "value": "Black Hawkstrider",
            "text": "Black Hawkstrider",
            "offset": 98,
            "lineBreaks": 0,
            "line": 1,
            "col": 99
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "spellName",
            "value": "Brewfest Ram",
            "text": "Brewfest Ram",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "spellName",
            "value": "Summon Warhorse",
            "text": "Summon Warhorse",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castrandom Summon Warhorse, Red Hawkstrider, Purple Hawkstrider, Brewfest Ram, Blue Hawkstrider, Black Hawkstrider, Brewfest Ram, Summon Warhorse",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Eilan/macros-cache.txt"
    ],
    "id": [
      "16777223"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Death Pact",
            "text": "Death Pact",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Death Pact",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castsequence",
            "text": "/castsequence",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          null,
          {
            "type": "spellName",
            "value": "Raise Dead",
            "text": "Raise Dead",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "spellName",
            "value": "Death Pact",
            "text": "Death Pact",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castsequence Raise Dead, Death Pact",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Puszek/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Puszek/macros-cache.txt"
    ],
    "id": [
      "16777220"
    ],
    "prefix": [],
    "label": [
      "heal"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Death Gate",
            "text": "Death Gate",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Death Gate",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Puszek/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Puszek/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "hs"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Swift Purple Wind Rider",
            "text": "Swift Purple Wind Rider",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "spellName",
            "value": "Acherus Deathcharger",
            "text": "Acherus Deathcharger",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] Swift Purple Wind Rider; Acherus Deathcharger",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] Swift Purple Wind Rider;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] Acherus Deathcharger;",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mod:alt, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Puszek/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Puszek/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Disenchant",
            "text": "Disenchant",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Disenchant",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Basic Campfire",
            "text": "Basic Campfire",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Basic Campfire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Enchanting",
            "text": "Enchanting",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Enchanting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Armorsmith",
            "text": "Armorsmith",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Armorsmith",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Puszek/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Puszek/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "prof"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Demon Armor",
            "text": "Demon Armor",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Demon Armor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Fel Armor",
            "text": "Fel Armor",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Fel Armor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Fel Armor",
            "text": "Fel Armor",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Fel Armor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Fel Armor",
            "text": "Fel Armor",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Fel Armor",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777241"
    ],
    "prefix": [],
    "label": [
      "armor"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Atchene",
            "text": "Atchene",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Atchene] Devour Magic",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777244"
    ],
    "prefix": [],
    "label": [
      "Atchene"
    ],
    "icon": [
      "Ability_BackStab"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  #\n  ^\nUnexpected unknown token: \"#\"\n",
        "line": "#Showtooltip Fear",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "modifier",
            "value": "noexists",
            "text": "noexists",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "modifier",
            "value": "dead",
            "text": "dead",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "spellName",
            "value": "playertarget",
            "text": "playertarget",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/focus [target=focus, noexists][target=focus, dead] playertarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Fear",
            "text": "Fear",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Fear",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/clearfocus",
            "text": "/clearfocus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/clearfocus [modifier:ctrl]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopmacro",
            "text": "/stopmacro",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/stopmacro",
        "ambiguous": false
      }
    ],
    "occurences": 13,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777226",
      "16777236"
    ],
    "prefix": [],
    "label": [
      "chain fear"
    ],
    "icon": [
      "Spell_Shadow_Possession",
      "Spell_Shadow_PsychicScream"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "nochanneling: Drain Life",
            "text": "nochanneling: Drain Life",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "Drain Life",
            "text": "Drain Life",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nochanneling: Drain Life] Drain Life",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "drain"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=player] Devour Magic",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /targetlasttarget\n  ^\nUnexpected command token: \"/targetlasttarget\"\n",
        "line": "/targetlasttarget [pet:Felhunter]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter] Devour Magic",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "targettarget",
            "text": "targettarget",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=targettarget] Devour Magic",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /targetlasttarget\n  ^\nUnexpected command token: \"/targetlasttarget\"\n",
        "line": "/targetlasttarget [pet:Felhunter]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777234"
    ],
    "prefix": [],
    "label": [
      "fel hunter"
    ],
    "icon": [
      "Spell_Shadow_Brainwash"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Fel Healthstone",
            "text": "Fel Healthstone",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [nomod] Fel Healthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Create Healthstone",
            "text": "Create Healthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Create Healthstone",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777221",
      "16777232"
    ],
    "prefix": [],
    "label": [
      "FHS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Grand Firestone",
            "text": "Grand Firestone",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Grand Firestone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Create Firestone",
            "text": "Create Firestone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:2] Create Firestone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Grand Firestone",
            "text": "Grand Firestone",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [button:1] Grand Firestone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [button:1] 16",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/click",
            "text": "/click",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "StaticPopup",
            "text": "StaticPopup",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Button",
            "text": "Button",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/click StaticPopup1Button1",
        "ambiguous": false
      }
    ],
    "occurences": 13,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777219",
      "16777243"
    ],
    "prefix": [],
    "label": [
      "FireS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Fear",
            "text": "Fear",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Fear",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "focus"
    ],
    "icon": [
      "Spell_Shadow_Possession"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Summon Voidwalker",
            "text": "Summon Voidwalker",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier] Summon Voidwalker",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Summon Succubus",
            "text": "Summon Succubus",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Summon Succubus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Summon Felhunter",
            "text": "Summon Felhunter",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:alt] Summon Felhunter",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Inferno",
            "text": "Inferno",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:ctrl] Inferno",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "min"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Armored Blue Wind Rider",
            "text": "Armored Blue Wind Rider",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "spellName",
            "value": "Swift Warstrider",
            "text": "Swift Warstrider",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] Armored Blue Wind Rider; Swift Warstrider",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] Black Drake;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] Frostwolf Howler;",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mod:alt, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Prospecting",
            "text": "Prospecting",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier] Prospecting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Jewelcrafting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Cooking",
            "text": "Cooking",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:alt] Cooking",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Blacksmithing",
            "text": "Blacksmithing",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:ctrl] Blacksmithing",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "prof"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Curse of Weakness",
            "text": "Curse of Weakness",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Curse of Weakness",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "targetNearestDistance",
            "text": "targetNearestDistance",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "numberDecimal",
            "value": "15.000000",
            "text": "15.000000",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console targetNearestDistance 15.000000",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 22:\n\n  /targetenemy [noharm][\n                       ^\nUnexpected bracketSquareOpen token: \"[\"\n",
        "line": "/targetenemy [noharm][dead]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "targetNearestDistance",
            "text": "targetNearestDistance",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "numberDecimal",
            "value": "41.000000",
            "text": "41.000000",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console targetNearestDistance 41.000000",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "harm",
            "text": "harm",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "modifier",
            "value": "nodead",
            "text": "nodead",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "spellName",
            "value": "Curse of Weakness",
            "text": "Curse of Weakness",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [harm,nodead] Curse of Weakness",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "modifier",
            "value": "exists",
            "text": "exists",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [target=target,exists]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777235"
    ],
    "prefix": [],
    "label": [
      "rouge"
    ],
    "icon": [
      "Ability_Ambush"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "seduction",
            "text": "seduction",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip seduction",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopmacro",
            "text": "/stopmacro",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "modifier",
            "value": "nopet",
            "text": "nopet",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "succubus",
            "text": "succubus",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopmacro [nopet:succubus]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/petfollow",
            "text": "/petfollow",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/petfollow",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack [target=pettarget]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "pettarget",
            "text": "pettarget",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Seduction",
            "text": "Seduction",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:1,target=pettarget] Seduction",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "playertarget",
            "text": "playertarget",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "spellName",
            "value": "Seduction",
            "text": "Seduction",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:2,target=playertarget] Seduction",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "seduction"
    ],
    "icon": [
      "Spell_Shadow_Curse"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Grand Spellstone",
            "text": "Grand Spellstone",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Grand Spellstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Create Spellstone",
            "text": "Create Spellstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:2] Create Spellstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Grand Spellstone",
            "text": "Grand Spellstone",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [button:1] Grand Spellstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [button:1] 16",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/click",
            "text": "/click",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "StaticPopup",
            "text": "StaticPopup",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Button",
            "text": "Button",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/click StaticPopup1Button1",
        "ambiguous": false
      }
    ],
    "occurences": 13,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777220",
      "16777227"
    ],
    "prefix": [],
    "label": [
      "SpellS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:alt] Demonic Circle: Summon;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier] Demonic Circle: Teleport;",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777226"
    ],
    "prefix": [],
    "label": [
      "teleport"
    ],
    "icon": [
      "Spell_Shadow_DemonicCircleSummon"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Vanyaelnesar",
            "text": "Vanyaelnesar",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Vanyaelnesar] Devour Magic",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777245"
    ],
    "prefix": [],
    "label": [
      "Vany"
    ],
    "icon": [
      "Spell_Shadow_ImprovedVampiricEmbrace"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Relentless Gladiator's Decapitator",
            "text": "Relentless Gladiator's Decapitator",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 Relentless Gladiator's Decapitator",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "2h"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Bladestorm",
            "text": "Bladestorm",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Bladestorm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Dreadlord's Blade",
            "text": "Dreadlord's Blade",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 Dreadlord's Blade",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /castBladestorm\n  ^\nUnexpected command token: \"/castBladestorm\"\n",
        "line": "/castBladestorm",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777235"
    ],
    "prefix": [],
    "label": [
      "Bladestorm"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Bladestorm",
            "text": "Bladestorm",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Bladestorm",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777242"
    ],
    "prefix": [],
    "label": [
      "cancel"
    ],
    "icon": [
      "Ability_Creature_Cursed_04"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Charge",
            "text": "Charge",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Charge",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Bloodrage",
            "text": "Bloodrage",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Bloodrage",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Charge",
            "text": "Charge",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Charge",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777237"
    ],
    "prefix": [],
    "label": [
      "Charge"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Charge",
            "text": "Charge",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Charge",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Charge",
            "text": "Charge",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Charge",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Intercept",
            "text": "Intercept",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Intercept",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Rend",
            "text": "Rend",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Rend",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777230"
    ],
    "prefix": [],
    "label": [
      "Charge Prot"
    ],
    "icon": [
      "Ability_CheapShot"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Shield Block",
            "text": "Shield Block",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Shield Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Defensive Stance",
            "text": "Defensive Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Defensive Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Aledar's Battlestar",
            "text": "Aledar's Battlestar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 Aledar's Battlestar",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "17",
            "text": "17",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Titansteel Shield Wall",
            "text": "Titansteel Shield Wall",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 17 Titansteel Shield Wall",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shield Block",
            "text": "Shield Block",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shield Block",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777224"
    ],
    "prefix": [],
    "label": [
      "Defensive"
    ],
    "icon": [
      "Ability_Defend"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Devastate",
            "text": "Devastate",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Devastate",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Devastate",
            "text": "Devastate",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Devastate",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "Devastate"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Disarm",
            "text": "Disarm",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Disarm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Defensive Stance",
            "text": "Defensive Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Defensive Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Disarm",
            "text": "Disarm",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Disarm",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777232"
    ],
    "prefix": [],
    "label": [
      "Disarm"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Enraged Regeneration",
            "text": "Enraged Regeneration",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Enraged Regeneration",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Enraged Regeneration",
            "text": "Enraged Regeneration",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Enraged Regeneration",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777231"
    ],
    "prefix": [],
    "label": [
      "ER"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Intercept",
            "text": "Intercept",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Intercept",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Berserker Stance",
            "text": "Berserker Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Berserker Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Intercept",
            "text": "Intercept",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Intercept",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777234"
    ],
    "prefix": [],
    "label": [
      "Instercept arms"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Mortal Strike",
            "text": "Mortal Strike",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Mortal Strike",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Mortal Strike",
            "text": "Mortal Strike",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Mortal Strike",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777241"
    ],
    "prefix": [],
    "label": [
      "Mortal"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Swift Red Gryphon",
            "text": "Swift Red Gryphon",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "spellName",
            "value": "Black War Tiger",
            "text": "Black War Tiger",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] Swift Red Gryphon; Black War Tiger",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] Swift Red Gryphon;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] Black War Tiger;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 30:\n\n  /dismount [noflying, mounted]]\n                               ^\nUnexpected bracketSquareClose token: \"]\"\n",
        "line": "/dismount [noflying, mounted]]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777238"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Pummel",
            "text": "Pummel",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Pummel",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Berserker Stance",
            "text": "Berserker Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Berserker Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Pummel",
            "text": "Pummel",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Pummel",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777239"
    ],
    "prefix": [],
    "label": [
      "pummel"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castsequence",
            "text": "/castsequence",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "reset",
            "text": "reset",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "45",
            "text": "45",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Deadly Gladiator's Plate Gauntlets",
            "text": "Deadly Gladiator's Plate Gauntlets",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "spellName",
            "value": "Heroic Throw",
            "text": "Heroic Throw",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castsequence reset=45  Deadly Gladiator's Plate Gauntlets, Heroic Throw",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777236"
    ],
    "prefix": [],
    "label": [
      "Range"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Shield Bash",
            "text": "Shield Bash",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Shield Bash",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Aledar's Battlestar",
            "text": "Aledar's Battlestar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 Aledar's Battlestar",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "17",
            "text": "17",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Titansteel Shield Wall",
            "text": "Titansteel Shield Wall",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 17 Titansteel Shield Wall",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shield Bash",
            "text": "Shield Bash",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shield Bash",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777227"
    ],
    "prefix": [],
    "label": [
      "SB arms"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Shield Wall",
            "text": "Shield Wall",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Shield Wall",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Defensive Stance",
            "text": "Defensive Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Defensive Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Aledar's Battlestar",
            "text": "Aledar's Battlestar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 Aledar's Battlestar",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "17",
            "text": "17",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Titansteel Shield Wall",
            "text": "Titansteel Shield Wall",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 17 Titansteel Shield Wall",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shield Wall",
            "text": "Shield Wall",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shield Wall",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777240"
    ],
    "prefix": [],
    "label": [
      "ShieldWall"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Spell Reflection",
            "text": "Spell Reflection",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Spell Reflection",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Battle Stance",
            "text": "Battle Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Battle Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Aledar's Battlestar",
            "text": "Aledar's Battlestar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 Aledar's Battlestar",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "17",
            "text": "17",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Titansteel Shield Wall",
            "text": "Titansteel Shield Wall",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 17 Titansteel Shield Wall",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Spell Reflection",
            "text": "Spell Reflection",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Spell Reflection",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "SR arms"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Shield Slam",
            "text": "Shield Slam",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Shield Slam",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Aledar's Battlestar",
            "text": "Aledar's Battlestar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 Aledar's Battlestar",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "17",
            "text": "17",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Leeka's Shield",
            "text": "Leeka's Shield",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 17 Leeka's Shield",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shield Slam",
            "text": "Shield Slam",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shield Slam",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Cleavage/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Cleavage/macros-cache.txt"
    ],
    "id": [
      "16777226"
    ],
    "prefix": [],
    "label": [
      "SS arms"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Arald",
            "text": "Arald",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Arald] Devour Magic",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "arald"
    ],
    "icon": [
      "Spell_Shadow_Metamorphosis"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "nochanneling: Drain Mana",
            "text": "nochanneling: Drain Mana",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "Drain Mana",
            "text": "Drain Mana",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nochanneling: Drain Mana] Drain Mana",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "drain"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Eilan",
            "text": "Eilan",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Eilan] Devour Magic",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Voidwalker",
            "text": "Voidwalker",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Sacrifice",
            "text": "Sacrifice",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Voidwalker] Sacrifice",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt"
    ],
    "id": [
      "16777227"
    ],
    "prefix": [],
    "label": [
      "eilan"
    ],
    "icon": [
      "Spell_Shadow_NightOfTheDead"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Prospecting",
            "text": "Prospecting",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Prospecting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Jewelcrafting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Jewelcrafting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Jewelcrafting",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "JC"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] Swift Purple gryphon; Black War Tiger;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] Swift Purple Gryphon;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] Black War Tiger;",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mod:alt, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Summon Voidwalker",
            "text": "Summon Voidwalker",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Summon Voidwalker",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Summon Succubus",
            "text": "Summon Succubus",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Summon Succubus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Summon felhunter",
            "text": "Summon felhunter",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Summon felhunter",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Summon Imp",
            "text": "Summon Imp",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Summon Imp",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "pet"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Demonic Circle: Teleport",
            "text": "Demonic Circle: Teleport",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Demonic Circle: Teleport",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Demonic Circle: Summon",
            "text": "Demonic Circle: Summon",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Demonic Circle: Summon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Demonic Circle: Summon",
            "text": "Demonic Circle: Summon",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Demonic Circle: Summon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Demonic Circle: Summon",
            "text": "Demonic Circle: Summon",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Demonic Circle: Summon",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777230"
    ],
    "prefix": [],
    "label": [
      "portal"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Demonic Soulstone",
            "text": "Demonic Soulstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip  Demonic Soulstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Create Soulstone",
            "text": "Create Soulstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:2] Create Soulstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Demonic Soulstone",
            "text": "Demonic Soulstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [button:1]  Demonic Soulstone",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Eilan/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "SoulS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Disenchant",
            "text": "Disenchant",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Disenchant",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Enchanting",
            "text": "Enchanting",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Enchanting",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Goldmoon/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Gamer-District 7x/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "ench"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Mind Blast",
            "text": "Mind Blast",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Mind Blast",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Inner Focus",
            "text": "Inner Focus",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast !Inner Focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Mind Blast",
            "text": "Mind Blast",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Mind Blast",
        "ambiguous": false
      }
    ],
    "occurences": 19,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Goldmoon/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Gamer-District 7x/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777219",
      "16777220"
    ],
    "prefix": [],
    "label": [
      "MB",
      "mb"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Moonsaber",
            "text": "Swift Moonsaber",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Moonsaber",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] Magnificent Flying Carpet;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] Swift Moonsaber;",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mod:alt, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 9,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Feronis/Goldmoon/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift White Steed",
            "text": "Swift White Steed",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift White Steed",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] Swift Blue Gryphon;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] Swift White Steed;",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mod:alt, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Gamer-District 7x/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "at",
            "value": "@",
            "text": "@",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "Shockinhorny",
            "text": "Shockinhorny",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Resurrection",
            "text": "Resurrection",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [@Shockinhorny] Resurrection",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/Gamer-District 7x/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777220"
    ],
    "prefix": [],
    "label": [
      "ress"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /drdamage\n  ^\nUnexpected command token: \"/drdamage\"\n",
        "line": "/drdamage",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "29"
    ],
    "prefix": [],
    "label": [
      "aDrDamage"
    ],
    "icon": [
      "Ability_Creature_Cursed_05"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "server",
            "value": ".server",
            "text": ".server",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "info",
            "text": "info",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          }
        ],
        "parsed": true,
        "message": "",
        "line": ".server info",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "server",
            "value": ".gm",
            "text": ".gm",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "ingame",
            "text": "ingame",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": ".gm ingame",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "37"
    ],
    "prefix": [],
    "label": [
      "aInfo"
    ],
    "icon": [
      "Ability_Druid_Dash"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "LeaveParty",
            "text": "LeaveParty",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script LeaveParty()",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "25"
    ],
    "prefix": [],
    "label": [
      "aParty"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /powa\n  ^\nUnexpected command token: \"/powa\"\n",
        "line": "/powa",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt"
    ],
    "id": [
      "100",
      "24"
    ],
    "prefix": [],
    "label": [
      "aPowa",
      "powa"
    ],
    "icon": [
      "Ability_Creature_Cursed_01",
      "Ability_Creature_Cursed_02"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Basic Campfire",
            "text": "Basic Campfire",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Basic Campfire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Cooking",
            "text": "Cooking",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Cooking",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "First Aid",
            "text": "First Aid",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] First Aid",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "First Aid",
            "text": "First Aid",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] First Aid",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "31"
    ],
    "prefix": [],
    "label": [
      "aProf"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /recount\n  ^\nUnexpected command token: \"/recount\"\n",
        "line": "/recount show",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "28",
      "43"
    ],
    "prefix": [],
    "label": [
      "aRecount"
    ],
    "icon": [
      "Ability_Creature_Cursed_02"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /tidy\n  ^\nUnexpected command token: \"/tidy\"\n",
        "line": "/tidy",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "30"
    ],
    "prefix": [],
    "label": [
      "aTP"
    ],
    "icon": [
      "Ability_Creature_Cursed_03"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Runed Signet of the Kirin Tor",
            "text": "Runed Signet of the Kirin Tor",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier] Runed Signet of the Kirin Tor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "21"
    ],
    "prefix": [],
    "label": [
      "cHS"
    ],
    "icon": [
      "Ability_BullRush"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] fly; run;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] fly;",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] run;",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mod:alt, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "17"
    ],
    "prefix": [],
    "label": [
      "cMount"
    ],
    "icon": [
      "Ability_BullRush"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/yell",
            "text": "/yell",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "INCINARATE FLESH NA MNIE",
            "text": "INCINARATE FLESH NA MNIE",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/yell INCINARATE FLESH NA MNIE",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "36"
    ],
    "prefix": [],
    "label": [
      "Flesh"
    ],
    "icon": [
      "Ability_Creature_Cursed_04"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/promote",
            "text": "/promote",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "sheid",
            "text": "sheid",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/promote sheid",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "40"
    ],
    "prefix": [],
    "label": [
      "inv"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "emote",
            "value": "/lol",
            "text": "/lol",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/lol",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "38"
    ],
    "prefix": [],
    "label": [
      "lol"
    ],
    "icon": [
      "Ability_Creature_Cursed_02"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Rend",
            "text": "Rend",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Rend",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Rend",
            "text": "Rend",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Rend",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "44"
    ],
    "prefix": [],
    "label": [
      "Rend"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/s",
            "text": "/s",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Click the portal to get lazy butts over here",
            "text": "Click the portal to get lazy butts over here",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/s Click the portal to get lazy butts over here",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Ritual of Summoning",
            "text": "Ritual of Summoning",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Ritual of Summoning",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "14"
    ],
    "prefix": [],
    "label": [
      "summon"
    ],
    "icon": [
      "Spell_Shadow_Twilight"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/3",
            "text": "/3",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:3909:122:150:1D6B7:6//yrCAIwthrZCAAgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|h[Tailoring]|h|r",
            "text": "|cffffd000|Htrade:3909:122:150:1D6B7:6//yrCAIwthrZCAAgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|h[Tailoring]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "spellName",
            "value": "za matsy",
            "text": "za matsy",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/3 |cffffd000|Htrade:3909:122:150:1D6B7:6//yrCAIwthrZCAAgDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|h[Tailoring]|h|r za matsy",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "channel",
            "value": "/3",
            "text": "/3",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "kupie Golden Rod",
            "text": "kupie Golden Rod",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/3 kupie Golden Rod",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/EILAN/macros-cache.txt"
    ],
    "id": [
      "39"
    ],
    "prefix": [],
    "label": [
      "TRADE"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Arcane Shot",
            "text": "Arcane Shot",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Arcane Shot",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "AS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Feed Pet",
            "text": "Feed Pet",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Feed Pet",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Smoked Talbuk Venison",
            "text": "Smoked Talbuk Venison",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Smoked Talbuk Venison",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777223"
    ],
    "prefix": [],
    "label": [
      "Feed"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Feed Pet",
            "text": "Feed Pet",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Feed Pet",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Honey-Spiced Lichen",
            "text": "Honey-Spiced Lichen",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Honey-Spiced Lichen",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "Feed2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "at",
            "value": "@",
            "text": "@",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "modifier",
            "value": "dead",
            "text": "dead",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Revive Pet",
            "text": "Revive Pet",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [@pet,dead] Revive Pet",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Mend Pet",
            "text": "Mend Pet",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet] Mend Pet",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "Mend"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "szarzuje",
            "text": "szarzuje",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "Misdirection",
            "text": "Misdirection",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=szarzuje] Misdirection",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "MIS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Swift Timber Wolf",
            "text": "Swift Timber Wolf",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] Blue Wind Rider; Swift Timber Wolf",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Swift Timber Wolf",
            "text": "Swift Timber Wolf",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Swift Timber Wolf",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Obcy",
            "text": "Obcy",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Nether Shock",
            "text": "Nether Shock",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Obcy] Nether Shock",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777224"
    ],
    "prefix": [],
    "label": [
      "PetSkill"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Serpent Sting",
            "text": "Serpent Sting",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Serpent Sting",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/Feronis/Trolljakuj/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "SS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "server info",
            "text": "server info",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g .server info",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "gm ingame",
            "text": "gm ingame",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g .gm ingame",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "61"
    ],
    "prefix": [],
    "label": [
      "aInfo"
    ],
    "icon": [
      "Ability_Druid_Dash"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "LeaveParty",
            "text": "LeaveParty",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script LeaveParty();",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "90"
    ],
    "prefix": [],
    "label": [
      "aLeave"
    ],
    "icon": [
      "Spell_Fire_Rune"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Deadly Poison IX",
            "text": "Deadly Poison IX",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Deadly Poison IX",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "17",
            "text": "17",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [button:1] 16; [button:2] 17",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/click",
            "text": "/click",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "StaticPopup",
            "text": "StaticPopup",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Button",
            "text": "Button",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/click StaticPopup1Button1",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "80"
    ],
    "prefix": [],
    "label": [
      "eEnchant"
    ],
    "icon": [
      "Ability_BullRush"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable]",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted]",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt"
    ],
    "id": [
      "57"
    ],
    "prefix": [],
    "label": [
      "eMounts"
    ],
    "icon": [
      "Ability_BullRush"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "TS",
            "text": "TS",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "numberDecimal",
            "value": "178.33",
            "text": "178.33",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "numberDecimal",
            "value": "136.99",
            "text": "136.99",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw TS: 178.33.136.99",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "TS",
            "text": "TS",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "numberDecimal",
            "value": "178.33",
            "text": "178.33",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "numberDecimal",
            "value": "136.99",
            "text": "136.99",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra TS: 178.33.136.99",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Pokoj",
            "text": "Pokoj",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "We pwn like np",
            "text": "We pwn like np",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Haslo",
            "text": "Haslo",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "marchewka",
            "text": "marchewka",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw Pokoj: \"We pwn like np\" Haslo: \"marchewka\"",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Pokoj",
            "text": "Pokoj",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "We pwn like np",
            "text": "We pwn like np",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Haslo",
            "text": "Haslo",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "marchewka",
            "text": "marchewka",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Pokoj: \"We pwn like np\" Haslo: \"marchewka\"",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "89"
    ],
    "prefix": [],
    "label": [
      "TS"
    ],
    "icon": [
      "Spell_Fire_SunKey"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Maraelnesar",
            "text": "Maraelnesar",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Maraelnesar] Devour Magic",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777244"
    ],
    "prefix": [],
    "label": [
      "Atchene"
    ],
    "icon": [
      "Ability_BackStab"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Fear",
            "text": "Fear",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Fear",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /\n  ^\nUnexpected slash token: \"/\"\n",
        "line": "/",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Bloodcraft Blizz Clone/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "focus"
    ],
    "icon": [
      "Spell_Shadow_Possession"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Fel Healthstone",
            "text": "Fel Healthstone",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [nomod] Fel Healthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Create Healthstone",
            "text": "Create Healthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Create Healthstone",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "FHS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Argent Crusader's Tabard",
            "text": "Argent Crusader's Tabard",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Argent Crusader's Tabard",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Runed Signet of the Kirin Tor",
            "text": "Runed Signet of the Kirin Tor",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Runed Signet of the Kirin Tor",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777232"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Create Soulstone",
            "text": "Create Soulstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:2] Create Soulstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Demonic Soulstone",
            "text": "Demonic Soulstone",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [button:1]  Demonic Soulstone",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "SoulS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Aseel",
            "text": "Aseel",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Dispel magic",
            "text": "Dispel magic",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Aseel] Dispel magic",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt"
    ],
    "id": [
      "16777224"
    ],
    "prefix": [],
    "label": [
      "aseel"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "dampen magic",
            "text": "dampen magic",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura dampen magic",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "flash heal",
            "text": "flash heal",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast flash heal",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "flash"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Irrissa",
            "text": "Irrissa",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Dispel magic",
            "text": "Dispel magic",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Irrissa] Dispel magic",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777221",
      "16777230"
    ],
    "prefix": [],
    "label": [
      "DisP",
      "irrissa"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Silence",
            "text": "Silence",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Silence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Silence",
            "text": "Silence",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Silence",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt"
    ],
    "id": [
      "16777220"
    ],
    "prefix": [],
    "label": [
      "silence"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "WG",
            "text": "WG",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "nil then h",
            "text": "nil then h",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 85,
            "lineBreaks": 0,
            "line": 1,
            "col": 86
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "spellName",
            "value": "if h",
            "text": "if h",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 99,
            "lineBreaks": 0,
            "line": 1,
            "col": 100
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "spellName",
            "value": "then c",
            "text": "then c",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 108,
            "lineBreaks": 0,
            "line": 1,
            "col": 109
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 109,
            "lineBreaks": 0,
            "line": 1,
            "col": 110
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 110,
            "lineBreaks": 0,
            "line": 1,
            "col": 111
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 124,
            "lineBreaks": 0,
            "line": 1,
            "col": 125
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "spellName",
            "value": "then c",
            "text": "then c",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "spellName",
            "value": "if s",
            "text": "if s",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "spellName",
            "value": "then c",
            "text": "then c",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "spellName",
            "value": "print",
            "text": "print",
            "offset": 181,
            "lineBreaks": 0,
            "line": 1,
            "col": 182
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 186,
            "lineBreaks": 0,
            "line": 1,
            "col": 187
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 187,
            "lineBreaks": 0,
            "line": 1,
            "col": 188
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 188,
            "lineBreaks": 0,
            "line": 1,
            "col": 189
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run c=\"WG \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then c=c..h..\"h \";end;if m>0 then c=c..m..\"m \";end;if s>0 then c=c..s..\"s\";end;print(c)end",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Goldmoon/macros-cache.txt"
    ],
    "id": [
      "16777223"
    ],
    "prefix": [],
    "label": [
      "WG"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Irrissa",
            "text": "Irrissa",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Abolish Disease",
            "text": "Abolish Disease",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Irrissa] Abolish Disease",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777232"
    ],
    "prefix": [],
    "label": [
      "AboP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Dispel magic",
            "text": "Dispel magic",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Dispel magic",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777231"
    ],
    "prefix": [],
    "label": [
      "Dispel"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Tremor Totem",
            "text": "Tremor Totem",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Tremor Totem",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Psychic Scream",
            "text": "Psychic Scream",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Psychic Scream",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777227"
    ],
    "prefix": [],
    "label": [
      "Fear"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shadowfiend",
            "text": "Shadowfiend",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shadowfiend",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "Fiend"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Silence",
            "text": "Silence",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Silence",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777226"
    ],
    "prefix": [],
    "label": [
      "SilF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Silence",
            "text": "Silence",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Silence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "SilT"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "7",
            "text": "7",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",7);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "asdfasd",
            "text": "asdfasd",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"asdfasd\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [],
    "label": [
      "IconP"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Blink",
            "text": "Blink",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Blink",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Ice Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Blink",
            "text": "Blink",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Blink",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777243"
    ],
    "prefix": [],
    "label": [
      "blink"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Counterspell",
            "text": "Counterspell",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Counterspell",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Ice Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Counterspell",
            "text": "Counterspell",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Counterspell",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777242"
    ],
    "prefix": [],
    "label": [
      "CSF",
      "FCS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Conjured Mana Strudel",
            "text": "Conjured Mana Strudel",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Conjured Mana Strudel",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Conjured Mana Strudel",
            "text": "Conjured Mana Strudel",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:1] Conjured Mana Strudel",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Conjure Refreshment",
            "text": "Conjure Refreshment",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:2] Conjure Refreshment",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "Food"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Polymorph",
            "text": "Polymorph",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Polymorph",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Ice Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Polymorph",
            "text": "Polymorph",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Polymorph",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777241"
    ],
    "prefix": [],
    "label": [
      "FPoly",
      "PolyF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Mana Sapphire",
            "text": "Mana Sapphire",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Mana Sapphire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Mana Sapphire",
            "text": "Mana Sapphire",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:1] Mana Sapphire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "button",
            "text": "button",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Conjure Mana Gem",
            "text": "Conjure Mana Gem",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [button:2] Conjure Mana Gem",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777220"
    ],
    "prefix": [],
    "label": [
      "gem"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Argent Crusader's Tabard",
            "text": "Argent Crusader's Tabard",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Argent Crusader's Tabard",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Teleport: Dalaran",
            "text": "Teleport: Dalaran",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Teleport: Dalaran",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Teleport: Dalaran",
            "text": "Teleport: Dalaran",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Teleport: Dalaran",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777224"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Ice Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Ice Block",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "IB"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Ice Barrier",
            "text": "Ice Barrier",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Ice Barrier",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Ice Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Mana Shield",
            "text": "Mana Shield",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Mana Shield",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Ice Barrier",
            "text": "Ice Barrier",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Ice Barrier",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777232"
    ],
    "prefix": [],
    "label": [
      "Ice Barrier"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Prospecting",
            "text": "Prospecting",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Prospecting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Jewelcrafting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Jewelcrafting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Jewelcrafting",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777223"
    ],
    "prefix": [],
    "label": [
      "JC"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Moonsaber",
            "text": "Swift Moonsaber",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Moonsaber",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Swift Blue Gryphon",
            "text": "Swift Blue Gryphon",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Swift Blue Gryphon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Swift Moonsaber",
            "text": "Swift Moonsaber",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Swift Moonsaber",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "nopet",
            "text": "nopet",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Summon Water Elemental",
            "text": "Summon Water Elemental",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "Freeze",
            "text": "Freeze",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [nopet] Summon Water Elemental; Freeze",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 13:\n\n  /use [nopet]Summon Water Elemental\n              ^\nUnexpected spellName token: \"Summon Water Elemental\"\n",
        "line": "/use [nopet]Summon Water Elemental; Freeze",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777230"
    ],
    "prefix": [],
    "label": [
      "Pet"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/promote",
            "text": "/promote",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "Kerlic",
            "text": "Kerlic",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/promote Kerlic",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777237"
    ],
    "prefix": [],
    "label": [
      "Promote"
    ],
    "icon": [
      "Ability_Druid_Bash"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Counterspell",
            "text": "Counterspell",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Counterspell",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Ice Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Counterspell",
            "text": "Counterspell",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Counterspell",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "CST",
      "TCS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Polymorph",
            "text": "Polymorph",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Polymorph",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Ice Block",
            "text": "Ice Block",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Ice Block",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Polymorph",
            "text": "Polymorph",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Polymorph",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "PolyT",
      "TPoly"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Aseel",
            "text": "Aseel",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Aseel\",8);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Asheel",
            "text": "Asheel",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Asheel\",8);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Arsh",
            "text": "Arsh",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Arsh\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [],
    "label": [
      "IconP"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "kupie Dark Iron Ore",
            "text": "kupie Dark Iron Ore",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "Fiery Core",
            "text": "Fiery Core",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "Lava Core",
            "text": "Lava Core",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "spellName",
            "value": "Core Leather",
            "text": "Core Leather",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          },
          {
            "type": "spellName",
            "value": "Blood of the Mountain",
            "text": "Blood of the Mountain",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "spellName",
            "value": "kazda ilosc w rozsadnej cenie",
            "text": "kazda ilosc w rozsadnej cenie",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 kupie Dark Iron Ore, Fiery Core, Lava Core, Core Leather, Blood of the Mountain, kazda ilosc w rozsadnej cenie",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.18/SOREN619/macros-cache.txt"
    ],
    "id": [
      "99"
    ],
    "prefix": [],
    "label": [
      "WTB"
    ],
    "icon": [
      "Spell_Holy_ChampionsGrace"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
            "text": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "spellName",
            "value": "wszystkie glify",
            "text": "wszystkie glify",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "number",
            "value": "100",
            "text": "100",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 164,
            "lineBreaks": 0,
            "line": 1,
            "col": 165
          },
          {
            "type": "spellName",
            "value": "szt",
            "text": "szt",
            "offset": 165,
            "lineBreaks": 0,
            "line": 1,
            "col": 166
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 --- |cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////f///////////f|h[Inscription]|h|r wszystkie glify, 100g/szt",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Gaenna/macros-cache.txt"
    ],
    "id": [
      "16777239"
    ],
    "prefix": [],
    "label": [
      "WTS"
    ],
    "icon": [
      "Spell_Holy_ProclaimChampion"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Cure Toxins\n  ^\nUnexpected spellName token: \"Cure Toxins\"\n",
        "line": "Cure Toxins",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Gift of the Naaru\n  ^\nUnexpected spellName token: \"Gift of the Naaru\"\n",
        "line": "Gift of the Naaru",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Noggenfogger Elixir\n  ^\nUnexpected spellName token: \"Noggenfogger Elixir\"\n",
        "line": "Noggenfogger Elixir",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Alliance Battle Standard\n  ^\nUnexpected spellName token: \"Alliance Battle Standard\"\n",
        "line": "Alliance Battle Standard",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Chain Heal\n  ^\nUnexpected spellName token: \"Chain Heal\"\n",
        "line": "Chain Heal",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Drums\n  ^\nUnexpected spellName token: \"Drums\"\n",
        "line": "Drums",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Healthstone\n  ^\nUnexpected spellName token: \"Healthstone\"\n",
        "line": "Healthstone",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777238"
    ],
    "prefix": [],
    "label": [
      "Arena"
    ],
    "icon": [
      "Spell_Nature_Rune"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Cure Toxins",
            "text": "Cure Toxins",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=player] Cure Toxins",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777236"
    ],
    "prefix": [],
    "label": [
      "Cure"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Goldmoon",
            "text": "Goldmoon",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "Cure Toxins",
            "text": "Cure Toxins",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Goldmoon] Cure Toxins",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777235"
    ],
    "prefix": [],
    "label": [
      "CureP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Gift of the Naaru",
            "text": "Gift of the Naaru",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=player] Gift of the Naaru",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777237"
    ],
    "prefix": [],
    "label": [
      "Gift"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+b/////P/7/B56d/Pgf+//BwMBAAX4////HAA5w8D4/vK5//////////////////2/Dw///D|h[Leatherworking]|h|r",
            "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+b/////P/7/B56d/Pgf+//BwMBAAX4////HAA5w8D4/vK5//////////////////2/Dw///D|h[Leatherworking]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "ICC",
            "text": "ICC",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "spellName",
            "value": "ToC",
            "text": "ToC",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "number",
            "value": "6",
            "text": "6",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "spellName",
            "value": "Uldu",
            "text": "Uldu",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 |cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+b/////P/7/B56d/Pgf+//BwMBAAX4////HAA5w8D4/vK5//////////////////2/Dw///D|h[Leatherworking]|h|r 8/8 ICC 8/8 ToC 6/8 Uldu",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "WTS"
    ],
    "icon": [
      "Spell_Holy_ChampionsGrace"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/r",
            "text": "/r",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "twoje matsy",
            "text": "twoje matsy",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "matsy kup",
            "text": "matsy kup",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "pozycz lub wyfarm",
            "text": "pozycz lub wyfarm",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/r twoje matsy + 50g, matsy kup, pozycz lub wyfarm",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777234"
    ],
    "prefix": [],
    "label": [
      "WTS R"
    ],
    "icon": [
      "Spell_Holy_EmpowerChampion"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "dronin",
            "text": "dronin",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Innervate",
            "text": "Innervate",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=dronin] Innervate",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777245"
    ],
    "prefix": [],
    "label": [
      "FINNER"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "dronin",
            "text": "dronin",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "remove curse",
            "text": "remove curse",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=dronin] remove curse",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777246"
    ],
    "prefix": [],
    "label": [
      "FRC"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "number",
            "value": "17",
            "text": "17",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "ICC",
            "text": "ICC",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "number",
            "value": "25",
            "text": "25",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "numberDecimal",
            "value": "5.5",
            "text": "5.5",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "spellName",
            "value": "extra info",
            "text": "extra info",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run t=3 h=5 d=17 r=\"ICC25\" g=5.5 x=\"extra info\"",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "r",
            "text": "r",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "then z",
            "text": "then z",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "tank",
            "text": "tank",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "spellName",
            "value": "end if h",
            "text": "end if h",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 49,
            "lineBreaks": 0,
            "line": 1,
            "col": 50
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "spellName",
            "value": "then z",
            "text": "then z",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 62,
            "lineBreaks": 0,
            "line": 1,
            "col": 63
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 63,
            "lineBreaks": 0,
            "line": 1,
            "col": 64
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 64,
            "lineBreaks": 0,
            "line": 1,
            "col": 65
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "heal",
            "text": "heal",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "spellName",
            "value": "end if d",
            "text": "end if d",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "spellName",
            "value": "then z",
            "text": "then z",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "spellName",
            "value": "d",
            "text": "d",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          },
          {
            "type": "spellName",
            "value": "dps",
            "text": "dps",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "spellName",
            "value": "end if g",
            "text": "end if g",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 110,
            "lineBreaks": 0,
            "line": 1,
            "col": 111
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "spellName",
            "value": "then z",
            "text": "then z",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 124,
            "lineBreaks": 0,
            "line": 1,
            "col": 125
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 125,
            "lineBreaks": 0,
            "line": 1,
            "col": 126
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "spellName",
            "value": "gs",
            "text": "gs",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 165,
            "lineBreaks": 0,
            "line": 1,
            "col": 166
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 185,
            "lineBreaks": 0,
            "line": 1,
            "col": 186
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 186,
            "lineBreaks": 0,
            "line": 1,
            "col": 187
          },
          {
            "type": "spellName",
            "value": "test",
            "text": "test",
            "offset": 187,
            "lineBreaks": 0,
            "line": 1,
            "col": 188
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 191,
            "lineBreaks": 0,
            "line": 1,
            "col": 192
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 192,
            "lineBreaks": 0,
            "line": 1,
            "col": 193
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 193,
            "lineBreaks": 0,
            "line": 1,
            "col": 194
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run z=r..\" \" if t>0 then z=z..t..\"tank \"end if h>0 then z=z..h..\"heal \"end if d>0 then z=z..d..\"dps \"end if g>0 then z=z..g..\"gs \"end  SendChatMessage(z..x,\"CHANNEL\",nil,GetChannelName(\"test\"))",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2012.12.20/AUTIOCH/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777244"
    ],
    "prefix": [],
    "label": [
      "raid"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Argent Defender CD",
            "text": "Argent Defender CD",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Argent Defender CD",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Argent Defender CD",
            "text": "Argent Defender CD",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw Argent Defender CD",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/w",
            "text": "/w",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Dronin Argent Defender CD",
            "text": "Dronin Argent Defender CD",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/w Dronin Argent Defender CD",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777269"
    ],
    "prefix": [],
    "label": [
      "AD"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cryptic",
            "text": "Cryptic",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Cleanse",
            "text": "Cleanse",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Cryptic] Cleanse",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777266"
    ],
    "prefix": [],
    "label": [
      "C"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cryptic",
            "text": "Cryptic",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellLevel",
            "value": "(Rank 9)",
            "text": "(Rank 9)",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Cryptic] Flash of Light(Rank 9)",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777265"
    ],
    "prefix": [],
    "label": [
      "FoL"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cryptic",
            "text": "Cryptic",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Hand of Freedom",
            "text": "Hand of Freedom",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Cryptic] Hand of Freedom",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777268"
    ],
    "prefix": [],
    "label": [
      "HoF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cryptic",
            "text": "Cryptic",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Hand of protection",
            "text": "Hand of protection",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Cryptic] Hand of protection",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777263"
    ],
    "prefix": [],
    "label": [
      "HoP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cryptic",
            "text": "Cryptic",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Hand of Sacrifice",
            "text": "Hand of Sacrifice",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Cryptic] Hand of Sacrifice",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777264"
    ],
    "prefix": [],
    "label": [
      "HoS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Wisdom",
            "text": "Judgement of Wisdom",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Wisdom",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Wisdom",
            "text": "Judgement of Wisdom",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Wisdom",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 18,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777227",
      "16777359"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "JoW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Charger",
            "text": "Charger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Violet Proto-Drake",
            "text": "Violet Proto-Drake",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Violet Proto-Drake",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castrandom",
            "text": "/castrandom",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Black War Bear",
            "text": "Black War Bear",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "Swift Moonsaber",
            "text": "Swift Moonsaber",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "Swift Brewfest Ram",
            "text": "Swift Brewfest Ram",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "spellName",
            "value": "Black War Steed",
            "text": "Black War Steed",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 109,
            "lineBreaks": 0,
            "line": 1,
            "col": 110
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 110,
            "lineBreaks": 0,
            "line": 1,
            "col": 111
          },
          {
            "type": "spellName",
            "value": "Stormpike Battle Charger",
            "text": "Stormpike Battle Charger",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 135,
            "lineBreaks": 0,
            "line": 1,
            "col": 136
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "spellName",
            "value": "Turbostrider",
            "text": "Turbostrider",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castrandom [nomod,noflyable,nomounted]  Black War Bear, Swift Moonsaber, Swift Brewfest Ram, Black War Steed, Stormpike Battle Charger, Turbostrider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Crusader Aura",
            "text": "Crusader Aura",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mounted] Crusader Aura",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Cryptic",
            "text": "Cryptic",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Sacred Shield",
            "text": "Sacred Shield",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Cryptic] Sacred Shield",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777267"
    ],
    "prefix": [],
    "label": [
      "SS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Suzuke",
            "text": "Suzuke",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Hand of Protection",
            "text": "Hand of Protection",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Suzuke] Hand of Protection",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777270"
    ],
    "prefix": [],
    "label": [
      "TROLL"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Bulwark of the Royal Guard",
            "text": "Bulwark of the Royal Guard",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Bulwark of the Royal Guard",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Bonebreaker Scepter",
            "text": "Bonebreaker Scepter",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Bonebreaker Scepter",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Bulwark of the Royal Guard",
            "text": "Bulwark of the Royal Guard",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Bulwark of the Royal Guard",
        "ambiguous": false
      }
    ],
    "occurences": 12,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777261"
    ],
    "prefix": [],
    "label": [
      "W"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Sinister Strike",
            "text": "Sinister Strike",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Sinister Strike",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "showtooltip",
      "ss"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Eviscerate",
            "text": "Eviscerate",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Stealth",
            "text": "Stealth",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [combat] Eviscerate; Stealth",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nocombat",
            "text": "nocombat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Stealth",
            "text": "Stealth",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nocombat] !Stealth",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "harm",
            "text": "harm",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Eviscerate",
            "text": "Eviscerate",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [combat, harm] Eviscerate",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "noharm",
            "text": "noharm",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Noggenfogger Elixirt",
            "text": "Noggenfogger Elixirt",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [combat, noharm] Noggenfogger Elixirt",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "Evi"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Shadowy Mercenary",
            "text": "Shadowy Mercenary",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Shadowy Mercenary",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /targetlasttarget\n  ^\nUnexpected command token: \"/targetlasttarget\"\n",
        "line": "/targetlasttarget",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt"
    ],
    "id": [
      "106"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Hor"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",5);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Thryllin",
            "text": "Thryllin",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Thryllin\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Icon"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "trousi",
            "text": "trousi",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar trousi",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",1);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt"
    ],
    "id": [
      "114"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Amancik BoW",
            "text": "Amancik BoW",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": "   ",
            "text": "   ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Pirzmak BoM",
            "text": "Pirzmak BoM",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": "    ",
            "text": "    ",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "spellName",
            "value": "Kaevel BoK",
            "text": "Kaevel BoK",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Amancik BoW   Pirzmak BoM    Kaevel BoK",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt"
    ],
    "id": [
      "113"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "Buff"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_1"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "VoA",
            "text": "VoA",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "number",
            "value": "25",
            "text": "25",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "heal",
            "text": "heal",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "number",
            "value": "11",
            "text": "11",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "spellName",
            "value": "dps",
            "text": "dps",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "all na roll",
            "text": "all na roll",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "pve wedle speca",
            "text": "pve wedle speca",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "spellName",
            "value": "pvp wedle klasy",
            "text": "pvp wedle klasy",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "bossy",
            "text": "bossy",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 VoA25 2 heal, 11 dps, all na roll, pve wedle speca, pvp wedle klasy, 2 bossy",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt"
    ],
    "id": [
      "119"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "PL"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_2"
    ]
  },
  {
    "lines": [],
    "occurences": 37,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Hategrinder/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Hategrinder/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Hategrinder/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Hategrinder/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "120",
      "142",
      "143",
      "144",
      "145",
      "146",
      "147",
      "148",
      "149",
      "16777218"
    ],
    "prefix": [
      "$",
      "x"
    ],
    "label": [
      "AW",
      "GBoK",
      "GBoS",
      "Plea",
      "Rule",
      "SS",
      "SoC",
      "SoR",
      "empty",
      "mount"
    ],
    "icon": [
      "Ability_Creature_Cursed_04",
      "Ability_Paladin_BlessedMending",
      "Ability_Paladin_ShieldofVengeance",
      "Ability_Vanish",
      "INV_Misc_QuestionMark",
      "SPELL_HOLY_AVENGINEWRATH",
      "Spell_Holy_Aspiration",
      "Spell_Holy_GreaterBlessingofSanctuary",
      "Spell_Holy_SealOfVengeance",
      "Spell_Magic_GreaterBlessingofKings"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "WG za",
            "text": "WG za",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "nil then h",
            "text": "nil then h",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "spellName",
            "value": "if h",
            "text": "if h",
            "offset": 98,
            "lineBreaks": 0,
            "line": 1,
            "col": 99
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "spellName",
            "value": "if s",
            "text": "if s",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 183,
            "lineBreaks": 0,
            "line": 1,
            "col": 184
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 201,
            "lineBreaks": 0,
            "line": 1,
            "col": 202
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 202,
            "lineBreaks": 0,
            "line": 1,
            "col": 203
          },
          {
            "type": "spellName",
            "value": "GUILD",
            "text": "GUILD",
            "offset": 203,
            "lineBreaks": 0,
            "line": 1,
            "col": 204
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 208,
            "lineBreaks": 0,
            "line": 1,
            "col": 209
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 209,
            "lineBreaks": 0,
            "line": 1,
            "col": 210
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 210,
            "lineBreaks": 0,
            "line": 1,
            "col": 211
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 211,
            "lineBreaks": 0,
            "line": 1,
            "col": 212
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run x=\"WG za \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;SendChatMessage(x,\"GUILD\");end",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt"
    ],
    "id": [
      "132"
    ],
    "prefix": [
      "@"
    ],
    "label": [
      "WGG"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Divine Shield",
            "text": "Divine Shield",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Divine Shield",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt"
    ],
    "id": [
      "131"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "CB"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Repentance",
            "text": "Repentance",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Repentance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Repentance",
            "text": "Repentance",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Repentance",
        "ambiguous": false
      }
    ],
    "occurences": 14,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt"
    ],
    "id": [
      "125",
      "16777341"
    ],
    "prefix": [
      "#",
      "_"
    ],
    "label": [
      "RepF"
    ],
    "icon": [
      "INV_Misc_QuestionMark",
      "Spell_Holy_PrayerOfHealing"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Fel Healthstone",
            "text": "Fel Healthstone",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Fel Healthstone",
        "ambiguous": false
      }
    ],
    "occurences": 9,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "121"
    ],
    "prefix": [],
    "label": [
      "FHS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Eilan",
            "text": "Eilan",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Eilan] Devour Magic",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Eilan/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Eilan/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "devour"
    ],
    "icon": [
      "Spell_Shadow_PainSpike"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/4",
            "text": "/4",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "WTS",
            "text": "WTS",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
            "text": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/4 WTS |cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt"
    ],
    "id": [
      "16777226"
    ],
    "prefix": [],
    "label": [
      "Alch"
    ],
    "icon": [
      "Ability_Creature_Cursed_04"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Rashael",
            "text": "Rashael",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Dispel Magic",
            "text": "Dispel Magic",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Rashael] Dispel Magic",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "D1",
      "aseel"
    ],
    "icon": [
      "Ability_Druid_Flourish",
      "Spell_Shaman_SpiritLink"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Amancik",
            "text": "Amancik",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Dispel Magic",
            "text": "Dispel Magic",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Amancik] Dispel Magic",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777217",
      "16777218",
      "16777219"
    ],
    "prefix": [],
    "label": [
      "D1",
      "D3",
      "dis",
      "dis Amancik"
    ],
    "icon": [
      "INV_Misc_QuestionMark",
      "Spell_Shaman_SpectralTransformation",
      "Spell_Shaman_SpiritLink"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Devouring Plague",
            "text": "Devouring Plague",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Devouring Plague",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "DP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Psychic Scream",
            "text": "Psychic Scream",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Psychic Scream",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "tremor totem",
            "text": "tremor totem",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar tremor totem",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "Fear"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Mind Flay",
            "text": "Mind Flay",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Mind Flay",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nochanneling",
            "text": "nochanneling",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "spellName",
            "value": "Mind Flay",
            "text": "Mind Flay",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "spellName",
            "value": "Mind Flay",
            "text": "Mind Flay",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nochanneling:Mind Flay] Mind Flay",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777218",
      "16777221",
      "16777357"
    ],
    "prefix": [],
    "label": [
      "MF",
      "Mindfly"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Psychic Horror",
            "text": "Psychic Horror",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Psychic Horror",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777220",
      "16777225"
    ],
    "prefix": [],
    "label": [
      "PH",
      "Psychic Horror"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "emote",
            "value": "/pity",
            "text": "/pity",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/pity",
        "ambiguous": false
      }
    ],
    "occurences": 9,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "pity"
    ],
    "icon": [
      "Ability_Ambush"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Silence",
            "text": "Silence",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Silence",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777219",
      "16777224"
    ],
    "prefix": [],
    "label": [
      "Silence",
      "silence"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shadow Word: Death",
            "text": "Shadow Word: Death",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shadow Word: Death",
        "ambiguous": false
      }
    ],
    "occurences": 9,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt"
    ],
    "id": [
      "16777227"
    ],
    "prefix": [],
    "label": [
      "SWD"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Vampiric Touch",
            "text": "Vampiric Touch",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Vampiric Touch",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Icewallow/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Icewallow/macros-cache.txt"
    ],
    "id": [
      "16777223"
    ],
    "prefix": [],
    "label": [
      "VT"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  sztandar\n  ^\nUnexpected spellName token: \"sztandar\"\n",
        "line": "sztandar",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  siatka\n  ^\nUnexpected spellName token: \"siatka\"\n",
        "line": "siatka",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Mindblowing/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "Areny"
    ],
    "icon": [
      "Spell_Nature_Rune"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Arald",
            "text": "Arald",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Dispel magic",
            "text": "Dispel magic",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Arald] Dispel magic",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/Feronis/Mindblowing/macros-cache.txt"
    ],
    "id": [
      "16777230"
    ],
    "prefix": [],
    "label": [
      "DisP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Dagmara BoW",
            "text": "Dagmara BoW",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": "    ",
            "text": "    ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Janny BoK",
            "text": "Janny BoK",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": "    ",
            "text": "    ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "spellName",
            "value": "Velriath BoS",
            "text": "Velriath BoS",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": "       ",
            "text": "       ",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "Warki",
            "text": "Warki",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "space",
            "value": "   ",
            "text": "   ",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "Battle Shout",
            "text": "Battle Shout",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Dagmara BoW    Janny BoK    Velriath BoS       Warki   Battle Shout",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "106"
    ],
    "prefix": [],
    "label": [
      "buff"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_1"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Arcane Blast",
            "text": "Arcane Blast",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Arcane Blast",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Presence of Mind",
            "text": "Presence of Mind",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast !Presence of Mind",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Arcane Blast",
            "text": "Arcane Blast",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Arcane Blast",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777244"
    ],
    "prefix": [],
    "label": [
      "AB"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Arcane Power",
            "text": "Arcane Power",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Arcane Power",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Icy Veins",
            "text": "Icy Veins",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Icy Veins",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "13",
            "text": "13",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 13",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Mirror Image",
            "text": "Mirror Image",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Mirror Image",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.04.18/SOREN619/Feronis/Kerlic/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/SOREN619/Feronis/Kerlic/macros-cache.txt"
    ],
    "id": [
      "16777245"
    ],
    "prefix": [],
    "label": [
      "NUKE"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Charger",
            "text": "Charger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Time-Lost Proto-Drake",
            "text": "Time-Lost Proto-Drake",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Time-Lost Proto-Drake",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Charger",
            "text": "Charger",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Crusader Aura",
            "text": "Crusader Aura",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mounted] Crusader Aura",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51313:450:450:18EED3C9:4//////////7////v/vPpgfAw/2A7sAC7fzz907//f3/H////vT|h[Enchanting]|h|r",
            "text": "|cffffd000|Htrade:51313:450:450:18EED3C9:4//////////7////v/vPpgfAw/2A7sAC7fzz907//f3/H////vT|h[Enchanting]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "spellName",
            "value": "twoje matsy",
            "text": "twoje matsy",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 125,
            "lineBreaks": 0,
            "line": 1,
            "col": 126
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 |cffffd000|Htrade:51313:450:450:18EED3C9:4//////////7////v/vPpgfAw/2A7sAC7fzz907//f3/H////vT|h[Enchanting]|h|r twoje matsy + 50g",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Alard/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Alard/macros-cache.txt"
    ],
    "id": [
      "16777258"
    ],
    "prefix": [],
    "label": [
      "WTS"
    ],
    "icon": [
      "Spell_Holy_ChampionsGrace"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Cleanse",
            "text": "Cleanse",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Cleanse",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777256"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "CE"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Flash of Light",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777257"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "FoLE"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Sacred Shield",
            "text": "Sacred Shield",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Sacred Shield",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777255"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "SSE"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Divine Storm",
            "text": "Divine Storm",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Divine Storm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 14,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt"
    ],
    "id": [
      "141",
      "16777248",
      "16777357"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "DS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/7",
            "text": "/7",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Gildia PvE",
            "text": "Gildia PvE",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Socially Awkward",
            "text": "Socially Awkward",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "poszukuje aktywnych ludzi do stalej grupy raidowej",
            "text": "poszukuje aktywnych ludzi do stalej grupy raidowej",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 85,
            "lineBreaks": 0,
            "line": 1,
            "col": 86
          },
          {
            "type": "spellName",
            "value": "Najwiekszy nacisk kladziemy obecnie na ICC",
            "text": "Najwiekszy nacisk kladziemy obecnie na ICC",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "number",
            "value": "25",
            "text": "25",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "spellName",
            "value": "oraz TOGC",
            "text": "oraz TOGC",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "number",
            "value": "25",
            "text": "25",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "spellName",
            "value": "Wymagamy",
            "text": "Wymagamy",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "spellName",
            "value": "co najmniej",
            "text": "co najmniej",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "spellName",
            "value": "podstawowego ogaru wlasnej klasy oraz GS",
            "text": "podstawowego ogaru wlasnej klasy oraz GS",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 211,
            "lineBreaks": 0,
            "line": 1,
            "col": 212
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "spellName",
            "value": "K",
            "text": "K",
            "offset": 213,
            "lineBreaks": 0,
            "line": 1,
            "col": 214
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 214,
            "lineBreaks": 0,
            "line": 1,
            "col": 215
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 215,
            "lineBreaks": 0,
            "line": 1,
            "col": 216
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 216,
            "lineBreaks": 0,
            "line": 1,
            "col": 217
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 217,
            "lineBreaks": 0,
            "line": 1,
            "col": 218
          },
          {
            "type": "spellName",
            "value": "System DKP",
            "text": "System DKP",
            "offset": 218,
            "lineBreaks": 0,
            "line": 1,
            "col": 219
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 228,
            "lineBreaks": 0,
            "line": 1,
            "col": 229
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 229,
            "lineBreaks": 0,
            "line": 1,
            "col": 230
          },
          {
            "type": "spellName",
            "value": "Zainteresowani",
            "text": "Zainteresowani",
            "offset": 230,
            "lineBreaks": 0,
            "line": 1,
            "col": 231
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 244,
            "lineBreaks": 0,
            "line": 1,
            "col": 245
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 245,
            "lineBreaks": 0,
            "line": 1,
            "col": 246
          },
          {
            "type": "spellName",
            "value": "w me",
            "text": "w me",
            "offset": 246,
            "lineBreaks": 0,
            "line": 1,
            "col": 247
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/7 Gildia PvE \" Socially Awkward\" poszukuje aktywnych ludzi do stalej grupy raidowej. Najwiekszy nacisk kladziemy obecnie na ICC10/25 oraz TOGC 25. Wymagamy (co najmniej) podstawowego ogaru wlasnej klasy oraz GS 5K +. System DKP. Zainteresowani /w me",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777264"
    ],
    "prefix": [],
    "label": [
      "guild"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Hand of Freedom",
            "text": "Hand of Freedom",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Hand of Freedom",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777261",
      "16777269"
    ],
    "prefix": [
      "!",
      "_"
    ],
    "label": [
      "HoF",
      "HoF1",
      "HoF2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Hand of Protection",
            "text": "Hand of Protection",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Hand of Protection",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777254",
      "16777264"
    ],
    "prefix": [
      "!",
      "_"
    ],
    "label": [
      "HoP",
      "HoP1",
      "HoP2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Hand of Sacrifice",
            "text": "Hand of Sacrifice",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Hand of Sacrifice",
        "ambiguous": false
      }
    ],
    "occurences": 11,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777259",
      "16777265"
    ],
    "prefix": [
      "!",
      "_"
    ],
    "label": [
      "HoS",
      "HoS1",
      "HoS2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777247"
    ],
    "prefix": [],
    "label": [
      "HoW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Justice",
            "text": "Judgement of Justice",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Justice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Justice",
            "text": "Judgement of Justice",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Justice",
        "ambiguous": false
      }
    ],
    "occurences": 9,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "144",
      "16777219"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "JoJ"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Judgement of Light",
            "text": "Judgement of Light",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Judgement of Light",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Judgement of Light",
            "text": "Judgement of Light",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Judgement of Light",
        "ambiguous": false
      }
    ],
    "occurences": 9,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "142",
      "16777218"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "JoL"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "emote",
            "value": "/rofl",
            "text": "/rofl",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/rofl",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "emote",
            "value": "/facepalm",
            "text": "/facepalm",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/facepalm",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777262"
    ],
    "prefix": [],
    "label": [
      "lol"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Summon Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Swift Red Wind Rider",
            "text": "Swift Red Wind Rider",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Swift Red Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted]  Summon Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Crusader Aura",
            "text": "Crusader Aura",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mounted] Crusader Aura",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Avenging Wrath",
            "text": "Avenging Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Avenging Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777260"
    ],
    "prefix": [],
    "label": [
      "Nuke"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Aegis of the Coliseum",
            "text": "Aegis of the Coliseum",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Aegis of the Coliseum",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Ardent Guard",
            "text": "Ardent Guard",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Ardent Guard",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Aegis of the Coliseum",
            "text": "Aegis of the Coliseum",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Aegis of the Coliseum",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777263"
    ],
    "prefix": [],
    "label": [
      "s"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shadow Word: Pain",
            "text": "Shadow Word: Pain",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shadow Word: Pain",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Forepray/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Forepray/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Forepray/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Forepray/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "sw:p"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Survival Instincts",
            "text": "Survival Instincts",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Survival Instincts",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Survival Instincts",
            "text": "Survival Instincts",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Survival Instincts",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Lifeblood",
            "text": "Lifeblood",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Lifeblood",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Frenzied Regeneration",
            "text": "Frenzied Regeneration",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Frenzied Regeneration",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt"
    ],
    "id": [
      "16777240"
    ],
    "prefix": [],
    "label": [
      "Survi"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////////////////f|h[Inscription]|h|r",
            "text": "|cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////////////////f|h[Inscription]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "spellName",
            "value": "full",
            "text": "full",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "spellName",
            "value": "wszystkie glify",
            "text": "wszystkie glify",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "number",
            "value": "100",
            "text": "100",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 165,
            "lineBreaks": 0,
            "line": 1,
            "col": 166
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "spellName",
            "value": "szt",
            "text": "szt",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "spellName",
            "value": "mam tez",
            "text": "mam tez",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "linkEnchant",
            "value": "|cffffd000|Henchant:64051|h[Inscription: Rituals of the New Moon]|h|r",
            "text": "|cffffd000|Henchant:64051|h[Inscription: Rituals of the New Moon]|h|r",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 |cffffd000|Htrade:45363:450:450:18F194CA:g////7////3///////////////////////////////////////////////////////////////f|h[Inscription]|h|r full - wszystkie glify 100g/szt, mam tez |cffffd000|Henchant:64051|h[Inscription: Rituals of the New Moon]|h|r",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt"
    ],
    "id": [
      "16777239"
    ],
    "prefix": [],
    "label": [
      "WTS"
    ],
    "icon": [
      "Spell_Holy_ProclaimChampion"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Death Gate",
            "text": "Death Gate",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Death Gate",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Hearthstone",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Hategrinder/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Hategrinder/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Hategrinder/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Hategrinder/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Eviscerate",
            "text": "Eviscerate",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Stealth",
            "text": "Stealth",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [combat] Eviscerate; Stealth",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nocombat",
            "text": "nocombat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Stealth",
            "text": "Stealth",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nocombat] !Stealth",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "harm",
            "text": "harm",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Cold Blood",
            "text": "Cold Blood",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [combat, harm] Cold Blood",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "harm",
            "text": "harm",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Eviscerate",
            "text": "Eviscerate",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [combat, harm] Eviscerate",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "combat",
            "text": "combat",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "noharm",
            "text": "noharm",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Noggenfogger Elixirt",
            "text": "Noggenfogger Elixirt",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [combat, noharm] Noggenfogger Elixirt",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777220"
    ],
    "prefix": [],
    "label": [
      "Env"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Mutilate",
            "text": "Mutilate",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Mutilate",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "Mut"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Angrylock",
            "text": "Angrylock",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Cure Toxins",
            "text": "Cure Toxins",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Angrylock] Cure Toxins",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777235"
    ],
    "prefix": [],
    "label": [
      "CureP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Angrylock",
            "text": "Angrylock",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Gift of the Naaru",
            "text": "Gift of the Naaru",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Angrylock] Gift of the Naaru",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777231"
    ],
    "prefix": [],
    "label": [
      "GiftP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  #\n  ^\nUnexpected unknown token: \"#\"\n",
        "line": "#showtoolip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Nature's Swiftness",
            "text": "Nature's Swiftness",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Nature's Swiftness",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Tidal Force",
            "text": "Tidal Force",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Tidal Force",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Healing Wave",
            "text": "Healing Wave",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Healing Wave",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777239"
    ],
    "prefix": [],
    "label": [
      "IN"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Black War Tiger",
            "text": "Black War Tiger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Black War Tiger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Swift Blue Gryphon",
            "text": "Swift Blue Gryphon",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Swift Blue Gryphon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Black War Tiger",
            "text": "Black War Tiger",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Black War Tiger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Black War Tiger",
            "text": "Black War Tiger",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Black War Tiger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  |cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r\n  ^\nUnexpected linkProfession token: \"|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r\"\n",
        "line": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777241"
    ],
    "prefix": [],
    "label": [
      "test"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/4",
            "text": "/4",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
            "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "spellName",
            "value": "wszystkie przepisy WotLK",
            "text": "wszystkie przepisy WotLK",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/4 |cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r wszystkie przepisy WotLK",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "WTS"
    ],
    "icon": [
      "Spell_Holy_ChampionsGrace"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "rz",
            "text": "rz",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "GetRealZoneText",
            "text": "GetRealZoneText",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "z",
            "text": "z",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "spellName",
            "value": "GetZoneText",
            "text": "GetZoneText",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "spellName",
            "value": "sz",
            "text": "sz",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "spellName",
            "value": "GetSubZoneText",
            "text": "GetSubZoneText",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 62,
            "lineBreaks": 0,
            "line": 1,
            "col": 63
          },
          {
            "type": "spellName",
            "value": "mz",
            "text": "mz",
            "offset": 63,
            "lineBreaks": 0,
            "line": 1,
            "col": 64
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "GetMinimapZoneText",
            "text": "GetMinimapZoneText",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 85,
            "lineBreaks": 0,
            "line": 1,
            "col": 86
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
            "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run  rz=GetRealZoneText();z=GetZoneText();sz=GetSubZoneText();mz=GetMinimapZoneText();|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777240"
    ],
    "prefix": [],
    "label": [
      "WTS new"
    ],
    "icon": [
      "Ability_Hunter_ExplosiveShot"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/r",
            "text": "/r",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "robota Uldu",
            "text": "robota Uldu",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "number",
            "value": "226",
            "text": "226",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "number",
            "value": "100",
            "text": "100",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Toc",
            "text": "Toc",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "number",
            "value": "245",
            "text": "245",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "number",
            "value": "200",
            "text": "200",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "spellName",
            "value": "Icc",
            "text": "Icc",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "number",
            "value": "264",
            "text": "264",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "number",
            "value": "400",
            "text": "400",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "spellName",
            "value": "reszta",
            "text": "reszta",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "spellName",
            "value": "tylko Twoje matsy",
            "text": "tylko Twoje matsy",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "spellName",
            "value": "kup",
            "text": "kup",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "spellName",
            "value": "pozycz lub wyfarm",
            "text": "pozycz lub wyfarm",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/r robota Uldu (226) 100g, Toc (245) 200g, Icc (264) 400g, reszta 50g; tylko Twoje matsy - kup, pozycz lub wyfarm",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777234"
    ],
    "prefix": [],
    "label": [
      "WTS R"
    ],
    "icon": [
      "Spell_Holy_EmpowerChampion"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Flight Form",
            "text": "Swift Flight Form",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellMode",
            "value": "(Shapeshift)",
            "text": "(Shapeshift)",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Flight Form(Shapeshift)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "Swift Flight Form",
            "text": "Swift Flight Form",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellMode",
            "value": "(Shapeshift)",
            "text": "(Shapeshift)",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable, nomounted] Swift Flight Form(Shapeshift)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "Swift Red Hawkstrider",
            "text": "Swift Red Hawkstrider",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable, nomounted] Swift Red Hawkstrider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Black Drake",
            "text": "Black Drake",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Black Drake",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "CastSpellByName",
            "text": "CastSpellByName",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Blacksmithing",
            "text": "Blacksmithing",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "IsModifiedClick",
            "text": "IsModifiedClick",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "spellName",
            "value": "CloseTradeSkill",
            "text": "CloseTradeSkill",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "spellName",
            "value": "GetTradeSkillListLink",
            "text": "GetTradeSkillListLink",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "jestem w",
            "text": "jestem w",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "spellName",
            "value": "GetZoneText",
            "text": "GetZoneText",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 183,
            "lineBreaks": 0,
            "line": 1,
            "col": 184
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 198,
            "lineBreaks": 0,
            "line": 1,
            "col": 199
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "spellName",
            "value": "handel",
            "text": "handel",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 206,
            "lineBreaks": 0,
            "line": 1,
            "col": 207
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 207,
            "lineBreaks": 0,
            "line": 1,
            "col": 208
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 208,
            "lineBreaks": 0,
            "line": 1,
            "col": 209
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 209,
            "lineBreaks": 0,
            "line": 1,
            "col": 210
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 210,
            "lineBreaks": 0,
            "line": 1,
            "col": 211
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 211,
            "lineBreaks": 0,
            "line": 1,
            "col": 212
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 215,
            "lineBreaks": 0,
            "line": 1,
            "col": 216
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 216,
            "lineBreaks": 0,
            "line": 1,
            "col": 217
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 220,
            "lineBreaks": 0,
            "line": 1,
            "col": 221
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 221,
            "lineBreaks": 0,
            "line": 1,
            "col": 222
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 222,
            "lineBreaks": 0,
            "line": 1,
            "col": 223
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 226,
            "lineBreaks": 0,
            "line": 1,
            "col": 227
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 227,
            "lineBreaks": 0,
            "line": 1,
            "col": 228
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 228,
            "lineBreaks": 0,
            "line": 1,
            "col": 229
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 229,
            "lineBreaks": 0,
            "line": 1,
            "col": 230
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 235,
            "lineBreaks": 0,
            "line": 1,
            "col": 236
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 236,
            "lineBreaks": 0,
            "line": 1,
            "col": 237
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 237,
            "lineBreaks": 0,
            "line": 1,
            "col": 238
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 238,
            "lineBreaks": 0,
            "line": 1,
            "col": 239
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 239,
            "lineBreaks": 0,
            "line": 1,
            "col": 240
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 240,
            "lineBreaks": 0,
            "line": 1,
            "col": 241
          },
          {
            "type": "spellName",
            "value": "GUILD",
            "text": "GUILD",
            "offset": 241,
            "lineBreaks": 0,
            "line": 1,
            "col": 242
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 246,
            "lineBreaks": 0,
            "line": 1,
            "col": 247
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 247,
            "lineBreaks": 0,
            "line": 1,
            "col": 248
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 248,
            "lineBreaks": 0,
            "line": 1,
            "col": 249
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 249,
            "lineBreaks": 0,
            "line": 1,
            "col": 250
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 250,
            "lineBreaks": 0,
            "line": 1,
            "col": 251
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 251,
            "lineBreaks": 0,
            "line": 1,
            "col": 252
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run CastSpellByName(\"Blacksmithing\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" jestem w \"..GetZoneText(),\"CHANNEL\",nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777251"
    ],
    "prefix": [],
    "label": [
      "WBS"
    ],
    "icon": [
      "Ability_Repair"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "CastSpellByName",
            "text": "CastSpellByName",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "IsModifiedClick",
            "text": "IsModifiedClick",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "spellName",
            "value": "CloseTradeSkill",
            "text": "CloseTradeSkill",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "spellName",
            "value": "GetTradeSkillListLink",
            "text": "GetTradeSkillListLink",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "gem",
            "text": "gem",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "spellName",
            "value": "g w",
            "text": "g w",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "spellName",
            "value": "GetZoneText",
            "text": "GetZoneText",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 181,
            "lineBreaks": 0,
            "line": 1,
            "col": 182
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 185,
            "lineBreaks": 0,
            "line": 1,
            "col": 186
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "spellName",
            "value": "handel",
            "text": "handel",
            "offset": 201,
            "lineBreaks": 0,
            "line": 1,
            "col": 202
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 207,
            "lineBreaks": 0,
            "line": 1,
            "col": 208
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 208,
            "lineBreaks": 0,
            "line": 1,
            "col": 209
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 209,
            "lineBreaks": 0,
            "line": 1,
            "col": 210
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 210,
            "lineBreaks": 0,
            "line": 1,
            "col": 211
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 211,
            "lineBreaks": 0,
            "line": 1,
            "col": 212
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 213,
            "lineBreaks": 0,
            "line": 1,
            "col": 214
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 216,
            "lineBreaks": 0,
            "line": 1,
            "col": 217
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 217,
            "lineBreaks": 0,
            "line": 1,
            "col": 218
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 221,
            "lineBreaks": 0,
            "line": 1,
            "col": 222
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 222,
            "lineBreaks": 0,
            "line": 1,
            "col": 223
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 223,
            "lineBreaks": 0,
            "line": 1,
            "col": 224
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 227,
            "lineBreaks": 0,
            "line": 1,
            "col": 228
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 228,
            "lineBreaks": 0,
            "line": 1,
            "col": 229
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 229,
            "lineBreaks": 0,
            "line": 1,
            "col": 230
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 230,
            "lineBreaks": 0,
            "line": 1,
            "col": 231
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 236,
            "lineBreaks": 0,
            "line": 1,
            "col": 237
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 237,
            "lineBreaks": 0,
            "line": 1,
            "col": 238
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 238,
            "lineBreaks": 0,
            "line": 1,
            "col": 239
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 239,
            "lineBreaks": 0,
            "line": 1,
            "col": 240
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 240,
            "lineBreaks": 0,
            "line": 1,
            "col": 241
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 241,
            "lineBreaks": 0,
            "line": 1,
            "col": 242
          },
          {
            "type": "spellName",
            "value": "GUILD",
            "text": "GUILD",
            "offset": 242,
            "lineBreaks": 0,
            "line": 1,
            "col": 243
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 247,
            "lineBreaks": 0,
            "line": 1,
            "col": 248
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 248,
            "lineBreaks": 0,
            "line": 1,
            "col": 249
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 249,
            "lineBreaks": 0,
            "line": 1,
            "col": 250
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 250,
            "lineBreaks": 0,
            "line": 1,
            "col": 251
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 251,
            "lineBreaks": 0,
            "line": 1,
            "col": 252
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 252,
            "lineBreaks": 0,
            "line": 1,
            "col": 253
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run CastSpellByName(\"Jewelcrafting\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" gem+50g w \"..GetZoneText(),\"CHANNEL\",nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777249"
    ],
    "prefix": [],
    "label": [
      "WTJC"
    ],
    "icon": [
      "Ability_Druid_Typhoon"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/r",
            "text": "/r",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "JC twoj gem",
            "text": "JC twoj gem",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "BS od",
            "text": "BS od",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "spellName",
            "value": "do",
            "text": "do",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "number",
            "value": "400",
            "text": "400",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/r JC twoj gem + 50g; BS od 50 do 400g",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777252"
    ],
    "prefix": [],
    "label": [
      "WTR"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",5);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Bowjob",
            "text": "Bowjob",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Bowjob\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Icon"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Busted",
            "text": "Busted",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Busted",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",1);",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt"
    ],
    "id": [
      "114"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "buffy",
            "text": "buffy",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "spellName",
            "value": "aury",
            "text": "aury",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": "   ",
            "text": "   ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Janji BoM",
            "text": "Janji BoM",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "BoW",
            "text": "BoW",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "conc",
            "text": "conc",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": "    ",
            "text": "    ",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "spellName",
            "value": "Amancik BoK",
            "text": "Amancik BoK",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "spellName",
            "value": "fire",
            "text": "fire",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "frost",
            "text": "frost",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra buffy,aury:   Janji BoM/BoW,conc    Amancik BoK,fire/frost",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt"
    ],
    "id": [
      "113"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "Buff"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_1"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "VoA",
            "text": "VoA",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "number",
            "value": "25",
            "text": "25",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "heal",
            "text": "heal",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "druid",
            "text": "druid",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "tank",
            "text": "tank",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "war",
            "text": "war",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "spellName",
            "value": "all na roll",
            "text": "all na roll",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "bossy",
            "text": "bossy",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          },
          {
            "type": "spellName",
            "value": "czekamy pod fire",
            "text": "czekamy pod fire",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 VoA25 1 heal (druid), 1 tank (war), all na roll, 2 bossy, czekamy pod fire",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt"
    ],
    "id": [
      "119"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "PL"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_2"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": "    ",
            "text": "    ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Soulstones",
            "text": "Soulstones",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": "     ",
            "text": "     ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Antie",
            "text": "Antie",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "spellName",
            "value": "Roegnar",
            "text": "Roegnar",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Tori",
            "text": "Tori",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "Amancik",
            "text": "Amancik",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 52,
            "lineBreaks": 0,
            "line": 1,
            "col": 53
          },
          {
            "type": "spellName",
            "value": "Skrzypa",
            "text": "Skrzypa",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 61,
            "lineBreaks": 0,
            "line": 1,
            "col": 62
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 62,
            "lineBreaks": 0,
            "line": 1,
            "col": 63
          },
          {
            "type": "spellName",
            "value": "Irong",
            "text": "Irong",
            "offset": 63,
            "lineBreaks": 0,
            "line": 1,
            "col": 64
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "spellName",
            "value": "Agloval",
            "text": "Agloval",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "dash",
            "value": "-",
            "text": "-",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "spellName",
            "value": "Kaevel",
            "text": "Kaevel",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra    Soulstones:     Antie->Roegnar  Tori->Amancik  Skrzypa->Irong  Agloval->Kaevel",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "120"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "Rule"
    ],
    "icon": [
      "Ability_Creature_Cursed_04"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Divine Shield",
            "text": "Divine Shield",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Divine Shield",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Divine Shield",
            "text": "Divine Shield",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Divine Shield",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "131"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "CB"
    ],
    "icon": [
      "Ability_DualWieldSpecialization"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/afk",
            "text": "/afk",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/afk",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt"
    ],
    "id": [
      "137"
    ],
    "prefix": [],
    "label": [
      "afk"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Warts-B-Gone Lip Balm",
            "text": "Warts-B-Gone Lip Balm",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Warts-B-Gone Lip Balm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Lake Frog",
            "text": "Lake Frog",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Lake Frog",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "emote",
            "value": "/kiss",
            "text": "/kiss",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/kiss",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "133",
      "158"
    ],
    "prefix": [],
    "label": [
      "KISS",
      "frog"
    ],
    "icon": [
      "INV_Misc_QuestionMark",
      "Spell_Shaman_Hex"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "7",
            "text": "7",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",7);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Khuunem",
            "text": "Khuunem",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Khuunem\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.06.06/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [],
    "label": [
      "IconP"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Innervate",
            "text": "Innervate",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Innervate",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777245"
    ],
    "prefix": [],
    "label": [
      "FINNER"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "remove curse",
            "text": "remove curse",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] remove curse",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777246"
    ],
    "prefix": [],
    "label": [
      "FRC"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/3",
            "text": "/3",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51311:450:450:18ED0F37:8//3v+NtNzjpvMHBAEcwHIBEh/Jg/vBEAAAAAg+RAAAA6////////f//PjaW1wvR2PH5i39nbIC+/D8Po/v/+///////r3D|h[Jewelcrafting]|h|r",
            "text": "|cffffd000|Htrade:51311:450:450:18ED0F37:8//3v+NtNzjpvMHBAEcwHIBEh/Jg/vBEAAAAAg+RAAAA6////////f//PjaW1wvR2PH5i39nbIC+/D8Po/v/+///////r3D|h[Jewelcrafting]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "spellName",
            "value": "FULL",
            "text": "FULL",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 165,
            "lineBreaks": 0,
            "line": 1,
            "col": 166
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 166,
            "lineBreaks": 0,
            "line": 1,
            "col": 167
          },
          {
            "type": "spellName",
            "value": "gem",
            "text": "gem",
            "offset": 167,
            "lineBreaks": 0,
            "line": 1,
            "col": 168
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "number",
            "value": "40",
            "text": "40",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/3 |cffffd000|Htrade:51311:450:450:18ED0F37:8//3v+NtNzjpvMHBAEcwHIBEh/Jg/vBEAAAAAg+RAAAA6////////f//PjaW1wvR2PH5i39nbIC+/D8Po/v/+///////r3D|h[Jewelcrafting]|h|r FULL, gem +40g",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777253"
    ],
    "prefix": [],
    "label": [
      "JC"
    ],
    "icon": [
      "Ability_GolemStormBolt"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "CastSpellByName",
            "text": "CastSpellByName",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Weaponsmith",
            "text": "Weaponsmith",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "IsModifiedClick",
            "text": "IsModifiedClick",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "CloseTradeSkill",
            "text": "CloseTradeSkill",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "spellName",
            "value": "GetTradeSkillListLink",
            "text": "GetTradeSkillListLink",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 125,
            "lineBreaks": 0,
            "line": 1,
            "col": 126
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 135,
            "lineBreaks": 0,
            "line": 1,
            "col": 136
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "number",
            "value": "6",
            "text": "6",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "number",
            "value": "6",
            "text": "6",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "spellName",
            "value": "ICC",
            "text": "ICC",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "number",
            "value": "6",
            "text": "6",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "number",
            "value": "6",
            "text": "6",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "spellName",
            "value": "ToC",
            "text": "ToC",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 188,
            "lineBreaks": 0,
            "line": 1,
            "col": 189
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          },
          {
            "type": "spellName",
            "value": "handel",
            "text": "handel",
            "offset": 190,
            "lineBreaks": 0,
            "line": 1,
            "col": 191
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 196,
            "lineBreaks": 0,
            "line": 1,
            "col": 197
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 197,
            "lineBreaks": 0,
            "line": 1,
            "col": 198
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 198,
            "lineBreaks": 0,
            "line": 1,
            "col": 199
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 201,
            "lineBreaks": 0,
            "line": 1,
            "col": 202
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 202,
            "lineBreaks": 0,
            "line": 1,
            "col": 203
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 205,
            "lineBreaks": 0,
            "line": 1,
            "col": 206
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 206,
            "lineBreaks": 0,
            "line": 1,
            "col": 207
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 210,
            "lineBreaks": 0,
            "line": 1,
            "col": 211
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 211,
            "lineBreaks": 0,
            "line": 1,
            "col": 212
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 216,
            "lineBreaks": 0,
            "line": 1,
            "col": 217
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 217,
            "lineBreaks": 0,
            "line": 1,
            "col": 218
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 218,
            "lineBreaks": 0,
            "line": 1,
            "col": 219
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 219,
            "lineBreaks": 0,
            "line": 1,
            "col": 220
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 225,
            "lineBreaks": 0,
            "line": 1,
            "col": 226
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 226,
            "lineBreaks": 0,
            "line": 1,
            "col": 227
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 227,
            "lineBreaks": 0,
            "line": 1,
            "col": 228
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 228,
            "lineBreaks": 0,
            "line": 1,
            "col": 229
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 229,
            "lineBreaks": 0,
            "line": 1,
            "col": 230
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 230,
            "lineBreaks": 0,
            "line": 1,
            "col": 231
          },
          {
            "type": "spellName",
            "value": "GUILD",
            "text": "GUILD",
            "offset": 231,
            "lineBreaks": 0,
            "line": 1,
            "col": 232
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 236,
            "lineBreaks": 0,
            "line": 1,
            "col": 237
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 237,
            "lineBreaks": 0,
            "line": 1,
            "col": 238
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 238,
            "lineBreaks": 0,
            "line": 1,
            "col": 239
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 239,
            "lineBreaks": 0,
            "line": 1,
            "col": 240
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 240,
            "lineBreaks": 0,
            "line": 1,
            "col": 241
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 241,
            "lineBreaks": 0,
            "line": 1,
            "col": 242
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run CastSpellByName(\"Weaponsmith\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" 6/6 ICC, 6/6 ToC\",\"CHANNEL\",nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777254"
    ],
    "prefix": [],
    "label": [
      "WTBS"
    ],
    "icon": [
      "Ability_Repair"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "CastSpellByName",
            "text": "CastSpellByName",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Jewelcrafting",
            "text": "Jewelcrafting",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "IsModifiedClick",
            "text": "IsModifiedClick",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "spellName",
            "value": "SendChatMessage",
            "text": "SendChatMessage",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 75,
            "lineBreaks": 0,
            "line": 1,
            "col": 76
          },
          {
            "type": "spellName",
            "value": "CloseTradeSkill",
            "text": "CloseTradeSkill",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "spellName",
            "value": "GetTradeSkillListLink",
            "text": "GetTradeSkillListLink",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 130,
            "lineBreaks": 0,
            "line": 1,
            "col": 131
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 139,
            "lineBreaks": 0,
            "line": 1,
            "col": 140
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "FULL",
            "text": "FULL",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "spellName",
            "value": "gem",
            "text": "gem",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 153,
            "lineBreaks": 0,
            "line": 1,
            "col": 154
          },
          {
            "type": "number",
            "value": "40",
            "text": "40",
            "offset": 154,
            "lineBreaks": 0,
            "line": 1,
            "col": 155
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 157,
            "lineBreaks": 0,
            "line": 1,
            "col": 158
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "spellName",
            "value": "CHANNEL",
            "text": "CHANNEL",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 168,
            "lineBreaks": 0,
            "line": 1,
            "col": 169
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "nil",
            "text": "nil",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "spellName",
            "value": "GetChannelName",
            "text": "GetChannelName",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 188,
            "lineBreaks": 0,
            "line": 1,
            "col": 189
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          },
          {
            "type": "spellName",
            "value": "handel",
            "text": "handel",
            "offset": 190,
            "lineBreaks": 0,
            "line": 1,
            "col": 191
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 196,
            "lineBreaks": 0,
            "line": 1,
            "col": 197
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 197,
            "lineBreaks": 0,
            "line": 1,
            "col": 198
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 198,
            "lineBreaks": 0,
            "line": 1,
            "col": 199
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 199,
            "lineBreaks": 0,
            "line": 1,
            "col": 200
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 200,
            "lineBreaks": 0,
            "line": 1,
            "col": 201
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 201,
            "lineBreaks": 0,
            "line": 1,
            "col": 202
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 202,
            "lineBreaks": 0,
            "line": 1,
            "col": 203
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 205,
            "lineBreaks": 0,
            "line": 1,
            "col": 206
          },
          {
            "type": "spellName",
            "value": "if i",
            "text": "if i",
            "offset": 206,
            "lineBreaks": 0,
            "line": 1,
            "col": 207
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 210,
            "lineBreaks": 0,
            "line": 1,
            "col": 211
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 211,
            "lineBreaks": 0,
            "line": 1,
            "col": 212
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 212,
            "lineBreaks": 0,
            "line": 1,
            "col": 213
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 216,
            "lineBreaks": 0,
            "line": 1,
            "col": 217
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 217,
            "lineBreaks": 0,
            "line": 1,
            "col": 218
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 218,
            "lineBreaks": 0,
            "line": 1,
            "col": 219
          },
          {
            "type": "spellName",
            "value": "then s",
            "text": "then s",
            "offset": 219,
            "lineBreaks": 0,
            "line": 1,
            "col": 220
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 225,
            "lineBreaks": 0,
            "line": 1,
            "col": 226
          },
          {
            "type": "spellName",
            "value": "g",
            "text": "g",
            "offset": 226,
            "lineBreaks": 0,
            "line": 1,
            "col": 227
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 227,
            "lineBreaks": 0,
            "line": 1,
            "col": 228
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 228,
            "lineBreaks": 0,
            "line": 1,
            "col": 229
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 229,
            "lineBreaks": 0,
            "line": 1,
            "col": 230
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 230,
            "lineBreaks": 0,
            "line": 1,
            "col": 231
          },
          {
            "type": "spellName",
            "value": "GUILD",
            "text": "GUILD",
            "offset": 231,
            "lineBreaks": 0,
            "line": 1,
            "col": 232
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 236,
            "lineBreaks": 0,
            "line": 1,
            "col": 237
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 237,
            "lineBreaks": 0,
            "line": 1,
            "col": 238
          },
          {
            "type": "spellName",
            "value": "c",
            "text": "c",
            "offset": 238,
            "lineBreaks": 0,
            "line": 1,
            "col": 239
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 239,
            "lineBreaks": 0,
            "line": 1,
            "col": 240
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 240,
            "lineBreaks": 0,
            "line": 1,
            "col": 241
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 241,
            "lineBreaks": 0,
            "line": 1,
            "col": 242
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run CastSpellByName(\"Jewelcrafting\");i=IsModifiedClick;s=SendChatMessage;c=CloseTradeSkill;g=GetTradeSkillListLink;if i(\"shift\") then s(g()..\" FULL, gem+40g\" ,\"CHANNEL\",nil,GetChannelName(\"handel\"))c()end;if i(\"ctrl\") then s(g(),\"GUILD\")c()end",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Thornstar/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Thornstar/macros-cache.txt"
    ],
    "id": [
      "16777249"
    ],
    "prefix": [],
    "label": [
      "WTJC"
    ],
    "icon": [
      "Ability_Druid_Typhoon"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",5);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Fiervina",
            "text": "Fiervina",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Fiervina\",8);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Crab",
            "text": "Crab",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Crab\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Icon"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Holiinaf",
            "text": "Holiinaf",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Holiinaf",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "114"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Janji BoW",
            "text": "Janji BoW",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "BoK",
            "text": "BoK",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "spellName",
            "value": "Conc",
            "text": "Conc",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Janji BoW/BoK + Conc",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Bloodmaks BoS",
            "text": "Bloodmaks BoS",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "spellName",
            "value": "Devo",
            "text": "Devo",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Bloodmaks BoS + Devo",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Morgoph",
            "text": "Morgoph",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "BoM",
            "text": "BoM",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "BoK",
            "text": "BoK",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "unknown",
            "value": "+",
            "text": "+",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Retri",
            "text": "Retri",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Morgoph  BoM/BoK + Retri",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "113"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "Buff"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_1"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/2",
            "text": "/2",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Icc",
            "text": "Icc",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "guild run",
            "text": "guild run",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "heal",
            "text": "heal",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "szam",
            "text": "szam",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "bossy hc",
            "text": "bossy hc",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "spellName",
            "value": "reszta az do LK na normalu",
            "text": "reszta az do LK na normalu",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 73,
            "lineBreaks": 0,
            "line": 1,
            "col": 74
          },
          {
            "type": "spellName",
            "value": "bijemy mniej wiecej do",
            "text": "bijemy mniej wiecej do",
            "offset": 74,
            "lineBreaks": 0,
            "line": 1,
            "col": 75
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 96,
            "lineBreaks": 0,
            "line": 1,
            "col": 97
          },
          {
            "type": "number",
            "value": "23",
            "text": "23",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 99,
            "lineBreaks": 0,
            "line": 1,
            "col": 100
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 100,
            "lineBreaks": 0,
            "line": 1,
            "col": 101
          },
          {
            "type": "spellName",
            "value": "ALL NA ROLL",
            "text": "ALL NA ROLL",
            "offset": 101,
            "lineBreaks": 0,
            "line": 1,
            "col": 102
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "spellName",
            "value": "wymagany TS",
            "text": "wymagany TS",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/2 Icc10 guild run 1 heal (szam), 4 bossy hc, reszta az do LK na normalu, bijemy mniej wiecej do 23, ALL NA ROLL, wymagany TS",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "119"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "PL"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_2"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Quenth",
            "text": "Quenth",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Cleanse",
            "text": "Cleanse",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Quenth] Cleanse",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "135"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "C2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Quenth",
            "text": "Quenth",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Quenth] Flash of Light",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "136"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "FoL2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Chcesz rajdowac z gildia",
            "text": "Chcesz rajdowac z gildia",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "unknown",
            "value": "?",
            "text": "?",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g Chcesz rajdowac z gildia?",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Zapraszamy na strone",
            "text": "Zapraszamy na strone",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g Zapraszamy na strone:",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "praetorianssunwell",
            "text": "praetorianssunwell",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "cba",
            "text": "cba",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "pl",
            "text": "pl",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g x.praetorianssunwell.cba.pl",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "W newsach mozna znalezc link do ankiety dotyczacej rajdow",
            "text": "W newsach mozna znalezc link do ankiety dotyczacej rajdow",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g W newsach mozna znalezc link do ankiety dotyczacej rajdow.",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "138"
    ],
    "prefix": [],
    "label": [
      "An1"
    ],
    "icon": [
      "Ability_Mage_LivingBomb"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Odwracajac uwage od papierow",
            "text": "Odwracajac uwage od papierow",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "spellName",
            "value": "chcialbym wszystkim zaintersowanym rajdowaniem z gildia przypomniec o wypelnieniu ankiety dostepnej na naszej stronie",
            "text": "chcialbym wszystkim zaintersowanym rajdowaniem z gildia przypomniec o wypelnieniu ankiety dostepnej na naszej stronie",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g Odwracajac uwage od papierow, chcialbym wszystkim zaintersowanym rajdowaniem z gildia przypomniec o wypelnieniu ankiety dostepnej na naszej stronie:",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "praetorianssunwell",
            "text": "praetorianssunwell",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "cba",
            "text": "cba",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "pl",
            "text": "pl",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g x.praetorianssunwell.cba.pl",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/g",
            "text": "/g",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Link do ankiety mozna znalesc w newsach",
            "text": "Link do ankiety mozna znalesc w newsach",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/g Link do ankiety mozna znalesc w newsach.",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "139"
    ],
    "prefix": [],
    "label": [
      "An2"
    ],
    "icon": [
      "ABILITY_MAGE_INVISIBILITY"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "for i",
            "text": "for i",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "GetMerchantNumItems",
            "text": "GetMerchantNumItems",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "do local l",
            "text": "do local l",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "spellName",
            "value": "GetMerchantItemLink",
            "text": "GetMerchantItemLink",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "spellName",
            "value": "if l then if l",
            "text": "if l then if l",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "spellName",
            "value": "find",
            "text": "find",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "Devout Candle",
            "text": "Devout Candle",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "spellName",
            "value": "then BuyMerchantItem",
            "text": "then BuyMerchantItem",
            "offset": 106,
            "lineBreaks": 0,
            "line": 1,
            "col": 107
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 128,
            "lineBreaks": 0,
            "line": 1,
            "col": 129
          },
          {
            "type": "number",
            "value": "100",
            "text": "100",
            "offset": 129,
            "lineBreaks": 0,
            "line": 1,
            "col": 130
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "spellName",
            "value": "end end end",
            "text": "end end end",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run for i=1,GetMerchantNumItems() do local l=GetMerchantItemLink(i) if l then if l:find(\"Devout Candle\") then BuyMerchantItem(i,100)end end end",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "137"
    ],
    "prefix": [],
    "label": [
      "Vendor"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/s",
            "text": "/s",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "Another One Bites By Dusst",
            "text": "Another One Bites By Dusst",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/s Another One Bites By Dusst",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/Feronis/Dusst/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "Another"
    ],
    "icon": [
      "Ability_Creature_Cursed_05"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Summon Gargoyle",
            "text": "Summon Gargoyle",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Summon Gargoyle",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "14",
            "text": "14",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 14",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Summon Gargoyle",
            "text": "Summon Gargoyle",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Summon Gargoyle",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Dusst/macros-cache.txt"
    ],
    "id": [
      "16777220"
    ],
    "prefix": [],
    "label": [
      "Gargulec"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  /petattack\n  ^\nUnexpected command token: \"/petattack\"\n",
        "line": "/petattack",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "16777217",
      "87"
    ],
    "prefix": [],
    "label": [
      "Pet"
    ],
    "icon": [
      "Ability_Creature_Disease_05",
      "Spell_Misc_EmotionSad"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/petfollow",
            "text": "/petfollow",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/petfollow",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Dusst/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "Pet2"
    ],
    "icon": [
      "Ability_Creature_Cursed_03"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/3",
            "text": "/3",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "WTS",
            "text": "WTS",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
            "text": "|cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/3 WTS |cffffd000|Htrade:51304:450:450:18FA5CBC:2//n+x/3/Vd/vAMEgEADpCAAAEA/oAC/7///Du/P+//v|h[Alchemy]|h|r",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777226"
    ],
    "prefix": [],
    "label": [
      "Alch"
    ],
    "icon": [
      "Ability_Creature_Cursed_04"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Quenth",
            "text": "Quenth",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Dispel Magic",
            "text": "Dispel Magic",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Quenth] Dispel Magic",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "D2"
    ],
    "icon": [
      "Spell_Shaman_ElementalOath"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Dispersion",
            "text": "Dispersion",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Dispersion",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777231"
    ],
    "prefix": [],
    "label": [
      "Dispersion"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Devouring Plague",
            "text": "Devouring Plague",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Devouring Plague",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777222"
    ],
    "prefix": [],
    "label": [
      "DP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Psychic Scream",
            "text": "Psychic Scream",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Psychic Scream",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "tremor totem",
            "text": "tremor totem",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar tremor totem",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777228"
    ],
    "prefix": [],
    "label": [
      "Fear"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Ebon Gargoyle",
            "text": "Ebon Gargoyle",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "spellName",
            "value": "Shackle Undead",
            "text": "Shackle Undead",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Ebon Gargoyle] Shackle Undead",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777222",
      "16777232"
    ],
    "prefix": [],
    "label": [
      "Shackle",
      "gargulec"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shadow Word: Pain",
            "text": "Shadow Word: Pain",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shadow Word: Pain",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777230"
    ],
    "prefix": [],
    "label": [
      "SW:P"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Vampiric Touch",
            "text": "Vampiric Touch",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Vampiric Touch",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777223"
    ],
    "prefix": [],
    "label": [
      "VT"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Cretok",
            "text": "Cretok",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Cretok] Devour Magic",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777234"
    ],
    "prefix": [],
    "label": [
      "dev"
    ],
    "icon": [
      "Ability_Creature_Disease_05"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "Felhunter",
            "text": "Felhunter",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Shardless",
            "text": "Shardless",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "spellName",
            "value": "Devour Magic",
            "text": "Devour Magic",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:Felhunter,target=Shardless] Devour Magic",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "devour"
    ],
    "icon": [
      "Spell_Shadow_PainSpike"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Burgundy Wolf",
            "text": "Swift Burgundy Wolf",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Burgundy Wolf",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "spellName",
            "value": "Bronze Drake",
            "text": "Bronze Drake",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [flyable, nomounted] Bronze Drake",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Swift Burgundy Wolf",
            "text": "Swift Burgundy Wolf",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use [noflyable, nomounted] Swift Burgundy Wolf",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mod:alt, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Summon Voidwalker",
            "text": "Summon Voidwalker",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Summon Voidwalker",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Summon Succubus",
            "text": "Summon Succubus",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Summon Succubus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Summon Felhunter",
            "text": "Summon Felhunter",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Summon Felhunter",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Summon Imp",
            "text": "Summon Imp",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Summon Imp",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2013.10.06/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Shardless/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Shardless/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "pet"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellLevel",
            "value": "(Rank 9)",
            "text": "(Rank 9)",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Flash of Light(Rank 9)",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777265"
    ],
    "prefix": [],
    "label": [
      "FoL"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Hand of Freedom",
            "text": "Hand of Freedom",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Hand of Freedom",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777268"
    ],
    "prefix": [],
    "label": [
      "HoF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Hand of protection",
            "text": "Hand of protection",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Hand of protection",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777263"
    ],
    "prefix": [],
    "label": [
      "HoP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Mindblowing",
            "text": "Mindblowing",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "spellName",
            "value": "Sacred Shield",
            "text": "Sacred Shield",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Mindblowing] Sacred Shield",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Arald/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Arald/macros-cache.txt"
    ],
    "id": [
      "16777267"
    ],
    "prefix": [],
    "label": [
      "SS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/3",
            "text": "/3",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "kupie",
            "text": "kupie",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "linkSpell",
            "value": "|cff71d5ff|Hspell:22749|h[Enchant Weapon - Spellpower]|h|r",
            "text": "|cff71d5ff|Hspell:22749|h[Enchant Weapon - Spellpower]|h|r",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "spellName",
            "value": "Molten Core",
            "text": "Molten Core",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "spellName",
            "value": "mam matsy",
            "text": "mam matsy",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/3 kupie |cff71d5ff|Hspell:22749|h[Enchant Weapon - Spellpower]|h|r (Molten Core), mam matsy",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/Feronis/Gaenna/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/Feronis/Gaenna/macros-cache.txt"
    ],
    "id": [
      "16777242"
    ],
    "prefix": [],
    "label": [
      "wtb"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Refille",
            "text": "Refille",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Refille",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt"
    ],
    "id": [
      "114"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Unkylson BoM",
            "text": "Unkylson BoM",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Fire",
            "text": "Fire",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Unkylson BoM / Fire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Amancik BoK",
            "text": "Amancik BoK",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Frost",
            "text": "Frost",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Amancik BoK / Frost",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Helliash BoW",
            "text": "Helliash BoW",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "spellName",
            "value": "Conc",
            "text": "Conc",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Helliash BoW / Conc",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "unknown",
            "value": "<",
            "text": "<",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "brak",
            "text": "brak",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "BoS",
            "text": "BoS",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Devo",
            "text": "Devo",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra <brak> BoS / Devo",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "113"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "Buff"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_1"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  Czesc\n  ^\nUnexpected spellName token: \"Czesc\"\n",
        "line": "Czesc, masz czas dzisiaj o 19 na dokonczenie naszego ICC10? Sindra hc + LK. A jesli nie bedzie dokonczenia, to ja pewnie zbiore jakies icc10 amancikiem, kilka bossow + DB hc.",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "120"
    ],
    "prefix": [
      "$"
    ],
    "label": [
      "Rule"
    ],
    "icon": [
      "Ability_Creature_Cursed_04"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/who",
            "text": "/who",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "numberRange",
            "value": "70-79",
            "text": "70-79",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "arathi warsong strand eye",
            "text": "arathi warsong strand eye",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/who 70-79 arathi warsong strand eye",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "91"
    ],
    "prefix": [
      "@"
    ],
    "label": [
      "twink"
    ],
    "icon": [
      "Spell_Fire_FelFireward"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Crusader Strike",
            "text": "Crusader Strike",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Crusader Strike",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 10,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt"
    ],
    "id": [
      "140",
      "16777356"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "CS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "for i",
            "text": "for i",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "GetMerchantNumItems",
            "text": "GetMerchantNumItems",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "spellName",
            "value": "do local l",
            "text": "do local l",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "spellName",
            "value": "GetMerchantItemLink",
            "text": "GetMerchantItemLink",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 65,
            "lineBreaks": 0,
            "line": 1,
            "col": 66
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 66,
            "lineBreaks": 0,
            "line": 1,
            "col": 67
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "spellName",
            "value": "if l then if l",
            "text": "if l then if l",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "spellName",
            "value": "find",
            "text": "find",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 89,
            "lineBreaks": 0,
            "line": 1,
            "col": 90
          },
          {
            "type": "spellName",
            "value": "Rumsey Rum Black Label",
            "text": "Rumsey Rum Black Label",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "spellName",
            "value": "then BuyMerchantItem",
            "text": "then BuyMerchantItem",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 135,
            "lineBreaks": 0,
            "line": 1,
            "col": 136
          },
          {
            "type": "spellName",
            "value": "i",
            "text": "i",
            "offset": 136,
            "lineBreaks": 0,
            "line": 1,
            "col": 137
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 137,
            "lineBreaks": 0,
            "line": 1,
            "col": 138
          },
          {
            "type": "number",
            "value": "100",
            "text": "100",
            "offset": 138,
            "lineBreaks": 0,
            "line": 1,
            "col": 139
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "spellName",
            "value": "end end end",
            "text": "end end end",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run for i=1,GetMerchantNumItems() do local l=GetMerchantItemLink(i) if l then if l:find(\"Rumsey Rum Black Label\") then BuyMerchantItem(i,100)end end end",
        "ambiguous": false
      }
    ],
    "occurences": 15,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "137"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Vendor"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Death Gate",
            "text": "Death Gate",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Death Gate",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Death Gate",
            "text": "Death Gate",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Death Gate",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Death Gate",
            "text": "Death Gate",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Death Gate",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Dusst/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Dusst/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Deterrence",
            "text": "Deterrence",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Deterrence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Aimed Shot",
            "text": "Aimed Shot",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Aimed Shot",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777242"
    ],
    "prefix": [],
    "label": [
      "Aimed"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Aspect of the Dragonhawk",
            "text": "Aspect of the Dragonhawk",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Aspect of the Dragonhawk",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Aspect of the Cheetah",
            "text": "Aspect of the Cheetah",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Aspect of the Cheetah",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Trueshot Aura",
            "text": "Trueshot Aura",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Trueshot Aura",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777232"
    ],
    "prefix": [],
    "label": [
      "Aspekt"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Rapid Fire",
            "text": "Rapid Fire",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Rapid Fire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Rapid Fire",
            "text": "Rapid Fire",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Rapid Fire",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Call of the Wild",
            "text": "Call of the Wild",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Call of the Wild",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777234"
    ],
    "prefix": [],
    "label": [
      "Bum"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Deterrence",
            "text": "Deterrence",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Deterrence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Chimera Shot",
            "text": "Chimera Shot",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Chimera Shot",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Kill Command",
            "text": "Kill Command",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Kill Command",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Furious Gladiator's Chain Gauntlets",
            "text": "Furious Gladiator's Chain Gauntlets",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Furious Gladiator's Chain Gauntlets",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777241"
    ],
    "prefix": [],
    "label": [
      "Chimera"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Cower",
            "text": "Cower",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Cower",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777244"
    ],
    "prefix": [],
    "label": [
      "Cover"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Deterrence",
            "text": "Deterrence",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Deterrence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Deterrence",
            "text": "Deterrence",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Deterrence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "Dett"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Deterrence",
            "text": "Deterrence",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Deterrence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Explosive Shot",
            "text": "Explosive Shot",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Explosive Shot",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777243"
    ],
    "prefix": [],
    "label": [
      "Expl"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Feed Pet",
            "text": "Feed Pet",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Feed Pet",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Poached Emperor Salmon",
            "text": "Poached Emperor Salmon",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Poached Emperor Salmon",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777223"
    ],
    "prefix": [],
    "label": [
      "Feed"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Rashael",
            "text": "Rashael",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Master's Call",
            "text": "Master's Call",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Rashael] Master's Call",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777231"
    ],
    "prefix": [],
    "label": [
      "MC"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castsequence",
            "text": "/castsequence",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "reset",
            "text": "reset",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "spellName",
            "value": "Wing Clip",
            "text": "Wing Clip",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Raptor Strike",
            "text": "Raptor Strike",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 53,
            "lineBreaks": 0,
            "line": 1,
            "col": 54
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 54,
            "lineBreaks": 0,
            "line": 1,
            "col": 55
          },
          {
            "type": "spellName",
            "value": "Wing Clip",
            "text": "Wing Clip",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castsequence reset=target/3 Wing Clip, Raptor Strike, Wing Clip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castrandom",
            "text": "/castrandom",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "modifier",
            "value": "exists",
            "text": "exists",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "spellName",
            "value": "Mongoose Bite",
            "text": "Mongoose Bite",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castrandom [target=target, exists] Mongoose Bite",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777240"
    ],
    "prefix": [],
    "label": [
      "Melee"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "at",
            "value": "@",
            "text": "@",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "modifier",
            "value": "dead",
            "text": "dead",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Revive Pet",
            "text": "Revive Pet",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [@pet,dead] Revive Pet",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Mend Pet",
            "text": "Mend Pet",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet] Mend Pet",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "Mend"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Time-Lost Proto-Drake",
            "text": "Time-Lost Proto-Drake",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "spellName",
            "value": "Red Skeletal Warhorse",
            "text": "Red Skeletal Warhorse",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] Time-Lost Proto-Drake; Red Skeletal Warhorse",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Time-Lost Proto-Drake",
            "text": "Time-Lost Proto-Drake",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Time-Lost Proto-Drake",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Red Skeletal Warhorse",
            "text": "Red Skeletal Warhorse",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Red Skeletal Warhorse",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Roar of Recovery",
            "text": "Roar of Recovery",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Roar of Recovery",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Roar of Recovery",
            "text": "Roar of Recovery",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Roar of Recovery",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777236"
    ],
    "prefix": [],
    "label": [
      "Recovery"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  serpent\n  ^\nUnexpected spellName token: \"serpent\"\n",
        "line": "serpent",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  chimera\n  ^\nUnexpected spellName token: \"chimera\"\n",
        "line": "chimera",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  aimed\n  ^\nUnexpected spellName token: \"aimed\"\n",
        "line": "aimed",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  spam steady\n  ^\nUnexpected spellName token: \"spam steady\"\n",
        "line": "spam steady",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  chimera\n  ^\nUnexpected spellName token: \"chimera\"\n",
        "line": "chimera",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  aimed\n  ^\nUnexpected spellName token: \"aimed\"\n",
        "line": "aimed",
        "ambiguous": false
      },
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  spam steady\n  ^\nUnexpected spellName token: \"spam steady\"\n",
        "line": "spam steady",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777245"
    ],
    "prefix": [],
    "label": [
      "ROT"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Scatter Shot",
            "text": "Scatter Shot",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Scatter Shot",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Scatter Shot",
            "text": "Scatter Shot",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Scatter Shot",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777237"
    ],
    "prefix": [],
    "label": [
      "Scatter"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Scatter Shot",
            "text": "Scatter Shot",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Scatter Shot",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777238"
    ],
    "prefix": [],
    "label": [
      "ScatterF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Silencing Shot",
            "text": "Silencing Shot",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Silencing Shot",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777239"
    ],
    "prefix": [],
    "label": [
      "SilenceF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [],
        "parsed": false,
        "message": "invalid syntax at line 1 col 1:\n\n  #\n  ^\nUnexpected unknown token: \"#\"\n",
        "line": "#showooltip Web",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Web",
            "text": "Web",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Web",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Pin",
            "text": "Pin",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Pin",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/Feronis/Rashael/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/Feronis/Rashael/macros-cache.txt"
    ],
    "id": [
      "16777235"
    ],
    "prefix": [],
    "label": [
      "Web"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Noshards",
            "text": "Noshards",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "Power Word: Shield",
            "text": "Power Word: Shield",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Noshards] Power Word: Shield",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "90"
    ],
    "prefix": [],
    "label": [
      "Bania"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Intercept",
            "text": "Intercept",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Intercept",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "bladestorm",
            "text": "bladestorm",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura bladestorm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Berserker Stance",
            "text": "Berserker Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Berserker Stance",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "111"
    ],
    "prefix": [],
    "label": [
      "Berserker"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Corroded Skeleton Key",
            "text": "Corroded Skeleton Key",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Corroded Skeleton Key",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Blood Tap",
            "text": "Blood Tap",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Blood Tap",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Bone Shield",
            "text": "Bone Shield",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Bone Shield",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Corroded Skeleton Key",
            "text": "Corroded Skeleton Key",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Corroded Skeleton Key",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "122"
    ],
    "prefix": [],
    "label": [
      "Bone Shield"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "linkItem",
            "value": "item:51392:3365",
            "text": "item:51392:3365",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot  16 item:51392:3365",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": "  ",
            "text": "  ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "linkItem",
            "value": "item:49888:3368",
            "text": "item:49888:3368",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot  16 item:49888:3368",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "119"
    ],
    "prefix": [],
    "label": [
      "bronie"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Bone Shield",
            "text": "Bone Shield",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Bone Shield",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Blood Tap",
            "text": "Blood Tap",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Blood Tap",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Bone Shield",
            "text": "Bone Shield",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Bone Shield",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "123"
    ],
    "prefix": [],
    "label": [
      "BS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "mouseover",
            "text": "mouseover",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Chains of Ice",
            "text": "Chains of Ice",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=mouseover] Chains of Ice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "110"
    ],
    "prefix": [],
    "label": [
      "Chainsy"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Chains of Ice",
            "text": "Chains of Ice",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Chains of Ice",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "75"
    ],
    "prefix": [],
    "label": [
      "Chainsy"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Charge",
            "text": "Charge",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Charge",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Battle Stance",
            "text": "Battle Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Battle Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Charge",
            "text": "Charge",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Charge",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Rend",
            "text": "Rend",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Rend",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Bladestorm",
            "text": "Bladestorm",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Bladestorm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "1"
    ],
    "prefix": [],
    "label": [
      "Charge"
    ],
    "icon": [
      "Ability_Rogue_WrongfullyAccused"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "bladestorm",
            "text": "bladestorm",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura bladestorm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Battle Stance",
            "text": "Battle Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Battle Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Charge",
            "text": "Charge",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Charge",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Hand of Protection",
            "text": "Hand of Protection",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Hand of Protection",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "71"
    ],
    "prefix": [],
    "label": [
      "ChargeF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Death Coil",
            "text": "Death Coil",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellLevel",
            "value": "(Rank 6)",
            "text": "(Rank 6)",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Death Coil(Rank 6)",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "127"
    ],
    "prefix": [],
    "label": [
      "CoilF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Corruption",
            "text": "Corruption",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Corruption",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Corruption",
            "text": "Corruption",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Corruption",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "129"
    ],
    "prefix": [],
    "label": [
      "Corru"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Death Pact",
            "text": "Death Pact",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Death Pact",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Death Pact",
            "text": "Death Pact",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Death Pact",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Runic Healing Potion",
            "text": "Runic Healing Potion",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Runic Healing Potion",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Fel HealthstoneFel Healthstone",
            "text": "Fel HealthstoneFel Healthstone",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Fel HealthstoneFel Healthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "113"
    ],
    "prefix": [],
    "label": [
      "DP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Dancing Rune Weapon",
            "text": "Dancing Rune Weapon",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Dancing Rune Weapon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Dancing Rune Weapon",
            "text": "Dancing Rune Weapon",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Dancing Rune Weapon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "79"
    ],
    "prefix": [],
    "label": [
      "DRW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "107",
      "99"
    ],
    "prefix": [],
    "label": [
      "Focus",
      "focus"
    ],
    "icon": [
      "Ability_Ambush",
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Gnaw",
            "text": "Gnaw",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Gnaw",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Gnaw",
            "text": "Gnaw",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Gnaw",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "30"
    ],
    "prefix": [],
    "label": [
      "Gnaw"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Howling",
            "text": "Howling",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Howling",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Obliterate",
            "text": "Obliterate",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Obliterate",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Rune Strike",
            "text": "Rune Strike",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast !Rune Strike",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Relentless Gladiator's Dreadplate Gauntlets",
            "text": "Relentless Gladiator's Dreadplate Gauntlets",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Relentless Gladiator's Dreadplate Gauntlets",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "49"
    ],
    "prefix": [],
    "label": [
      "HB"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Heart Strike",
            "text": "Heart Strike",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Heart Strike",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Heart Strike",
            "text": "Heart Strike",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Heart Strike",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "exclamation",
            "value": "!",
            "text": "!",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Rune Strike",
            "text": "Rune Strike",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast !Rune Strike",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Scourgelord Gauntlets",
            "text": "Scourgelord Gauntlets",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Scourgelord Gauntlets",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "38"
    ],
    "prefix": [],
    "label": [
      "Heart"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Heroic Throw",
            "text": "Heroic Throw",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Heroic Throw",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Heroic Throw",
            "text": "Heroic Throw",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Heroic Throw",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "61"
    ],
    "prefix": [],
    "label": [
      "Heroic"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Huddle",
            "text": "Huddle",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Huddle",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Huddle",
            "text": "Huddle",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Huddle",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "103"
    ],
    "prefix": [],
    "label": [
      "Huddle"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Berserker Stance",
            "text": "Berserker Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Berserker Stance",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "focus",
            "text": "focus",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Intercept",
            "text": "Intercept",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=focus] Intercept",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "72"
    ],
    "prefix": [],
    "label": [
      "Inter"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetCVar",
            "text": "SetCVar",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "cameraDistanceMax",
            "text": "cameraDistanceMax",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "number",
            "value": "45",
            "text": "45",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetCVar(\"cameraDistanceMax\",45)",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "82"
    ],
    "prefix": [],
    "label": [
      "Kamera"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "pet",
            "text": "pet",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "succubus",
            "text": "succubus",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Seduction",
            "text": "Seduction",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [pet:succubus] Seduction",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/focus",
            "text": "/focus",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          null
        ],
        "parsed": true,
        "message": "",
        "line": "/focus",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "128"
    ],
    "prefix": [],
    "label": [
      "kolejnepetmacro."
    ],
    "icon": [
      "Ability_Warlock_DemonicEmpowerment"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Leap",
            "text": "Leap",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Leap",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Voilyn",
            "text": "Voilyn",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Leap",
            "text": "Leap",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Voilyn] Leap",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "108"
    ],
    "prefix": [],
    "label": [
      "LeapV"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Lichborne",
            "text": "Lichborne",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Lichborne",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "96"
    ],
    "prefix": [],
    "label": [
      "Licz"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "ffx",
            "text": "ffx",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console ffx 0",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "hwPCF",
            "text": "hwPCF",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console hwPCF 1",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "shadowlod",
            "text": "shadowlod",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console shadowlod 0",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "timingmethod",
            "text": "timingmethod",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console timingmethod 1",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "showshadow",
            "text": "showshadow",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console showshadow 0",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "showfootprints",
            "text": "showfootprints",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console showfootprints 0",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "showfootprintparticles",
            "text": "showfootprintparticles",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console showfootprintparticles 0",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "84"
    ],
    "prefix": [],
    "label": [
      "MORE FPS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "groundeffectdist",
            "text": "groundeffectdist",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console groundeffectdist 1",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "smallcull",
            "text": "smallcull",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console smallcull 1",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "skycloudlod",
            "text": "skycloudlod",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console skycloudlod 1",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "characterAmbient",
            "text": "characterAmbient",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console characterAmbient 1",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "extshadowquality",
            "text": "extshadowquality",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console extshadowquality 0",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/console",
            "text": "/console",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "spellName",
            "value": "environmentDetail",
            "text": "environmentDetail",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "numberDecimal",
            "value": "0.5",
            "text": "0.5",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/console environmentDetail 0.5",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "85"
    ],
    "prefix": [],
    "label": [
      "MORE FPS2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Ashes of Al'ar",
            "text": "Ashes of Al'ar",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "spellName",
            "value": "Swift Razzashi Raptor",
            "text": "Swift Razzashi Raptor",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip [flyable] Ashes of Al'ar; Swift Razzashi Raptor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Ashes of Al'ar",
            "text": "Ashes of Al'ar",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Ashes of Al'ar",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Swift Razzashi Raptor",
            "text": "Swift Razzashi Raptor",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Swift Razzashi Raptor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [mounted]",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "116"
    ],
    "prefix": [],
    "label": [
      "Mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Overpower",
            "text": "Overpower",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Overpower",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Bladestorm",
            "text": "Bladestorm",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Bladestorm",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Overpower",
            "text": "Overpower",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Overpower",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cancelaura",
            "text": "/cancelaura",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "spellName",
            "value": "Hand of Protection",
            "text": "Hand of Protection",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cancelaura Hand of Protection",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "112"
    ],
    "prefix": [],
    "label": [
      "Overpower"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Pestilence",
            "text": "Pestilence",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Pestilence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Pestilence",
            "text": "Pestilence",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Pestilence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "105"
    ],
    "prefix": [],
    "label": [
      "Pesti"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Frost Presence",
            "text": "Frost Presence",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Frost Presence",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Unholy Presence",
            "text": "Unholy Presence",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Unholy Presence",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "43"
    ],
    "prefix": [],
    "label": [
      "Presence"
    ],
    "icon": [
      "Spell_Deathknight_BloodPresence"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Shadow Bolt",
            "text": "Shadow Bolt",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellLevel",
            "value": "(Rank 13)",
            "text": "(Rank 13)",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Shadow Bolt(Rank 13)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shadow Bolt",
            "text": "Shadow Bolt",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellLevel",
            "value": "(Rank 13)",
            "text": "(Rank 13)",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shadow Bolt(Rank 13)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Frostsavage Gloves",
            "text": "Frostsavage Gloves",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Frostsavage Gloves",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shadow Cleave",
            "text": "Shadow Cleave",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellMode",
            "value": "(Demon)",
            "text": "(Demon)",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shadow Cleave(Demon)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "126"
    ],
    "prefix": [],
    "label": [
      "SB"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/equipslot",
            "text": "/equipslot",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "number",
            "value": "16",
            "text": "16",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "linkItem",
            "value": "item:51480:3367",
            "text": "item:51480:3367",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equipslot 16 item:51480:3367",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "117"
    ],
    "prefix": [],
    "label": [
      "Spellshatter"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Battle Stance",
            "text": "Battle Stance",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Battle Stance",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "101"
    ],
    "prefix": [],
    "label": [
      "Stance"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Unstable Affliction",
            "text": "Unstable Affliction",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellLevel",
            "value": "(Rank 4)",
            "text": "(Rank 4)",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Unstable Affliction(Rank 4)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Unstable Affliction",
            "text": "Unstable Affliction",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellLevel",
            "value": "(Rank 4)",
            "text": "(Rank 4)",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Unstable Affliction(Rank 4)",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Frostsavage Gloves",
            "text": "Frostsavage Gloves",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use Frostsavage Gloves",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KAROLINA/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KAROLINA/macros-cache.txt"
    ],
    "id": [
      "125"
    ],
    "prefix": [],
    "label": [
      "UA"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Raffael",
            "text": "Raffael",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Dispel Magic",
            "text": "Dispel Magic",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Raffael] Dispel Magic",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777229"
    ],
    "prefix": [],
    "label": [
      "D2"
    ],
    "icon": [
      "Spell_Shaman_ElementalOath"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Eledrin",
            "text": "Eledrin",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Dispel Magic",
            "text": "Dispel Magic",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Eledrin] Dispel Magic",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/Feronis/Emiru/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777218"
    ],
    "prefix": [],
    "label": [
      "D3"
    ],
    "icon": [
      "Spell_Shaman_SpectralTransformation"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "6",
            "text": "6",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",6);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "7",
            "text": "7",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",7);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "asdfasd",
            "text": "asdfasd",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "number",
            "value": "8",
            "text": "8",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"asdfasd\",8);",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.01.16/KASUMI/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.11.29/KASUMI/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [],
    "label": [
      "IconP"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Agimijagi",
            "text": "Agimijagi",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Cleanse",
            "text": "Cleanse",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Agimijagi] Cleanse",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777256"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "C1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Cleanse",
            "text": "Cleanse",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Cleanse",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777267"
    ],
    "prefix": [
      "!",
      "_"
    ],
    "label": [
      "C1",
      "C2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Agimijagi",
            "text": "Agimijagi",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Agimijagi] Flash of Light",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777257"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "FoL1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Flash of Light",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777268"
    ],
    "prefix": [
      "!",
      "_"
    ],
    "label": [
      "FoL1",
      "FoL2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Agimijagi",
            "text": "Agimijagi",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Hand of Freedom",
            "text": "Hand of Freedom",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Agimijagi] Hand of Freedom",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777261"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "HoF1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Agimijagi",
            "text": "Agimijagi",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Hand of Protection",
            "text": "Hand of Protection",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Agimijagi] Hand of Protection",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777254"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "HoP1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Agimijagi",
            "text": "Agimijagi",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Hand of Sacrifice",
            "text": "Hand of Sacrifice",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Agimijagi] Hand of Sacrifice",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777259"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "HoS1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Agimijagi",
            "text": "Agimijagi",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "Sacred Shield",
            "text": "Sacred Shield",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Agimijagi] Sacred Shield",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777266"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "SS1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "Sacred Shield",
            "text": "Sacred Shield",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Emiru] Sacred Shield",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777255"
    ],
    "prefix": [
      "!",
      "_"
    ],
    "label": [
      "SS1",
      "SS2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777247"
    ],
    "prefix": [],
    "label": [
      "HoW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Frostwolf Howler",
            "text": "Frostwolf Howler",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Frostwolf Howler",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Swift Red Wind Rider",
            "text": "Swift Red Wind Rider",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Swift Red Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Frostwolf Howler",
            "text": "Frostwolf Howler",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Frostwolf Howler",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Crusader Aura",
            "text": "Crusader Aura",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mounted] Crusader Aura",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Avenging Wrath",
            "text": "Avenging Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Avenging Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777270"
    ],
    "prefix": [],
    "label": [
      "Nuke"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Aegis of the Coliseum",
            "text": "Aegis of the Coliseum",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Aegis of the Coliseum",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Wrathful Gladiator's Gavel",
            "text": "Wrathful Gladiator's Gavel",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Wrathful Gladiator's Gavel",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Aegis of the Coliseum",
            "text": "Aegis of the Coliseum",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Aegis of the Coliseum",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777263"
    ],
    "prefix": [],
    "label": [
      "Shield"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Grounding Totem",
            "text": "Grounding Totem",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Grounding Totem",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777220",
      "16777240"
    ],
    "prefix": [],
    "label": [
      "GT"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Orange Raptor",
            "text": "Swift Orange Raptor",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Orange Raptor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Swift Red Wind Rider",
            "text": "Swift Red Wind Rider",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Swift Red Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Swift Orange Raptor",
            "text": "Swift Orange Raptor",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Swift Orange Raptor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Black War Mammoth",
            "text": "Black War Mammoth",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Black War Mammoth",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777219"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Tremor Totem",
            "text": "Tremor Totem",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Tremor Totem",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Heflena/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777221",
      "16777241"
    ],
    "prefix": [],
    "label": [
      "TT"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/4",
            "text": "/4",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "linkProfession",
            "value": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
            "text": "|cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 158,
            "lineBreaks": 0,
            "line": 1,
            "col": 159
          },
          {
            "type": "spellName",
            "value": "wszystkie przepisy WotLK",
            "text": "wszystkie przepisy WotLK",
            "offset": 159,
            "lineBreaks": 0,
            "line": 1,
            "col": 160
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 183,
            "lineBreaks": 0,
            "line": 1,
            "col": 184
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "spellName",
            "value": "tylko twoje matsy",
            "text": "tylko twoje matsy",
            "offset": 185,
            "lineBreaks": 0,
            "line": 1,
            "col": 186
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/4 |cffffd000|Htrade:51302:450:450:18F1C7E9:e+///f//////////v//H+f/////P/7/B56d/Pgf+//BwMHAAX4////HAA/x8D4/vK5////////////////////Dw///D|h[Leatherworking]|h|r wszystkie przepisy WotLK, tylko twoje matsy",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/Feronis/Irrissa/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/Feronis/Irrissa/macros-cache.txt"
    ],
    "id": [
      "16777233"
    ],
    "prefix": [],
    "label": [
      "WTS"
    ],
    "icon": [
      "Spell_Holy_ChampionsGrace"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "thangorodrim",
            "text": "thangorodrim",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar thangorodrim",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/ARALD/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/ARALD/macros-cache.txt"
    ],
    "id": [
      "114"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Vanyaelnesar",
            "text": "Vanyaelnesar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Cleanse",
            "text": "Cleanse",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Vanyaelnesar] Cleanse",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777361"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "Clean"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Vanyaelnesar",
            "text": "Vanyaelnesar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Flash of Light",
            "text": "Flash of Light",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Vanyaelnesar] Flash of Light",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777365"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "FoL"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Vanyaelnesar",
            "text": "Vanyaelnesar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Hand of Freedom",
            "text": "Hand of Freedom",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Vanyaelnesar] Hand of Freedom",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777362"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "HoF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Vanyaelnesar",
            "text": "Vanyaelnesar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Hand of Protection",
            "text": "Hand of Protection",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Vanyaelnesar] Hand of Protection",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777363"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "HoP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Vanyaelnesar",
            "text": "Vanyaelnesar",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "spellName",
            "value": "Hand of Sacrifice",
            "text": "Hand of Sacrifice",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [target=Vanyaelnesar] Hand of Sacrifice",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777364"
    ],
    "prefix": [
      "!"
    ],
    "label": [
      "HoS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/castsequence",
            "text": "/castsequence",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "reset",
            "text": "reset",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "number",
            "value": "50",
            "text": "50",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Divine Shield",
            "text": "Divine Shield",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/castsequence reset=50 Divine Shield, Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 6,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777338"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "bubel"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hammer of the Righteous",
            "text": "Hammer of the Righteous",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hammer of the Righteous",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 5,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/Lordaeron/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/Lordaeron/Ramener/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyabank/macros-cache.txt"
    ],
    "id": [
      "16777366"
    ],
    "prefix": [],
    "label": [
      "HoR"
    ],
    "icon": [
      "Ability_Paladin_HammeroftheRighteous"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Engineering",
            "text": "Engineering",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Engineering",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "MOLL-E",
            "text": "MOLL-E",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] MOLL-E",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "alt",
            "text": "alt",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Jeeves",
            "text": "Jeeves",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:alt] Jeeves",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "ctrl",
            "text": "ctrl",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "Smelting",
            "text": "Smelting",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:ctrl] Smelting",
        "ambiguous": false
      }
    ],
    "occurences": 8,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "123"
    ],
    "prefix": [],
    "label": [
      "Engi"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "spellName",
            "value": "Hearthstone",
            "text": "Hearthstone",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod] Hearthstone",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mod",
            "text": "mod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "Wormhole Generator: Northrend",
            "text": "Wormhole Generator: Northrend",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mod:shift] Wormhole Generator: Northrend",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "139"
    ],
    "prefix": [],
    "label": [
      "HS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Summon Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Summon Charger",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.09/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "140"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "devilsmile",
            "text": "devilsmile",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar devilsmile",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "106"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/run",
            "text": "/run",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "WG in",
            "text": "WG in",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "spellName",
            "value": "GetWintergraspWaitTime",
            "text": "GetWintergraspWaitTime",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 41,
            "lineBreaks": 0,
            "line": 1,
            "col": 42
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 42,
            "lineBreaks": 0,
            "line": 1,
            "col": 43
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 43,
            "lineBreaks": 0,
            "line": 1,
            "col": 44
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 44,
            "lineBreaks": 0,
            "line": 1,
            "col": 45
          },
          {
            "type": "spellName",
            "value": "floor",
            "text": "floor",
            "offset": 45,
            "lineBreaks": 0,
            "line": 1,
            "col": 46
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          },
          {
            "type": "spellName",
            "value": "if t",
            "text": "if t",
            "offset": 51,
            "lineBreaks": 0,
            "line": 1,
            "col": 52
          },
          {
            "type": "unknown",
            "value": "~",
            "text": "~",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "nil then h",
            "text": "nil then h",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 67,
            "lineBreaks": 0,
            "line": 1,
            "col": 68
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 68,
            "lineBreaks": 0,
            "line": 1,
            "col": 69
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 69,
            "lineBreaks": 0,
            "line": 1,
            "col": 70
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 70,
            "lineBreaks": 0,
            "line": 1,
            "col": 71
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 71,
            "lineBreaks": 0,
            "line": 1,
            "col": 72
          },
          {
            "type": "number",
            "value": "3600",
            "text": "3600",
            "offset": 72,
            "lineBreaks": 0,
            "line": 1,
            "col": 73
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 76,
            "lineBreaks": 0,
            "line": 1,
            "col": 77
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 77,
            "lineBreaks": 0,
            "line": 1,
            "col": 78
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 78,
            "lineBreaks": 0,
            "line": 1,
            "col": 79
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 79,
            "lineBreaks": 0,
            "line": 1,
            "col": 80
          },
          {
            "type": "spellName",
            "value": "f",
            "text": "f",
            "offset": 80,
            "lineBreaks": 0,
            "line": 1,
            "col": 81
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 81,
            "lineBreaks": 0,
            "line": 1,
            "col": 82
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 82,
            "lineBreaks": 0,
            "line": 1,
            "col": 83
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 83,
            "lineBreaks": 0,
            "line": 1,
            "col": 84
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 84,
            "lineBreaks": 0,
            "line": 1,
            "col": 85
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 86,
            "lineBreaks": 0,
            "line": 1,
            "col": 87
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 87,
            "lineBreaks": 0,
            "line": 1,
            "col": 88
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 88,
            "lineBreaks": 0,
            "line": 1,
            "col": 89
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 90,
            "lineBreaks": 0,
            "line": 1,
            "col": 91
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 91,
            "lineBreaks": 0,
            "line": 1,
            "col": 92
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 92,
            "lineBreaks": 0,
            "line": 1,
            "col": 93
          },
          {
            "type": "spellName",
            "value": "t",
            "text": "t",
            "offset": 93,
            "lineBreaks": 0,
            "line": 1,
            "col": 94
          },
          {
            "type": "unknown",
            "value": "%",
            "text": "%",
            "offset": 94,
            "lineBreaks": 0,
            "line": 1,
            "col": 95
          },
          {
            "type": "number",
            "value": "60",
            "text": "60",
            "offset": 95,
            "lineBreaks": 0,
            "line": 1,
            "col": 96
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 97,
            "lineBreaks": 0,
            "line": 1,
            "col": 98
          },
          {
            "type": "spellName",
            "value": "if h",
            "text": "if h",
            "offset": 98,
            "lineBreaks": 0,
            "line": 1,
            "col": 99
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 102,
            "lineBreaks": 0,
            "line": 1,
            "col": 103
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 103,
            "lineBreaks": 0,
            "line": 1,
            "col": 104
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 104,
            "lineBreaks": 0,
            "line": 1,
            "col": 105
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 105,
            "lineBreaks": 0,
            "line": 1,
            "col": 106
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 111,
            "lineBreaks": 0,
            "line": 1,
            "col": 112
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 112,
            "lineBreaks": 0,
            "line": 1,
            "col": 113
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 113,
            "lineBreaks": 0,
            "line": 1,
            "col": 114
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 114,
            "lineBreaks": 0,
            "line": 1,
            "col": 115
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 115,
            "lineBreaks": 0,
            "line": 1,
            "col": 116
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 116,
            "lineBreaks": 0,
            "line": 1,
            "col": 117
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 117,
            "lineBreaks": 0,
            "line": 1,
            "col": 118
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 118,
            "lineBreaks": 0,
            "line": 1,
            "col": 119
          },
          {
            "type": "spellName",
            "value": "h",
            "text": "h",
            "offset": 119,
            "lineBreaks": 0,
            "line": 1,
            "col": 120
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 120,
            "lineBreaks": 0,
            "line": 1,
            "col": 121
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 121,
            "lineBreaks": 0,
            "line": 1,
            "col": 122
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 122,
            "lineBreaks": 0,
            "line": 1,
            "col": 123
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 123,
            "lineBreaks": 0,
            "line": 1,
            "col": 124
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 126,
            "lineBreaks": 0,
            "line": 1,
            "col": 127
          },
          {
            "type": "spellName",
            "value": "if m",
            "text": "if m",
            "offset": 127,
            "lineBreaks": 0,
            "line": 1,
            "col": 128
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 131,
            "lineBreaks": 0,
            "line": 1,
            "col": 132
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 132,
            "lineBreaks": 0,
            "line": 1,
            "col": 133
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 133,
            "lineBreaks": 0,
            "line": 1,
            "col": 134
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 134,
            "lineBreaks": 0,
            "line": 1,
            "col": 135
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 140,
            "lineBreaks": 0,
            "line": 1,
            "col": 141
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 141,
            "lineBreaks": 0,
            "line": 1,
            "col": 142
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 142,
            "lineBreaks": 0,
            "line": 1,
            "col": 143
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 143,
            "lineBreaks": 0,
            "line": 1,
            "col": 144
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 144,
            "lineBreaks": 0,
            "line": 1,
            "col": 145
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 145,
            "lineBreaks": 0,
            "line": 1,
            "col": 146
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 146,
            "lineBreaks": 0,
            "line": 1,
            "col": 147
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 147,
            "lineBreaks": 0,
            "line": 1,
            "col": 148
          },
          {
            "type": "spellName",
            "value": "m",
            "text": "m",
            "offset": 148,
            "lineBreaks": 0,
            "line": 1,
            "col": 149
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 149,
            "lineBreaks": 0,
            "line": 1,
            "col": 150
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 150,
            "lineBreaks": 0,
            "line": 1,
            "col": 151
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 151,
            "lineBreaks": 0,
            "line": 1,
            "col": 152
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 152,
            "lineBreaks": 0,
            "line": 1,
            "col": 153
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 155,
            "lineBreaks": 0,
            "line": 1,
            "col": 156
          },
          {
            "type": "spellName",
            "value": "if s",
            "text": "if s",
            "offset": 156,
            "lineBreaks": 0,
            "line": 1,
            "col": 157
          },
          {
            "type": "unknown",
            "value": ">",
            "text": ">",
            "offset": 160,
            "lineBreaks": 0,
            "line": 1,
            "col": 161
          },
          {
            "type": "number",
            "value": "0",
            "text": "0",
            "offset": 161,
            "lineBreaks": 0,
            "line": 1,
            "col": 162
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 162,
            "lineBreaks": 0,
            "line": 1,
            "col": 163
          },
          {
            "type": "spellName",
            "value": "then x",
            "text": "then x",
            "offset": 163,
            "lineBreaks": 0,
            "line": 1,
            "col": 164
          },
          {
            "type": "equal",
            "value": "=",
            "text": "=",
            "offset": 169,
            "lineBreaks": 0,
            "line": 1,
            "col": 170
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 170,
            "lineBreaks": 0,
            "line": 1,
            "col": 171
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 171,
            "lineBreaks": 0,
            "line": 1,
            "col": 172
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 172,
            "lineBreaks": 0,
            "line": 1,
            "col": 173
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 173,
            "lineBreaks": 0,
            "line": 1,
            "col": 174
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 174,
            "lineBreaks": 0,
            "line": 1,
            "col": 175
          },
          {
            "type": "unknown",
            "value": ".",
            "text": ".",
            "offset": 175,
            "lineBreaks": 0,
            "line": 1,
            "col": 176
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 176,
            "lineBreaks": 0,
            "line": 1,
            "col": 177
          },
          {
            "type": "spellName",
            "value": "s",
            "text": "s",
            "offset": 177,
            "lineBreaks": 0,
            "line": 1,
            "col": 178
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 178,
            "lineBreaks": 0,
            "line": 1,
            "col": 179
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 179,
            "lineBreaks": 0,
            "line": 1,
            "col": 180
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 180,
            "lineBreaks": 0,
            "line": 1,
            "col": 181
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 183,
            "lineBreaks": 0,
            "line": 1,
            "col": 184
          },
          {
            "type": "spellName",
            "value": "print",
            "text": "print",
            "offset": 184,
            "lineBreaks": 0,
            "line": 1,
            "col": 185
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 189,
            "lineBreaks": 0,
            "line": 1,
            "col": 190
          },
          {
            "type": "spellName",
            "value": "x",
            "text": "x",
            "offset": 190,
            "lineBreaks": 0,
            "line": 1,
            "col": 191
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 191,
            "lineBreaks": 0,
            "line": 1,
            "col": 192
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 192,
            "lineBreaks": 0,
            "line": 1,
            "col": 193
          },
          {
            "type": "spellName",
            "value": "else print",
            "text": "else print",
            "offset": 193,
            "lineBreaks": 0,
            "line": 1,
            "col": 194
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 203,
            "lineBreaks": 0,
            "line": 1,
            "col": 204
          },
          {
            "type": "unknown",
            "value": "'",
            "text": "'",
            "offset": 204,
            "lineBreaks": 0,
            "line": 1,
            "col": 205
          },
          {
            "type": "spellName",
            "value": "WG in progress",
            "text": "WG in progress",
            "offset": 205,
            "lineBreaks": 0,
            "line": 1,
            "col": 206
          },
          {
            "type": "unknown",
            "value": "'",
            "text": "'",
            "offset": 219,
            "lineBreaks": 0,
            "line": 1,
            "col": 220
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 220,
            "lineBreaks": 0,
            "line": 1,
            "col": 221
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 221,
            "lineBreaks": 0,
            "line": 1,
            "col": 222
          },
          {
            "type": "spellName",
            "value": "end",
            "text": "end",
            "offset": 222,
            "lineBreaks": 0,
            "line": 1,
            "col": 223
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/run x=\"WG in \";t=GetWintergraspWaitTime();f=floor;if t~=nil then h=f(t/3600);m=f(t/60)%60;s=t%60;if h>0 then x=x..h..\"h \";end;if m>0 then x=x..m..\"m \";end;if s>0 then x=x..s..\"s\";end;print(x);else print('WG in progress');end",
        "ambiguous": false
      }
    ],
    "occurences": 9,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "118"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "WG"
    ],
    "icon": [
      "Spell_Shadow_SoulLeech_1"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Summon Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Summon Charger",
        "ambiguous": false
      }
    ],
    "occurences": 3,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "140"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Shield of the Righteous",
            "text": "Shield of the Righteous",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Shield of the Righteous",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 7,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2016.08.20/AUTIOCH2/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH2/macros-cache.txt"
    ],
    "id": [
      "148",
      "16777271"
    ],
    "prefix": [
      "#",
      "x"
    ],
    "label": [
      "SoR"
    ],
    "icon": [
      "Ability_Paladin_ShieldofVengeance",
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/use",
            "text": "/use",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/use 10",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Hammer of Wrath",
            "text": "Hammer of Wrath",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Hammer of Wrath",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777247"
    ],
    "prefix": [
      "#"
    ],
    "label": [
      "HoW"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Summon Warhorse",
            "text": "Summon Warhorse",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Summon Warhorse",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Summon Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "Crusader Aura",
            "text": "Crusader Aura",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [mounted] Crusader Aura",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/Feronis/Amancik/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777225"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "BoM",
            "text": "BoM",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra BoM",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "BoW",
            "text": "BoW",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra BoW",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "BoK",
            "text": "BoK",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra BoK",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "BoS",
            "text": "BoS",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra BoS",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "150"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Buff"
    ],
    "icon": [
      "Spell_Fire_Fire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Knucklerot",
            "text": "Knucklerot",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Knucklerot",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "106"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Summon Charger",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Swift Purple Wind Rider",
            "text": "Swift Purple Wind Rider",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Swift Purple Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Summon Charger",
            "text": "Summon Charger",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Summon Charger",
        "ambiguous": false
      }
    ],
    "occurences": 4,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.08.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "140"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Nexus Drake Hatchling",
            "text": "Nexus Drake Hatchling",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Nexus Drake Hatchling",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.08/AUTIOCH/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.10.19/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "106"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Edge of Ruin",
            "text": "Edge of Ruin",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Edge of Ruin",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Edge of Ruin",
            "text": "Edge of Ruin",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Edge of Ruin",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777273"
    ],
    "prefix": [],
    "label": [
      "e2h"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Royal Crest of Lordaeron",
            "text": "Royal Crest of Lordaeron",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Royal Crest of Lordaeron",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Peacekeeper Blade",
            "text": "Peacekeeper Blade",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Peacekeeper Blade",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/equip",
            "text": "/equip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "Royal Crest of Lordaeron",
            "text": "Royal Crest of Lordaeron",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/equip Royal Crest of Lordaeron",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Amancik/macros-cache.txt"
    ],
    "id": [
      "16777272"
    ],
    "prefix": [],
    "label": [
      "eS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 26,
            "lineBreaks": 0,
            "line": 1,
            "col": 27
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,flyable, nomounted] Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomodifier",
            "text": "nomodifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 18,
            "lineBreaks": 0,
            "line": 1,
            "col": 19
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "spellName",
            "value": "Swift Olive Raptor",
            "text": "Swift Olive Raptor",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomodifier,noflyable, nomounted] Swift Olive Raptor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "modifier",
            "text": "modifier",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "modifier",
            "value": "shift",
            "text": "shift",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Swift Olive Raptor",
            "text": "Swift Olive Raptor",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [modifier:shift] Swift Olive Raptor",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/dismount",
            "text": "/dismount",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 9,
            "lineBreaks": 0,
            "line": 1,
            "col": 10
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 10,
            "lineBreaks": 0,
            "line": 1,
            "col": 11
          },
          {
            "type": "spellName",
            "value": "noflying",
            "text": "noflying",
            "offset": 11,
            "lineBreaks": 0,
            "line": 1,
            "col": 12
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "mounted",
            "text": "mounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/dismount [noflying, mounted]",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/Feronis/Heflena/macros-cache.txt"
    ],
    "id": [
      "16777217"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "player",
            "text": "player",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"player\",1);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party1\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party2\",3);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party3\",2);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "party",
            "text": "party",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "5",
            "text": "5",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"party4\",5);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "Shadowfiend",
            "text": "Shadowfiend",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "number",
            "value": "7",
            "text": "7",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 40,
            "lineBreaks": 0,
            "line": 1,
            "col": 41
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"Shadowfiend\",7); )",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "98"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Icon"
    ],
    "icon": [
      "Spell_Fire_BlueFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Asius",
            "text": "Asius",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar Asius",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "106"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/who",
            "text": "/who",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "arena ruins",
            "text": "arena ruins",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/who arena ruins",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "160"
    ],
    "prefix": [],
    "label": [
      "arena"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Yaxon BoW",
            "text": "Yaxon BoW",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Yaxon BoW",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Amancik Bok",
            "text": "Amancik Bok",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "slash",
            "value": "/",
            "text": "/",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "spellName",
            "value": "BoS",
            "text": "BoS",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Amancik Bok/BoS",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Twojnick AP shoult",
            "text": "Twojnick AP shoult",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Twojnick AP shoult",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/ra",
            "text": "/ra",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "Benon HP shout",
            "text": "Benon HP shout",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/ra Benon HP shout",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "155"
    ],
    "prefix": [],
    "label": [
      "BLESS"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/inv",
            "text": "/inv",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Emiru",
            "text": "Emiru",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/inv Emiru",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/inv",
            "text": "/inv",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Agimijagi",
            "text": "Agimijagi",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/inv Agimijagi",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/inv",
            "text": "/inv",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Benon",
            "text": "Benon",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/inv Benon",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/inv",
            "text": "/inv",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Starydran",
            "text": "Starydran",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/inv Starydran",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/inv",
            "text": "/inv",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Twojnick",
            "text": "Twojnick",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/inv Twojnick",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/inv",
            "text": "/inv",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Martynqa",
            "text": "Martynqa",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/inv Martynqa",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/inv",
            "text": "/inv",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "Quenth",
            "text": "Quenth",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/inv Quenth",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "151"
    ],
    "prefix": [],
    "label": [
      "invites"
    ],
    "icon": [
      "Ability_Creature_Cursed_04"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "channel",
            "value": "/4",
            "text": "/4",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "ToC",
            "text": "ToC",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "number",
            "value": "10",
            "text": "10",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "spellName",
            "value": "n LF",
            "text": "n LF",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 14,
            "lineBreaks": 0,
            "line": 1,
            "col": 15
          },
          {
            "type": "spellName",
            "value": "rdps",
            "text": "rdps",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 19,
            "lineBreaks": 0,
            "line": 1,
            "col": 20
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "spellName",
            "value": "ele shaman",
            "text": "ele shaman",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/4 ToC10n LF 1 rdps (ele shaman)",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "157"
    ],
    "prefix": [],
    "label": [
      "LF"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "number",
            "value": "1",
            "text": "1",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "faza polega na zbiciu hp bez odpalania CDs",
            "text": "faza polega na zbiciu hp bez odpalania CDs",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw 1 faza polega na zbiciu hp bez odpalania CDs",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "ZAWSZE stoimy obok smoka",
            "text": "ZAWSZE stoimy obok smoka",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "spellName",
            "value": "pod skrzydlami",
            "text": "pod skrzydlami",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw ZAWSZE stoimy obok smoka, pod skrzydlami",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "153"
    ],
    "prefix": [],
    "label": [
      "ONY1"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "number",
            "value": "2",
            "text": "2",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "faza Onyxia lata",
            "text": "faza Onyxia lata",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "spellName",
            "value": "rdps caly czas ja bija",
            "text": "rdps caly czas ja bija",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 46,
            "lineBreaks": 0,
            "line": 1,
            "col": 47
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 47,
            "lineBreaks": 0,
            "line": 1,
            "col": 48
          },
          {
            "type": "spellName",
            "value": "mdps bije addy",
            "text": "mdps bije addy",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw 2 faza Onyxia lata, rdps caly czas ja bija, mdps bije addy",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "jak bedzie breath",
            "text": "jak bedzie breath",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "spellName",
            "value": "trzeba uciekac na boki i patrzec",
            "text": "trzeba uciekac na boki i patrzec",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 55,
            "lineBreaks": 0,
            "line": 1,
            "col": 56
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 56,
            "lineBreaks": 0,
            "line": 1,
            "col": 57
          },
          {
            "type": "spellName",
            "value": "gdzie bedzie zionac ogniem",
            "text": "gdzie bedzie zionac ogniem",
            "offset": 57,
            "lineBreaks": 0,
            "line": 1,
            "col": 58
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw jak bedzie breath, trzeba uciekac na boki i patrzec, gdzie bedzie zionac ogniem",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "154"
    ],
    "prefix": [],
    "label": [
      "ONY2"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "number",
            "value": "3",
            "text": "3",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "faza Onyxia laduje",
            "text": "faza Onyxia laduje",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 24,
            "lineBreaks": 0,
            "line": 1,
            "col": 25
          },
          {
            "type": "spellName",
            "value": "i co jakis czas fearuje",
            "text": "i co jakis czas fearuje",
            "offset": 25,
            "lineBreaks": 0,
            "line": 1,
            "col": 26
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 48,
            "lineBreaks": 0,
            "line": 1,
            "col": 49
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 49,
            "lineBreaks": 0,
            "line": 1,
            "col": 50
          },
          {
            "type": "spellName",
            "value": "szamani musza postawic tremor totem",
            "text": "szamani musza postawic tremor totem",
            "offset": 50,
            "lineBreaks": 0,
            "line": 1,
            "col": 51
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw 3 faza Onyxia laduje,i co jakis czas fearuje, szamani musza postawic tremor totem",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "chat",
            "value": "/rw",
            "text": "/rw",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "spellName",
            "value": "tutaj odpalamy BL i wszystkie CDs",
            "text": "tutaj odpalamy BL i wszystkie CDs",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 37,
            "lineBreaks": 0,
            "line": 1,
            "col": 38
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          },
          {
            "type": "spellName",
            "value": "nadal bijemy z boku",
            "text": "nadal bijemy z boku",
            "offset": 39,
            "lineBreaks": 0,
            "line": 1,
            "col": 40
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 58,
            "lineBreaks": 0,
            "line": 1,
            "col": 59
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 59,
            "lineBreaks": 0,
            "line": 1,
            "col": 60
          },
          {
            "type": "spellName",
            "value": "jak to ze smokami",
            "text": "jak to ze smokami",
            "offset": 60,
            "lineBreaks": 0,
            "line": 1,
            "col": 61
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/rw tutaj odpalamy BL i wszystkie CDs, nadal bijemy z boku, jak to ze smokami",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "152"
    ],
    "prefix": [],
    "label": [
      "ONY3"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetCVar",
            "text": "SetCVar",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 15,
            "lineBreaks": 0,
            "line": 1,
            "col": 16
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 16,
            "lineBreaks": 0,
            "line": 1,
            "col": 17
          },
          {
            "type": "spellName",
            "value": "cameraDistanceMax",
            "text": "cameraDistanceMax",
            "offset": 17,
            "lineBreaks": 0,
            "line": 1,
            "col": 18
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 35,
            "lineBreaks": 0,
            "line": 1,
            "col": 36
          },
          {
            "type": "number",
            "value": "90",
            "text": "90",
            "offset": 36,
            "lineBreaks": 0,
            "line": 1,
            "col": 37
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 38,
            "lineBreaks": 0,
            "line": 1,
            "col": 39
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetCVar(\"cameraDistanceMax\",90)",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "159"
    ],
    "prefix": [],
    "label": [
      "t"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "chat",
            "value": "/p",
            "text": "/p",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 2,
            "lineBreaks": 0,
            "line": 1,
            "col": 3
          },
          {
            "type": "spellName",
            "value": "czesc",
            "text": "czesc",
            "offset": 3,
            "lineBreaks": 0,
            "line": 1,
            "col": 4
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/p czesc,",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/AUTIOCH/macros-cache.txt"
    ],
    "id": [
      "156"
    ],
    "prefix": [],
    "label": [
      "ToCH"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/stopcasting",
            "text": "/stopcasting",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/stopcasting",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Dispersion",
            "text": "Dispersion",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Dispersion",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/Feronis/Emiru/macros-cache.txt"
    ],
    "id": [
      "16777221"
    ],
    "prefix": [],
    "label": [
      "Dispersion"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/cleartarget",
            "text": "/cleartarget",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cleartarget",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/tar",
            "text": "/tar",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 4,
            "lineBreaks": 0,
            "line": 1,
            "col": 5
          },
          {
            "type": "spellName",
            "value": "umis",
            "text": "umis",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/tar umis",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "SetRaidTarget",
            "text": "SetRaidTarget",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "target",
            "text": "target",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "unknown",
            "value": "\"",
            "text": "\"",
            "offset": 29,
            "lineBreaks": 0,
            "line": 1,
            "col": 30
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "number",
            "value": "4",
            "text": "4",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "semicolon",
            "value": ";",
            "text": ";",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script SetRaidTarget(\"target\",4);",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      }
    ],
    "occurences": 2,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt",
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "106"
    ],
    "prefix": [
      "_"
    ],
    "label": [
      "Tar"
    ],
    "icon": [
      "Spell_Fire_FelFire"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "command",
            "value": "/follow",
            "text": "/follow",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "Amancik",
            "text": "Amancik",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/follow Amancik",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt"
    ],
    "id": [
      "141"
    ],
    "prefix": [],
    "label": [
      "FOLLOW"
    ],
    "icon": [
      "Ability_PierceDamage"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Blue Wind Rider",
            "text": "Blue Wind Rider",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Blue Wind Rider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Swift Purple Hawkstrider",
            "text": "Swift Purple Hawkstrider",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Swift Purple Hawkstrider",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU/macros-cache.txt"
    ],
    "id": [
      "140"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Devouring Plague",
            "text": "Devouring Plague",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Devouring Plague",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Inner Focus",
            "text": "Inner Focus",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Inner Focus",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/script",
            "text": "/script",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "spellName",
            "value": "UIErrorsFrame",
            "text": "UIErrorsFrame",
            "offset": 8,
            "lineBreaks": 0,
            "line": 1,
            "col": 9
          },
          {
            "type": "colon",
            "value": ":",
            "text": ":",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "spellName",
            "value": "Clear",
            "text": "Clear",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "unknown",
            "value": "(",
            "text": "(",
            "offset": 27,
            "lineBreaks": 0,
            "line": 1,
            "col": 28
          },
          {
            "type": "unknown",
            "value": ")",
            "text": ")",
            "offset": 28,
            "lineBreaks": 0,
            "line": 1,
            "col": 29
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/script UIErrorsFrame:Clear()",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "spellName",
            "value": "Devouring Plague",
            "text": "Devouring Plague",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast Devouring Plague",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/startattack",
            "text": "/startattack",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/startattack",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/Lordaeron/Vanyaelnesar/macros-cache.txt"
    ],
    "id": [
      "16777356"
    ],
    "prefix": [],
    "label": [
      "DP"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  },
  {
    "lines": [
      {
        "results": [
          {
            "type": "tooltip",
            "value": "#showtooltip",
            "text": "#showtooltip",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "spellName",
            "value": "Swift Purple Hawkstrider",
            "text": "Swift Purple Hawkstrider",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          }
        ],
        "parsed": true,
        "message": "",
        "line": "#showtooltip Swift Purple Hawkstrider",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "flyable",
            "text": "flyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 20,
            "lineBreaks": 0,
            "line": 1,
            "col": 21
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 21,
            "lineBreaks": 0,
            "line": 1,
            "col": 22
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 30,
            "lineBreaks": 0,
            "line": 1,
            "col": 31
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 31,
            "lineBreaks": 0,
            "line": 1,
            "col": 32
          },
          {
            "type": "spellName",
            "value": "Flying Carpet",
            "text": "Flying Carpet",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,flyable,nomounted] Flying Carpet",
        "ambiguous": false
      },
      {
        "results": [
          {
            "type": "command",
            "value": "/cast",
            "text": "/cast",
            "offset": 0,
            "lineBreaks": 0,
            "line": 1,
            "col": 1
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 5,
            "lineBreaks": 0,
            "line": 1,
            "col": 6
          },
          {
            "type": "bracketSquareOpen",
            "value": "[",
            "text": "[",
            "offset": 6,
            "lineBreaks": 0,
            "line": 1,
            "col": 7
          },
          {
            "type": "modifier",
            "value": "nomod",
            "text": "nomod",
            "offset": 7,
            "lineBreaks": 0,
            "line": 1,
            "col": 8
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 12,
            "lineBreaks": 0,
            "line": 1,
            "col": 13
          },
          {
            "type": "modifier",
            "value": "noflyable",
            "text": "noflyable",
            "offset": 13,
            "lineBreaks": 0,
            "line": 1,
            "col": 14
          },
          {
            "type": "comma",
            "value": ",",
            "text": ",",
            "offset": 22,
            "lineBreaks": 0,
            "line": 1,
            "col": 23
          },
          {
            "type": "modifier",
            "value": "nomounted",
            "text": "nomounted",
            "offset": 23,
            "lineBreaks": 0,
            "line": 1,
            "col": 24
          },
          {
            "type": "bracketSquareClose",
            "value": "]",
            "text": "]",
            "offset": 32,
            "lineBreaks": 0,
            "line": 1,
            "col": 33
          },
          {
            "type": "space",
            "value": " ",
            "text": " ",
            "offset": 33,
            "lineBreaks": 0,
            "line": 1,
            "col": 34
          },
          {
            "type": "spellName",
            "value": "Swift Purple Hawkstrider",
            "text": "Swift Purple Hawkstrider",
            "offset": 34,
            "lineBreaks": 0,
            "line": 1,
            "col": 35
          }
        ],
        "parsed": true,
        "message": "",
        "line": "/cast [nomod,noflyable,nomounted] Swift Purple Hawkstrider",
        "ambiguous": false
      }
    ],
    "occurences": 1,
    "filename": [
      "e:/projects/wow configs/wow wotlk/WTF/2017.11.05/EMIRU123/macros-cache.txt"
    ],
    "id": [
      "140"
    ],
    "prefix": [],
    "label": [
      "mount"
    ],
    "icon": [
      "INV_Misc_QuestionMark"
    ]
  }
]